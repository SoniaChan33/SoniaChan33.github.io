<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CSS</title>
    <url>/2021/06/15/CSS/</url>
    <content><![CDATA[<p><strong>cascading style sheets</strong> </p>
<h2 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h2><p> <strong>行内样式（优先级最高）、内部样式、外部样式(最常用的)</strong></p>
<span id="more"></span>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        【书写方式2:内部样式】</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">h1</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-family</span>: <span class="string">&quot;宋体&quot;</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        【书写方式3:外部样式】</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/样式.css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        【书写方式1：行内样式】</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;color: deeppink;font-family: &#x27;宋体&#x27;;&quot;</span>&gt;</span>This is a h1 title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<img src="/2021/06/15/CSS/20210715095520.png" alt="image-20210715095520870" style="zoom:50%;">

<h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><h3 id="1-基本选择器"><a href="#1-基本选择器" class="headerlink" title="1.基本选择器"></a>1.基本选择器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            * [1]基本选择器：元素选择器</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">h1</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-family</span>: <span class="string">&quot;楷体&quot;</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">i</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-family</span>: <span class="string">&quot;黑体&quot;</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            * [2]基本选择器：类选择器</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.mycls</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-family</span>: <span class="string">&quot;宋体&quot;</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            * [3]基本选择器：唯一选择器</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#myid</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: yellow;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-family</span>: <span class="string">&quot;微软雅黑&quot;</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是<span class="tag">&lt;<span class="name">i</span>&gt;</span>一个<span class="tag">&lt;/<span class="name">i</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是一个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;mycls&quot;</span>&gt;</span>我是一个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是一个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;mycls&quot;</span>&gt;</span>我是h2标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是h2标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">&quot;myid&quot;</span>&gt;</span>我是h2标题<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果</p>
<h3 id="2-关系选择器"><a href="#2-关系选择器" class="headerlink" title="2.关系选择器"></a>2.关系选择器</h3><h4 id="div和span标签"><a href="#div和span标签" class="headerlink" title="div和span标签"></a>div和span标签</h4><ul>
<li>div属于块级元素–》换行</li>
<li>span属于行内元素–》没有换行效果：里面的内容占多大，span包裹的区域就多大</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            我们可以通俗的理解，把div理解为一个“塑料袋”</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            div属于块级元素--》换行</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            span属于行内元素--》没有换行效果</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            span:里面的内容占多大，span包裹的区域就多大*/</span></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border</span>: <span class="number">1px</span> red solid;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">span</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border</span>: <span class="number">1px</span> greenyellow solid; </span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>马士兵马士兵<span class="tag">&lt;<span class="name">br</span> /&gt;</span>马士兵马士兵<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>马士兵<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>马士兵马士兵<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>马士兵<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>马士兵<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<img src="/2021/06/15/CSS/20210715160452.png" alt="image-20210715160452173" style="zoom: 33%;">

<h4 id="选择器-1"><a href="#选择器-1" class="headerlink" title="选择器"></a>选择器</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*关系选择器:</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            * 后代选择器：只要是这个元素的后代，样式都会发生变化</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            * div下面的所有h1标签样式都会改变</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*div h1&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            color: red;</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            &#125;*/</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*关系选择器：子代选择器</span></span></span><br><span class="line"><span class="comment"><span class="language-css">            只改变子标签的样式*/</span></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">div</span>&gt;<span class="selector-tag">h1</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: royalblue;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">span</span>&gt;<span class="selector-tag">h1</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: yellow;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<img src="/2021/06/15/CSS/20210715160407.png" alt="image-20210715160407509" style="zoom: 33%;">

<h3 id="3-属性选择器"><a href="#3-属性选择器" class="headerlink" title="3.属性选择器"></a>3.属性选择器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*属性选择器*/</span></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;password&quot;</span>]</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span><span class="selector-attr">[value=<span class="string">&quot;zhaoss1&quot;</span>]</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">            用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;zhaoss1&quot;</span> /&gt;</span></span><br><span class="line">            用户名2：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;zhaoss2&quot;</span> /&gt;</span></span><br><span class="line">            密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123123&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="4-伪类选择器"><a href="#4-伪类选择器" class="headerlink" title="4.伪类选择器"></a>4.伪类选择器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.mycls</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;mycls&quot;</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>一般伪类选择器都应用在超链接上</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*设置静止状态*/</span></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: yellow;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*设置鼠标悬浮状态*/</span></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*设置触发状态*/</span></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/*设置完成状态*/</span></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index.html&quot;</span>&gt;</span>超链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="例子：百度导航条"><a href="#例子：百度导航条" class="headerlink" title="例子：百度导航条"></a>例子：百度导航条</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">ul</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">list-style-type</span>: none;<span class="comment">/*将无序列表前面的图标取消*/</span></span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">float</span><span class="selector-pseudo">:left</span>;<span class="comment">/*向左浮动*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin-left</span>: <span class="number">20px</span>;<span class="comment">/*设置间隔20px*/</span></span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">text-decoration</span>: none;<span class="comment">/*去掉下划线*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">13px</span>;<span class="comment">/*字号*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: black;<span class="comment">/*字体颜色*/</span></span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: <span class="number">#0000FF</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/*定位：*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">position</span>: absolute;<span class="comment">/*绝对定位*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">right</span>:<span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;aaaa&quot;</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;aaaa&quot;</span>&gt;</span>hao123<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;aaaa&quot;</span>&gt;</span>地图<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;aaaa&quot;</span>&gt;</span>视频<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<img src="/2021/06/15/CSS/20210715174100.png" alt="image-20210715174100021" style="zoom:50%;">

<img src="/2021/06/15/CSS/20210715174209.png" alt="image-20210715174209462" style="zoom:50%;">



<h2 id="浮动效果"><a href="#浮动效果" class="headerlink" title="浮动效果"></a>浮动效果</h2><h3 id="文字环绕图片"><a href="#文字环绕图片" class="headerlink" title="文字环绕图片"></a>文字环绕图片</h3><p>​        浮动设计的初衷为了解决<strong>文字环绕图片</strong>问题，浮动后一定不会将文字挡住，这是设计初衷，不能违背的。</p>
<img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20210718100303705.png" alt="image-20210718100303705" style="zoom: 33%;">



<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>​        CSS 的 Float（浮动）使元素脱离文档流，按照指定的方向（左或右发生移动），直到它的外边缘碰到包含框或另一个浮动框的边框为止。文档流是文档中可显示对象在排列时所占用的位置/空间，而脱离文档流就是在页面中不占位置了。</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><img src="/2021/06/15/CSS/06/15/CSS/20210718100331.png" class title="image-20210718100331232">

<h3 id="实例展示"><a href="#实例展示" class="headerlink" title="实例展示"></a>实例展示</h3><p>设置一个大的div，里面放三个小的div</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--外层div--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color: pink;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px;height: 100px;background-color: chartreuse;&quot;</span>&gt;</span>11<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px;height: 200px;background-color: coral;&quot;</span>&gt;</span>22<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 300px;height: 300px;background-color: yellow&quot;</span>&gt;</span>33<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>没有任何浮动</p>
<img src="/2021/06/15/CSS/20210718102727.png" alt="image-20210718102727344" style="zoom: 33%;">

<p>给绿div设置浮动</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px;height: 100px;background-color: chartreuse;&quot;</span>&gt;</span>11<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<img src="/2021/06/15/CSS/20210718103223.png" alt="image-20210718103223765" style="zoom: 33%;">

<p>给橘色小块设置浮动</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px;height: 200px;background-color: coral;&quot;</span>&gt;</span>22<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<img src="/2021/06/15/CSS/20210718103413.png" alt="image-20210718103413403" style="zoom: 33%;">

<p>给黄色小块设置浮动</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 300px;height: 300px;background-color: yellow;float: left;&quot;</span>&gt;</span>33<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<img src="/2021/06/15/CSS/20210718103540.png" alt="image-20210718103540103" style="zoom: 50%;">

<p>因为所有的小div都浮到上面，大div里没有东西填充，所以就消失了。</p>
<p>这样如果有其他的div块，就会变位置</p>
<img src="/2021/06/15/CSS/20210718104648.png" alt="image-20210718104648829" style="zoom:50%;">

<h3 id="消除浮动影响"><a href="#消除浮动影响" class="headerlink" title="消除浮动影响"></a>消除浮动影响</h3><ol>
<li><p>给浮动的父节点加入一个属性overflow:hidden</p>
<img src="/2021/06/15/CSS/06/15/CSS/20210718104836.png" class title="image-20210718104836651">

<img src="/2021/06/15/CSS/20210718105023.png" alt="image-20210718105023259" style="zoom:33%;"></li>
<li><p>给父节点加一个高度，让粉色div“撑起来”</p>
<img src="/2021/06/15/CSS/06/15/CSS/20210718105114.png" class title="image-20210718105114468">

<img src="/2021/06/15/CSS/20210718105102.png" alt="image-20210718105101964" style="zoom: 33%;"></li>
<li><p>被影响的元素紫色div：给它加入一个属性clear:both;</p>
<img src="/2021/06/15/CSS/06/15/CSS/20210718105219.png" class title="image-20210718105219588">

<img src="/2021/06/15/CSS/20210718105205.png" alt="image-20210718105205523" style="zoom:33%;"></li>
</ol>
<h2 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h2><h3 id="静态定位-static"><a href="#静态定位-static" class="headerlink" title="静态定位(static)"></a>静态定位(static)</h3><p>就是默认的定位</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--静态定位:</span></span><br><span class="line"><span class="comment">默认效果 效果就是元素出现在本来应该出现的位置 一般就省略不写</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/1.jpg&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position: static;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="相对定位-relative"><a href="#相对定位-relative" class="headerlink" title="相对定位(relative)"></a>相对定位(relative)</h3><p>相对元素自身所在的原来的位置进行定位,可以设置left,color,bottom,top这四个属性</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--相对定位</span></span><br><span class="line"><span class="comment">        相对元素自身所在的原来的位置进行定位</span></span><br><span class="line"><span class="comment">        可以设置left,color,bottom,top这四个属性</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 500px; height: 500px; background-color: pink;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px; height: 100px; background-color: green;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px; height: 100px; background-color: red; position: relative; bottom: 10px;&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px; height: 100px; background-color: blue;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>z-index属性：</p>
<p>设置堆叠顺序，设置元素谁在上谁在下。注意：z-index属性要设置在定位的元素上,</p>
<p>应用场合：<br>（1）元素在小范围移动的时候<br>（2）结合绝对定位使用</p>
<h3 id="绝对定位-absolute"><a href="#绝对定位-absolute" class="headerlink" title="绝对定位(absolute)"></a>绝对定位(absolute)</h3><ul>
<li>设置子块div为绝对定位</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#outer</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin-left</span>:<span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#div01</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: cornflowerblue;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">position</span>: absolute;<span class="comment">/*设置一个绝对定位*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">left</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">top</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#div02</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: coral;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div01&quot;</span>&gt;</span>111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div02&quot;</span>&gt;</span>222<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果</p>
<img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20210718163324246.png" alt="image-20210718163324246" style="zoom: 33%;">

<p>蓝色div相对body产生的位移，相对body进行位置的改变，然后蓝色div发生位移以后，原位置得到了释放。橙色div移动上去了！</p>
<ul>
<li>实际开发中，我们往往让蓝色div在粉色div中发生位移效果<br>配合定位来使用：</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#outer</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/*父块设置一个相对定位*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin-left</span>:<span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#div01</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: cornflowerblue;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">left</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">top</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#div02</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: coral;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div01&quot;</span>&gt;</span>111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div02&quot;</span>&gt;</span>222<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果</p>
<img src="/2021/06/15/CSS/20210718163447.png" alt="image-20210718163447139" style="zoom: 50%;">

<h4 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h4><p>当给一个元素设置了绝对定位的时候，它相对谁变化呢？它会向上一层一层的找父级节点是否有定位，如果直到找到body了也没有定位，那么就相对body进行变化，如果父级节点有定位（绝对定位，相对定位，固定定位），但是一般我们会配合使用父级为相对定位，当前元素为绝对定位，这样这个元素就会相对父级位置产生变化。无论是上面的哪一种，都会释放原来的位置，然后其他元素会占用那个位置。</p>
<p>开发中建议使用：父级节点relative定位，子级节点使用绝对定位。</p>
<h3 id="固定定位-fixed"><a href="#固定定位-fixed" class="headerlink" title="固定定位(fixed)"></a>固定定位(fixed)</h3><p>应用场合：在页面过长的时候，将某个元素<strong>固定</strong>在浏览器的某个位置上，当<strong>拉动滚动条的时候，这个元素位置不动。</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#mydiv</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: cadetblue;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/*固定定位*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">right</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">top</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mydiv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        ...(省略很多行)</span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果</p>
<img src="/2021/06/15/CSS/20210718163814.png" alt="image-20210718163814128" style="zoom:33%;">



<h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><p>​        页面上也有很多元素，元素之间的布局/设计 依靠 <strong>盒子模型</strong>：<br>​        所有HTML元素可以看作盒子，在CSS中，”box model”这一术语是用来设计和布局时使用。<br>​        CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。<br>​        盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。<br>​        下面的图片说明了盒子模型(Box Model)：</p>
<img src="/2021/06/15/CSS/20210718190406.png" alt="image-20210718190406052" style="zoom:50%;">

<img src="/2021/06/15/CSS/20210718190434.png" alt="image-20210718190434286" style="zoom:50%;">

<p>感受盒子模型</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--代码感受盒子的具体含义--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*将所有元素的样式：外边距，边框，内边距全部设置为0*/</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*没有单独设置盒子模型样式的就遵照总的设置*/</span></span></span><br><span class="line"><span class="language-css">            *&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin</span>:<span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#outer</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/*修改了内边距padding需要更改原来的长和宽 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>:<span class="number">450px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">450px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin-left</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin-top</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding-left</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding-top</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#mydiv</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: yellowgreen;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding-left</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding-top</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mydiv&quot;</span>&gt;</span>111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color: blue;width: 100px; height: 100px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>注意修改了内边距以后需要修改原本的长和宽</strong></p>
<p>效果</p>
<p><img src="https://gitee.com/TeaSea33/typora-picgo/raw/master/img/20210718194809.png" alt="image-20210718194809665" style="zoom:50%;"><img src="/2021/06/15/CSS/20210718200438.png" alt="image-20210718200437875" style="zoom: 67%;"></p>
<h1 id="H-C练习"><a href="#H-C练习" class="headerlink" title="H+C练习"></a>H+C练习</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#bigdiv</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">65px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border</span>: solid <span class="number">#D70000</span> ;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>:<span class="number">#FBEECF</span> ;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/*设置div里中文字的效果*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">17px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-family</span>: <span class="string">&quot;微软雅黑&quot;</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: <span class="number">#D70000</span>;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/*设置固定定位*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">right</span>: <span class="number">0px</span>;				</span></span><br><span class="line"><span class="language-css">                <span class="attribute">top</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/*背景图大小的设置*/</span></span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#mydiv</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/*先写背景图，再写背景色*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">img/小喇叭.png</span>) no-repeat <span class="number">8px</span> <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding-top</span>: <span class="number">60px</span>;<span class="comment">/*盒子模型的页内边距*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding-right</span>: <span class="number">2px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">text-align</span>: center;<span class="comment">/*设置水平居中*/</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#mydiv2</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/*先写背景图，再写背景色*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">img/联系客服.png</span>) no-repeat <span class="number">3px</span> <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding-top</span>: <span class="number">70px</span>;<span class="comment">/*盒子模型的页内边距*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">text-align</span>: center;<span class="comment">/*设置水平居中*/</span></span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#mydiv3</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">60px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/*先写背景图，再写背景色*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">img/二维码.png</span>) no-repeat <span class="number">3px</span> <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding-top</span>: <span class="number">70px</span>;<span class="comment">/*盒子模型的页内边距*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">text-align</span>: center;<span class="comment">/*设置水平居中*/</span></span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#mydiv4</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/*先写背景图，再写背景色*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">img/呵护.png</span>) no-repeat <span class="number">3px</span> <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">padding-top</span>: <span class="number">60px</span>;<span class="comment">/*盒子模型的页内边距*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">text-align</span>: center;<span class="comment">/*设置水平居中*/</span></span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;bigdiv&quot;</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mydiv&quot;</span>&gt;</span></span><br><span class="line">                最新<span class="tag">&lt;<span class="name">br</span> /&gt;</span>发布</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hr</span> <span class="attr">width</span>=<span class="string">&quot;50px&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">color</span>=<span class="string">&quot;black&quot;</span>  /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mydiv2&quot;</span>&gt;</span></span><br><span class="line">                联系<span class="tag">&lt;<span class="name">br</span> /&gt;</span>客服</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hr</span> <span class="attr">width</span>=<span class="string">&quot;50px&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">color</span>=<span class="string">&quot;black&quot;</span>  /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mydiv3&quot;</span>&gt;</span></span><br><span class="line">                APP<span class="tag">&lt;<span class="name">br</span> /&gt;</span>下载</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">hr</span> <span class="attr">width</span>=<span class="string">&quot;50px&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">color</span>=<span class="string">&quot;black&quot;</span>  /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mydiv4&quot;</span>&gt;</span></span><br><span class="line">                旅游<span class="tag">&lt;<span class="name">br</span> /&gt;</span>出行<span class="tag">&lt;<span class="name">br</span> /&gt;</span>温馨<span class="tag">&lt;<span class="name">br</span> /&gt;</span>提示</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		...省略很多个hello</span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<img src="/2021/06/15/CSS/20210719085925.png" alt="image-20210719085617279" style="zoom: 33%;">

]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>CSS</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML</title>
    <url>/2021/06/13/HTML/</url>
    <content><![CDATA[<p>超文本标记语言</p>
<h2 id="head-标签"><a href="#head-标签" class="headerlink" title="head 标签"></a>head 标签</h2><p>head标签用于定义文档的头部，它是所有头部元素的容器。<head> 中的元素可以引用脚本、指示浏览器在哪里找到样式表。文档的头部描述了文档的各种属性和信息，包括文档的标题、在 Web 中的位置以及和其他文档的关系等。绝大多数文档头部包含的数据都不会真正作为内容显示给读者。</head></p>
<span id="more"></span>

<p>下面这些标签可用在 head 部分：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>、<span class="tag">&lt;<span class="name">meta</span>&gt;</span>、<span class="tag">&lt;<span class="name">link</span>&gt;</span>、<span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-xml">、 <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">、 <span class="tag">&lt;<span class="name">base</span>&gt;</span>。</span></span></span></span><br></pre></td></tr></table></figure>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">			页面注释</span></span><br><span class="line"><span class="comment">			可以放入&lt;title&gt;、&lt;meta&gt;、&lt;style&gt;、&lt;script&gt;、&lt;base&gt;</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--页面标题--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>百度一下，你就知道<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--设置页面的编码，防止乱码现象</span></span><br><span class="line"><span class="comment">				利用meta标签</span></span><br><span class="line"><span class="comment">				charset=&quot;UTF-8&quot;</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--页面刷新效果--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--&lt;meta http-equiv=&quot;refresh&quot; content=&quot;3;http://www.baidu.com&quot;  /&gt;--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--页面作者--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span> = <span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;chs;1374347231@qq.com&quot;</span>  /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--页面描述--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span> =<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;陈慧珊简介&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--link 标签引入外部资源--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span> = <span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com/favicon.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span> /&gt;</span></span><br><span class="line">		</span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">	body标签中：放入页面展示的内容	</span></span><br><span class="line"><span class="comment">	--&gt;</span></span><br><span class="line">		hello 这里是第一个html！！！</span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">			页面注释</span></span><br><span class="line"><span class="comment">			可以放入&lt;title&gt;、&lt;meta&gt;、&lt;style&gt;、&lt;script&gt;、&lt;base&gt;</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--页面标题--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>百度一下，你就知道<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--设置页面的编码，防止乱码现象</span></span><br><span class="line"><span class="comment">				利用meta标签</span></span><br><span class="line"><span class="comment">				charset=&quot;UTF-8&quot;</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--页面刷新效果--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--&lt;meta http-equiv=&quot;refresh&quot; content=&quot;3;http://www.baidu.com&quot;  /&gt;--&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--页面作者--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span> = <span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;chs;1374347231@qq.com&quot;</span>  /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--页面描述--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span> =<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;陈慧珊简介&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--link 标签引入外部资源--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span> = <span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com/favicon.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">	body标签中：放入页面展示的内容	</span></span><br><span class="line"><span class="comment">	--&gt;</span></span><br><span class="line">		hello 这里是第一个html！！！</span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>运行效果：</p>
<img src="/2021/06/13/HTML/20210713192135.png" alt="image-20210713192135511" style="zoom:50%;">

<h2 id="body-标签"><a href="#body-标签" class="headerlink" title="body 标签"></a>body 标签</h2><p>body 元素是定义文档的主体。body 元素包含文档的所有内容（比如文本、超链接、图像、表格和列表等等。）body是用在网页中的一种HTML标签，标签是用在网页中的一种HTML标签，表示网页的主体部分，也就是用户可以看到的内容，可以包含文本、图片、音频、视频等各种内容。</p>
<h3 id="文本标签"><a href="#文本标签" class="headerlink" title="文本标签"></a>文本标签</h3><div align="center" alt="image-20210713192339192" style="zoom: 50%;">
        <img src="https://gitee.com/TeaSea33/typora-picgo/raw/master/img/20210713192339.png" alt="image-20210713192339192"> 
</div>



<p>实体名称</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">			h1-h6字号逐渐变小，每个标题独占一行，自带换行效果</span></span><br><span class="line"><span class="comment">			h7之后属于无效标签，但是浏览器也不会报错，而是以普通文本的形式展现</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span>&gt;</span>媒体：为人父母，要不要“持证上岗”<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h2</span>&gt;</span>媒体：为人父母，要不要“持证上岗 ”<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h3</span>&gt;</span>媒体：为人父母，要不要“持证上岗”<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--横线标签</span></span><br><span class="line"><span class="comment">			width：设置宽度</span></span><br><span class="line"><span class="comment">					300px 固定宽度</span></span><br><span class="line"><span class="comment">					30% 页面宽度的百分比， 会随着页面宽度的变化而变化</span></span><br><span class="line"><span class="comment">			align: 设置位置 left,center,right 默认不写的话就是center居中效果</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">hr</span> <span class="attr">width</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">hr</span> <span class="attr">width</span>=<span class="string">&quot;30%&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">			段落标签</span></span><br><span class="line"><span class="comment">			段落效果：段落中文字自动换行，段落和段落之间有空行</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>26日，“建议父母持合格<span class="symbol">&amp;lt;</span>父母证<span class="symbol">&amp;gt;</span>上岗<span class="symbol">&amp;copy;</span>”冲上微博热搜，迅速引发热议。在正在召开的全国两会上，全国政协委员许洪玲建议在社区举办家长课堂，建立“家长教育指导工作室”。针对准备入小学的家长开展相关课程教育，颁发“合格父母”上岗证随学生档案入学。5月26日，“建议父母持合格父母证上岗”冲上微博热搜，迅速引发热议。在正在召开的全国两会上，全国政协委员许洪玲建议在社区举办家长课堂，建立“家长教育指导工作室”。针对准备入小学的家长开展相关课程教育，颁发“合格父母”上岗证随学生档案入学。5月26日，“建议父母持合格父母证上岗”冲上微博热搜，迅速引发热议。在正在召开的全国两会上，全国政协委员许洪玲建议在社区举办家长课堂，建立“家长教育指导工作室”。针对准备入小学的家长开展相关课程教育，颁发“合格父母”上岗证随学生档案入学。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="symbol">&amp;emsp;</span>26日，“建议父母持合格<span class="symbol">&amp;lt;</span>父母证<span class="symbol">&amp;gt;</span>上岗<span class="symbol">&amp;copy;</span>”冲上微博热搜，迅速引发热议。在正在召开的全国两会上，全国政协委员许洪玲建议在社区举办家长课堂，建立“家长教育指导工作室”。针对准备入小学的家长开展相关课程教育，颁发“合格父母”上岗证随学生档案入学。5月26日，“建议父母持合格父母证上岗”冲上微博热搜，迅速引发热议。在正在召开的全国两会上，全国政协委员许洪玲建议在社区举办家长课堂，建立“家长教育指导工作室”。针对准备入小学的家长开展相关课程教育，颁发“合格父母”上岗证随学生档案入学。5月26日，“建议父母持合格父母证上岗”冲上微博热搜，迅速引发热议。在正在召开的全国两会上，全国政协委员许洪玲建议在社区举办家长课堂，建立“家长教育指导工作室”。针对准备入小学的家长开展相关课程教育，颁发“合格父母”上岗证随学生档案入学。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span>26日，“建议父母持合格<span class="symbol">&amp;lt;</span>父母证<span class="symbol">&amp;gt;</span>上岗<span class="symbol">&amp;copy;</span>”冲上微博热搜，迅速引发热议。在正在召开的全国两会上，全国政协委员许洪玲建议在社区举办家长课堂，建立“家长教育指导工作室”。针对准备入小学的家长开展相关课程教育，颁发“合格父母”上岗证随学生档案入学。5月26日，“建议父母持合格父母证上岗”冲上微博热搜，迅速引发热议。在正在召开的全国两会上，全国政协委员许洪玲建议在社区举办家长课堂，建立“家长教育指导工作室”。针对准备入小学的家长开展相关课程教育，颁发“合格父母”上岗证随学生档案入学。5月26日，“建议父母持合格父母证上岗”冲上微博热搜，迅速引发热议。在正在召开的全国两会上，全国政协委员许洪玲建议在社区举办家长课堂，建立“家长教育指导工作室”。针对准备入小学的家长开展相关课程教育，颁发“合格父母”上岗证随学生档案入学。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	    </span><br><span class="line">	    <span class="comment">&lt;!--加粗倾斜下划线--&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">b</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">i</span>&gt;</span>倾斜<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">u</span>&gt;</span>下划线<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">u</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>加粗倾斜下划线<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">	    <span class="comment">&lt;!--一箭穿心--&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">del</span>&gt;</span>谭颖<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line">	    <span class="comment">&lt;!--预编译标签：在页面上显示原样效果--&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">	    public static void main(string[] args)&#123;</span><br><span class="line">	    	stopThinkingAboutHer();</span><br><span class="line">	    &#125;</span><br><span class="line">	    <span class="tag">&lt;/<span class="name">pre</span>&gt;</span>    </span><br><span class="line">	    <span class="comment">&lt;!--换行--&gt;</span></span><br><span class="line">	    	陈慧珊要快点忘掉谭颖呀<span class="tag">&lt;<span class="name">br</span> /&gt;</span>好像很难</span><br><span class="line">	    	</span><br><span class="line">	    <span class="comment">&lt;!--字体标签--&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;aqua&quot;</span> <span class="attr">size</span>= <span class="string">&quot;7&quot;</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span> 建议你不要听情歌了<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">	</span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>运行效果：</p>
<img src="/2021/06/13/HTML/20210713192218.png" alt="image-20210713192218310" style="zoom: 67%;">

<h3 id="多媒体标签"><a href="#多媒体标签" class="headerlink" title="多媒体标签"></a>多媒体标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--图片</span></span><br><span class="line"><span class="comment">                        src:引入图片的位置</span></span><br><span class="line"><span class="comment">                                引入本地资源</span></span><br><span class="line"><span class="comment">                                引入网络资源</span></span><br><span class="line"><span class="comment">                        width:设置宽度</span></span><br><span class="line"><span class="comment">                        height:设置高度</span></span><br><span class="line"><span class="comment">                        注意:一般高度和宽度只设置一个即可，另一个会按照比例自动适应</span></span><br><span class="line"><span class="comment">                        title:鼠标悬浮在图片上的时候的提示语，默认情况下（没有设置alt属性） 图片如果加载失败那么提示语也是title的内容</span></span><br><span class="line"><span class="comment">                        alt:图片加载失败的提示语</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/ss6.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">title</span>=<span class="string">&quot;这是一个美女小姐姐&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片加载失败&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=1833909874,761626004&amp;fm=26&amp;gp=0.jpg&quot;</span> /&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--音频--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">&quot;music/我要你.mp3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">embed</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--视频--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">&quot;video/周杰伦 - 说好的幸福呢.mp4&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">embed</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">&quot;//player.video.iqiyi.com/38913f9ed7358c0933e82a03d9b26ec1/0/0/v_19rv8qeokk.swf-albumId=9194699400-tvId=9194699400-isPurchase=0-cnId=undefined&quot;</span> <span class="attr">allowFullScreen</span>=<span class="string">&quot;true&quot;</span> <span class="attr">quality</span>=<span class="string">&quot;high&quot;</span> <span class="attr">width</span>=<span class="string">&quot;480&quot;</span> <span class="attr">height</span>=<span class="string">&quot;350&quot;</span> <span class="attr">align</span>=<span class="string">&quot;middle&quot;</span> <span class="attr">allowScriptAccess</span>=<span class="string">&quot;always&quot;</span> <span class="attr">type</span>=<span class="string">&quot;application/x-shockwave-flash&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">embed</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--超链接标签：作用：实现页面的跳转功能</span></span><br><span class="line"><span class="comment">                        href:控制跳转的目标位置</span></span><br><span class="line"><span class="comment">                        target:_self 在自身页面打开 （默认效果也是在自身页面打开）    _blank 在空白页面打开</span></span><br><span class="line"><span class="comment">                --&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;文本标签.html&quot;</span>&gt;</span>这是一个超链接01<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="comment">&lt;!--跳转到本地资源--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>这是一个超链接02<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="comment">&lt;!--跳转到自身页面--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;abc&quot;</span>&gt;</span>这是一个超链接03<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="comment">&lt;!--跳转的目标找不到，提示找不到资源--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_self&quot;</span>&gt;</span>这是一个超链接04<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="comment">&lt;!--跳转到网络资源--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>这是一个超链接05<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="comment">&lt;!--跳转到网络资源--&gt;</span></span><br><span class="line">                </span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/ss.jpg&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--无序列表:</span></span><br><span class="line"><span class="comment">                        type:可以设置列表前图标的样式   type=&quot;square&quot;</span></span><br><span class="line"><span class="comment">                        如果想要更换图标样式，需要借助css技术： style=&quot;list-style:url(img/act.jpg) ;&quot;</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span>起床以后需要做的事<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">&quot;square&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>睁眼<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>穿衣服<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>上厕所<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>吃早饭<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>洗漱<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>出门<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--有序列表:</span></span><br><span class="line"><span class="comment">                        type:可以设置列表的标号：1,a,A,i,I</span></span><br><span class="line"><span class="comment">                        start:设置起始标号</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span>学习java的顺序<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">&quot;A&quot;</span> <span class="attr">start</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>JAVASE<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>ORACLE<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>MYSQL<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span>JS<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--表格：4行4列</span></span><br><span class="line"><span class="comment">                        table:表格</span></span><br><span class="line"><span class="comment">                        tr:行</span></span><br><span class="line"><span class="comment">                        td:单元格</span></span><br><span class="line"><span class="comment">                        th:特殊单元格：表头效果：加粗，居中</span></span><br><span class="line"><span class="comment">                        默认情况下表格是没有边框的，通过属性来增加表框：</span></span><br><span class="line"><span class="comment">                        border:设置边框大小</span></span><br><span class="line"><span class="comment">                        cellspacing：设置单元格和边框之间的空隙</span></span><br><span class="line"><span class="comment">                        align=&quot;center&quot;  设置居中</span></span><br><span class="line"><span class="comment">                        background 设置背景图片 background=&quot;img/ss.jpg&quot;</span></span><br><span class="line"><span class="comment">                        bgcolor :设置背景颜色</span></span><br><span class="line"><span class="comment">                        rowspan:行合并</span></span><br><span class="line"><span class="comment">                        colspan：列合并</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1px&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;400px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">bgcolor</span>=<span class="string">&quot;darkseagreen&quot;</span> &gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;bisque&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">th</span>&gt;</span>学号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">th</span>&gt;</span>年纪<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">th</span>&gt;</span>成绩<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>1001<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">td</span>&gt;</span>丽丽<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">td</span>&gt;</span>19<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;3&quot;</span>&gt;</span>90.5<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>2006<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">td</span>&gt;</span>30<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">td</span>&gt;</span>3007<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">td</span>&gt;</span>小明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">td</span>&gt;</span>18<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>结果：</p>
<img src="/2021/06/13/HTML/20210713191848.png" alt="image-20210713191835355" style="zoom: 67%;">



<h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><h3 id="内嵌框架"><a href="#内嵌框架" class="headerlink" title="内嵌框架"></a>内嵌框架</h3><p>内嵌框架是用于在网页中嵌入一个网页并让它在网页中显示.<br>添加内嵌框架的语法:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot; URL &quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!--URL --- 指定独立网页的路径--&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="实例一：展示商品"><a href="#实例一：展示商品" class="headerlink" title="实例一：展示商品"></a>实例一：展示商品</h4><ul>
<li><p>首页</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;音乐导航.html&quot;</span> <span class="attr">height</span>=<span class="string">&quot;700px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;30%&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;展示页面.html&quot;</span> <span class="attr">name</span> =<span class="string">&quot;iframe_my&quot;</span> <span class="attr">height</span>=<span class="string">&quot;700px&quot;</span> <span class="attr">width</span>=<span class="string">&quot;67%&quot;</span>  <span class="attr">src</span>=<span class="string">&quot;img/肆无忌惮.png&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>目录页</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>音乐导航<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;img/肆无忌惮.png&quot;</span> <span class="attr">target</span>=<span class="string">&quot;iframe_my&quot;</span>&gt;</span>肆无忌惮 ---薛之谦<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;img/梦伴.png&quot;</span> <span class="attr">target</span>=<span class="string">&quot;iframe_my&quot;</span>&gt;</span>梦伴 ---李悦君<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;img/stay.png&quot;</span> <span class="attr">target</span>=<span class="string">&quot;iframe_my&quot;</span>&gt;</span>stay ---The kid LAROL/Justin Bieber<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;img/Blue&amp;Grey.png&quot;</span> <span class="attr">target</span>=<span class="string">&quot;iframe_my&quot;</span>&gt;</span>Blue&amp;Grey ---BTS<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span>			</span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>展示页</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        这是展示列表</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<img src="/2021/06/13/HTML/20210713203134.png" alt="image-20210713203134473" style="zoom: 33%;"></li>
</ul>
<h4 id="实例二：邮箱"><a href="#实例二：邮箱" class="headerlink" title="实例二：邮箱"></a>实例二：邮箱</h4><h5 id="登录首页"><a href="#登录首页" class="headerlink" title="登录首页"></a>登录首页</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;cornflowerblue&quot;</span> <span class="attr">size</span>= <span class="string">&quot;3&quot;</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span> &gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">				用户名<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">				密<span class="symbol">&amp;emsp;</span>码<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;邮箱首页.html&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<img src="/2021/06/13/HTML/20210713211204.png" alt="image-20210713211204526" style="zoom:50%;">

<h5 id="邮箱页"><a href="#邮箱页" class="headerlink" title="邮箱页"></a>邮箱页</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--邮箱上侧的页面--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;邮箱上侧.html&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100px&quot;</span> <span class="attr">align</span>=<span class="string">&quot;middle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--邮箱左侧页面--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;邮箱左侧.html&quot;</span> <span class="attr">width</span>=<span class="string">&quot;20%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500px&quot;</span> <span class="attr">align</span>=<span class="string">&quot;left&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--邮箱右侧页面--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;邮箱右侧.html&quot;</span> <span class="attr">name</span>=<span class="string">&quot;if1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;78%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500px&quot;</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>上侧</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;blueviolet&quot;</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">                欢迎来到TeaSea33的邮箱！！！</span><br><span class="line">            <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>左侧</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;cornflowerblue&quot;</span> <span class="attr">size</span>= <span class="string">&quot;5&quot;</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;img/写信.png&quot;</span> <span class="attr">target</span>=<span class="string">&quot;if1&quot;</span>&gt;</span></span><br><span class="line">                        写信</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;img/收信箱.png&quot;</span> <span class="attr">target</span>=<span class="string">&quot;if1&quot;</span>&gt;</span></span><br><span class="line">                        收信箱</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;img/垃圾箱.png&quot;</span> <span class="attr">target</span>=<span class="string">&quot;if1&quot;</span>&gt;</span></span><br><span class="line">                        垃圾箱</span><br><span class="line">                    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>右侧</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        展示页面</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果</p>
<img src="/2021/06/13/HTML/20210713211612.png" alt="image-20210713211612138" style="zoom: 25%;">



<h3 id="框架集合"><a href="#框架集合" class="headerlink" title="框架集合"></a>框架集合</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--框架集合：和body是并列的概念，不要将框架集合放入body中--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">&quot;20%,*,30%&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">frame</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;30%,40%,*&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">frame</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;index.html&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">frame</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;50%,*&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">frame</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">frame</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>将上面的页面改为</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">&quot;20%,*&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;邮箱上侧.html&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100px&quot;</span> <span class="attr">align</span>=<span class="string">&quot;middle&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">&quot;30%,*&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;邮箱左侧.html&quot;</span> <span class="attr">width</span>=<span class="string">&quot;20%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500px&quot;</span> <span class="attr">align</span>=<span class="string">&quot;left&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">&quot;邮箱右侧.html&quot;</span> <span class="attr">name</span>=<span class="string">&quot;if1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;78%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500px&quot;</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="Form表单"><a href="#Form表单" class="headerlink" title="Form表单"></a>Form表单</h2><p>​        表单在 Web 网页中用来给访问者填写信息，从而能采集客户端信息，使网页具有交互的功能。一般是将表单设计在一个Html 文档中，当用户填写完信息后做**提交(submit)**操作，于是表单的内容就从客户端的浏览器传送到服务器上，经过服务器上程序处理后，再将用户所需信息传送回客户端的浏览器上，这样网页就具有了交互性。这里我们只讲怎样使用Html 标志来设计表单。<br>​        所有的用户输入内容的地方都用表单来写，如登录注册、搜索框。<br>​        一个表单一般应该包含用户填写信息的输入框,提交按钮等，这些输入框,按钮叫做控件,表单很像容器,它能够容纳各种各样的控件。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>＝&quot;<span class="attr">url</span>&quot; <span class="attr">method</span>=<span class="string">get|post</span> <span class="attr">name</span>=<span class="string">&quot;myform&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">-name：表单提交时的名称</span><br><span class="line">-action：提交到的地址</span><br><span class="line">-method：提交方式，有get和post两种，默认为get</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--定义form表单</span></span><br><span class="line"><span class="comment">			【1】action属性</span></span><br><span class="line"><span class="comment">			地址栏信息：</span></span><br><span class="line"><span class="comment">			http://127.0.0.1:8020/Form表单/aaa?username=admin&amp;pwd=chcsiu</span></span><br><span class="line"><span class="comment">			？之前是提交的资源的目的地址</span></span><br><span class="line"><span class="comment">				http:信息交互遵照http协议</span></span><br><span class="line"><span class="comment">				127.0.0.1:代表本机的IP地址</span></span><br><span class="line"><span class="comment">				8020:端口号---HBuilder内置服务器的端口号</span></span><br><span class="line"><span class="comment">				Form表单:指的是你项目的名字</span></span><br><span class="line"><span class="comment">				PS:浏览器的地址栏不支持中文，都会转为编码传送，如果在地址栏看到中文，只是当前浏览器给的一个友好展示</span></span><br><span class="line"><span class="comment">			？之后是提交的具体数据</span></span><br><span class="line"><span class="comment">				username=admin&amp;pwd=chcsiu</span></span><br><span class="line"><span class="comment">				我们写的文本框和密码框都要加入一个属性：name</span></span><br><span class="line"><span class="comment">				然后name属性和具体录入的信息会拼成一个键值对的形式</span></span><br><span class="line"><span class="comment">				多个键值对之间，用&amp;符号进行拼接</span></span><br><span class="line"><span class="comment">				PS:只有form表单中的内容才会被收集并提交</span></span><br><span class="line"><span class="comment">			【2】 method属性 （默认情况下值为get）</span></span><br><span class="line"><span class="comment">			get 提交的数据可见 不安全 提交数据长度有限制 效率高</span></span><br><span class="line"><span class="comment">			post 提交的数据不可见 安全 提交的数据 效率低</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;aaa&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">			用户名 ：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">			密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">			<span class="comment">&lt;!--提交按钮--&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">		用户名2：<span class="tag">&lt;<span class="name">input</span>  <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<img src="/2021/06/13/HTML/20210714093952.png" alt="image-20210714093951886" style="zoom:33%;"> 

<h4 id="实例：模仿百度搜索"><a href="#实例：模仿百度搜索" class="headerlink" title="实例：模仿百度搜索"></a>实例：模仿百度搜索</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>百度一下你就知道<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">sizes</span>=<span class="string">&quot;any&quot;</span> <span class="attr">mask</span> <span class="attr">href</span>=<span class="string">&quot;//www.baidu.com/img/baidu_85beaf5496f291521eb75ba38eacbd87.svg&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--百度的连接</span></span><br><span class="line"><span class="comment">		https://www.baidu.com/s	(找到action)</span></span><br><span class="line"><span class="comment">		?</span></span><br><span class="line"><span class="comment">		...&amp;wd=java&amp;... (找到文本框名)</span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;https://www.baidu.com/s&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--文本框--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;wd&quot;</span> /&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--提交按钮--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;百度一下&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="表单元素"><a href="#表单元素" class="headerlink" title="表单元素"></a>表单元素</h3><h4 id="1-文本框"><a href="#1-文本框" class="headerlink" title="1. 文本框"></a>1. 文本框</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--文本框</span></span><br><span class="line"><span class="comment">	input标签使用很广泛，通过type属性的不同性，来表现不通过的形态，表单元素必须有一个属性：name有了name才可以提交书数据，才可以采集数据，然后提交的时候以键值对的形式拼到一起。</span></span><br><span class="line"><span class="comment">value:就是文本框中的具体内容;键值对：name=value的形式</span></span><br><span class="line"><span class="comment">placeholder--默认提示语</span></span><br><span class="line"><span class="comment">readonly--只读：无法更改</span></span><br><span class="line"><span class="comment">写法：readonly=&quot;true&quot;；readonly；readonly=&quot;readonly&quot;</span></span><br><span class="line"><span class="comment">disabled--禁用：不能提交</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;uname&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入身份证信息&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;uname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span> <span class="attr">readonly</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;uname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span> <span class="attr">readonly</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<img src="/2021/06/13/HTML/20210714194452.png" style="zoom: 50%;">

<h4 id="2-密码框"><a href="#2-密码框" class="headerlink" title="2. 密码框"></a>2. 密码框</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--密码框--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<img src="/2021/06/13/HTML/20210714194418.png" alt="image-20210714194418873" style="zoom:50%;">

<h4 id="3-按钮"><a href="#3-按钮" class="headerlink" title="3. 按钮"></a>3. 按钮</h4><h5 id="普通按钮"><a href="#普通按钮" class="headerlink" title="普通按钮"></a>普通按钮</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--普通按钮：没有什么效果就是可以点击，js可以加入事件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;普通&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<img src="/2021/06/13/HTML/20210714195057.png" alt="image-20210714195057422" style="zoom:50%;">

<h5 id="单选按钮"><a href="#单选按钮" class="headerlink" title="单选按钮"></a>单选按钮</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--单选按钮</span></span><br><span class="line"><span class="comment">注意：一组当选按钮，必须通过name属性来控制，让它们在一个分组中，然后在一个分组里只能选择一个</span></span><br><span class="line"><span class="comment">正常状态下，提交数据为:gender=on,后台不能区分你提交的数据</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">性别：</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">checked</span>/&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>/&gt;</span>女<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<img src="/2021/06/13/HTML/20210714194743.png" alt="image-20210714194743474" style="zoom:50%;">

<h5 id="多选按钮"><a href="#多选按钮" class="headerlink" title="多选按钮"></a>多选按钮</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--多选按钮</span></span><br><span class="line"><span class="comment">必须通过name属性来控制，让它们在一个分组中，然后在一个分组里可以选择多个</span></span><br><span class="line"><span class="comment">不同的选项的value值要控制为不同，这样后台接收就可以区分了</span></span><br><span class="line"><span class="comment">多个选项提交的时候，键值对用&amp;符号进行拼接：例如下：</span></span><br><span class="line"><span class="comment">favlan=1&amp;favlan=3</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;favlan&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span>java</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;favlan&quot;</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>/&gt;</span>python</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;favlan&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>/&gt;</span>php</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;favlan&quot;</span><span class="attr">value</span>=<span class="string">&quot;&quot;</span>/&gt;</span>c#</span><br></pre></td></tr></table></figure>

<p>效果：</p>
<img src="/2021/06/13/HTML/20210714202438.png" alt="image-20210714202438190" style="zoom:50%;">

<h5 id="图片按钮"><a href="#图片按钮" class="headerlink" title="图片按钮"></a>图片按钮</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--特殊按钮：图片按钮 点击是可以提交的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;image&quot;</span> <span class="attr">src</span>=<span class="string">&quot;img/1.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100px&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="重置按钮"><a href="#重置按钮" class="headerlink" title="重置按钮"></a>重置按钮</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--特殊按钮：重置按钮：将页面恢复到初始状态--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="提交按钮"><a href="#提交按钮" class="headerlink" title="提交按钮"></a>提交按钮</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--特殊按钮：提交按钮：具备提交功能--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="4-下拉列表"><a href="#4-下拉列表" class="headerlink" title="4.下拉列表"></a>4.下拉列表</h4><p>select</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--下拉列表</span></span><br><span class="line"><span class="comment">	selected 默认选中</span></span><br><span class="line"><span class="comment">	multiple 多选</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">你喜欢的城市</span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;city&quot;</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span>&gt;</span>---请选择---<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>成都市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> <span class="attr">selected</span>=<span class="string">&quot;selected&quot;</span>&gt;</span>北京市<span class="tag">&lt;/<span class="name">option</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>重庆市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>广州市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<img src="/2021/06/13/HTML/20210714211104.png" alt="image-20210714211104496" style="zoom:50%;">

<h4 id="5-多行文本框"><a href="#5-多行文本框" class="headerlink" title="5.多行文本框"></a>5.多行文本框</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--多行文本框</span></span><br><span class="line"><span class="comment">利用css样式来控制大小不可变：style=&quot;resize: none;&quot;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">自我介绍：</span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">style</span>=<span class="string">&quot;resize: none;&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;10&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;30&quot;</span>&gt;</span>请在这里填写信息。。<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<img src="/2021/06/13/HTML/20210714195641.png" alt="image-20210714195641589" style="zoom: 50%;">

<h4 id="6-文件"><a href="#6-文件" class="headerlink" title="6.文件"></a>6.文件</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;文件&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<img src="/2021/06/13/HTML/20210714211148.png" alt="image-20210714211148820" style="zoom: 33%;">

<img src="/2021/06/13/HTML/20210714211226.png" alt="image-20210714211226032" style="zoom: 67%;">

<h4 id="7-隐藏域"><a href="#7-隐藏域" class="headerlink" title="7.隐藏域"></a>7.隐藏域</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--隐藏域--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden &quot;</span> <span class="attr">name</span>=<span class="string">&quot;uname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;12324&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<img src="/2021/06/13/HTML/20210714202249.png" alt="image-20210714202249659" style="zoom:50%;">

<h4 id="8-label标签"><a href="#8-label标签" class="headerlink" title="8.label标签"></a>8.label标签</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--label标签</span></span><br><span class="line"><span class="comment">一般会在想要获得焦点的标签上加入一个id属性，然后label中的for属性跟id配合使用。</span></span><br><span class="line"><span class="comment">点击用户名 光标就会到用户名对应的文本框里面</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;uname&quot;</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;uername&quot;</span> <span class="attr">id</span>=<span class="string">&quot;uname&quot;</span>/&gt;</span>            </span><br></pre></td></tr></table></figure>

<h3 id="HTML5新增"><a href="#HTML5新增" class="headerlink" title="HTML5新增"></a>HTML5新增</h3><h4 id="增加校验"><a href="#增加校验" class="headerlink" title="增加校验"></a>增加校验</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">html5的类型可以增加校验</span><br><span class="line"><span class="comment">&lt;!--email--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--url--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;url&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--color--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;color&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--number:</span></span><br><span class="line"><span class="comment">min:最小值</span></span><br><span class="line"><span class="comment">max:最大值</span></span><br><span class="line"><span class="comment">step:步长</span></span><br><span class="line"><span class="comment">value:默认值：一定在步长的范围中，否则不能提交</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">min</span>=<span class="string">&quot;1&quot;</span> <span class="attr">max</span>=<span class="string">&quot;10&quot;</span> <span class="attr">step</span>=<span class="string">&quot;3&quot;</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--range--&gt;</span></span><br><span class="line">1<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;range&quot;</span> <span class="attr">min</span>=<span class="string">&quot;1&quot;</span> <span class="attr">max</span>=<span class="string">&quot;10&quot;</span> <span class="attr">name</span>=<span class="string">&quot;range&quot;</span> <span class="attr">step</span>=<span class="string">&quot;3&quot;</span>/&gt;</span>10</span><br><span class="line"><span class="comment">&lt;!--date--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;date&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--month--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;month&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--week--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;week&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="新增属性"><a href="#新增属性" class="headerlink" title="新增属性"></a>新增属性</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">HTML5新增属性：</span></span><br><span class="line"><span class="comment">multiple：多选</span></span><br><span class="line"><span class="comment">placehoder:默认提示</span></span><br><span class="line"><span class="comment">autofocus:自动获取焦点</span></span><br><span class="line"><span class="comment">required:必填项</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;11111&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">autofocus:</span>&quot;<span class="attr">autofocus</span>&quot; /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">required</span>=<span class="string">&quot;required&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--提交按钮--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo + GitHub搭建个人博客</title>
    <url>/2022/05/06/Hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A22/</url>
    <content><![CDATA[<h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><h3 id="1-前提准备："><a href="#1-前提准备：" class="headerlink" title="1.前提准备："></a>1.前提准备：</h3><ul>
<li><p>安装git</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>验证</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">git --version </span><br></pre></td></tr></table></figure></li>
<li><p>安装node.js</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h3 id="3-创建博客文件夹并初始化"><a href="#3-创建博客文件夹并初始化" class="headerlink" title="3.创建博客文件夹并初始化"></a>3.创建博客文件夹并初始化</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<h3 id="4-本地启动"><a href="#4-本地启动" class="headerlink" title="4.本地启动"></a>4.本地启动</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>访问本地链接：<a href>http://localhost:4000/</a></p>
<p>显示如下页面，表示安装成功</p>
<img src="/2022/05/06/Hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A22/image-20220506213244777.png" alt="image-20220506213244777" style="zoom:33%;">

<h2 id="安装next主题"><a href="#安装next主题" class="headerlink" title="安装next主题"></a>安装next主题</h2><p>hexo官网主题：<a href>https://hexo.io/themes/</a></p>
<p>这里以next为例</p>
<h3 id="1-在创建文件夹下安装主题"><a href="#1-在创建文件夹下安装主题" class="headerlink" title="1.在创建文件夹下安装主题"></a>1.在创建文件夹下安装主题</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<h3 id="2-修改文件夹下的-config-yml文件"><a href="#2-修改文件夹下的-config-yml文件" class="headerlink" title="2.修改文件夹下的_config.yml文件"></a>2.修改文件夹下的_config.yml文件</h3><img src="/2022/05/06/Hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A22/image-20220504215029708.png" alt="image-20220504215029708" style="zoom: 25%;">

<p>修改theme为next</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>

<p>再次访问页面：</p>
<img src="/2022/05/06/Hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A22/image-20220504215421643.png" alt="image-20220504215421643" style="zoom: 33%;">

<p>表示next主题安装成功</p>
<h2 id="部署到github仓库"><a href="#部署到github仓库" class="headerlink" title="部署到github仓库"></a>部署到github仓库</h2><h3 id="1-创建仓库"><a href="#1-创建仓库" class="headerlink" title="1.创建仓库"></a>1.创建仓库</h3><p>仓库名<strong>严格按xxx.github.io</strong>来（xxx为github用户名 且 小写！</p>
<img src="/2022/05/06/Hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A22/image-20220505154551563.png" alt="image-20220505154551563" style="zoom:33%;">

<h3 id="2-配置SSH"><a href="#2-配置SSH" class="headerlink" title="2.配置SSH"></a>2.配置SSH</h3><p>如果已经配置过就跳过。</p>
<p>生成SSH key</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C 你的邮箱</span><br></pre></td></tr></table></figure>

<p>这个邮箱是github绑定的邮箱</p>
<p>然后登陆github，在Settings里面的SSH and GPG keys里面添加new SSH key</p>
<img src="/2022/05/06/Hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A22/image-20220504220404992.png" alt="image-20220504220404992" style="zoom: 33%;">

<p>验证是否成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<img src="/2022/05/06/Hexo-GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A22/image-20220504221105797.png" alt="image-20220504221105797" style="zoom: 50%;">

<h3 id="3-部署到github"><a href="#3-部署到github" class="headerlink" title="3.部署到github"></a>3.部署到github</h3><p>安装git部署插件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>打开_config.yml文件，地步修改部署配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:youname/youname.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p>保存后终端执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>



<p>在浏览器输入xxx.github.io就可以看到自己的一个博客了</p>
<h2 id="常用的hexo命令"><a href="#常用的hexo命令" class="headerlink" title="常用的hexo命令"></a>常用的hexo命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo -g #安装Hexo</span><br><span class="line">npm update hexo -g #升级</span><br><span class="line">hexo init #初始化博客</span><br><span class="line"></span><br><span class="line">命令简写</span><br><span class="line">hexo n “我的博客” == hexo new “我的博客” #新建文章</span><br><span class="line">hexo g == hexo generate #生成</span><br><span class="line">hexo s == hexo server #启动服务预览</span><br><span class="line">hexo d == hexo deploy #部署</span><br><span class="line"></span><br><span class="line">hexo server #Hexo会监视文件变动并自动更新，无须重启服务器</span><br><span class="line">hexo server -s #静态模式</span><br><span class="line">hexo server -p 5000 #更改端口</span><br><span class="line">hexo server -i 192.168.1.1 #自定义 IP</span><br><span class="line">hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>JDBC</title>
    <url>/2021/06/07/JDBC/</url>
    <content><![CDATA[<h1 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h1><h2 id="1-概念"><a href="#1-概念" class="headerlink" title="1. 概念"></a>1. 概念</h2><p><strong>JDBC</strong>（Java DataBase Connectivity,  Java数据库连接) ,是一种用于执行SQL语句的Java API，为多种关系数据库提供统一访问,它由一组用Java语言编写的类和接口组成</p>
<span id="more"></span>

<h2 id="2-依赖"><a href="#2-依赖" class="headerlink" title="2. 依赖"></a>2. 依赖</h2><h3 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h3><p>src下创建一个文件夹命名lib，然后把依赖包复制到里面，右键create library</p>
<img src="/2021/06/07/JDBC/20210704112134.png" alt="image-20210704112134768" style="zoom:50%;">

<h3 id="移除依赖"><a href="#移除依赖" class="headerlink" title="移除依赖"></a>移除依赖</h3><p>setting ——&gt;project structure</p>
<img src="/2021/06/07/JDBC/20210704112049.png" alt="image-20210704112049391" style="zoom: 33%;">

<h2 id="3-实例"><a href="#3-实例" class="headerlink" title="3. 实例"></a>3. 实例</h2><h4 id="1：加载一个Driver驱动"><a href="#1：加载一个Driver驱动" class="headerlink" title="1：加载一个Driver驱动"></a>1：加载一个Driver驱动</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.加载驱动 Driver</span></span><br><span class="line"><span class="type">Driver</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">com</span>.mysql.cj.jdbc.Driver();</span><br></pre></td></tr></table></figure>

<h4 id="2：创建数据库连接（Connection）"><a href="#2：创建数据库连接（Connection）" class="headerlink" title="2：创建数据库连接（Connection）"></a>2：创建数据库连接（Connection）</h4><ul>
<li><p>url</p>
<p>格式——协议**://<strong>ip</strong>:<strong>端口/资源路径</strong>?<strong>参数名</strong>=<strong>参数值</strong>&amp;<strong>参数名=参数值</strong>&amp;….**</p>
<ul>
<li>协议         jdbc:mysql</li>
<li>IP          127.0.0.1/localhost</li>
<li>端口号       3306<ul>
<li>数据库名字   mydb</li>
<li>参数  useSSL(是否使用SSL)、useUnicode(是否使用unicod)、characterEncoding(使用unicode类型)、serverTimezone(时区)</li>
</ul>
</li>
</ul>
</li>
<li><p>user</p>
</li>
<li><p>password</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//3.获得链接</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 传入三个参数：url，user，password</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://127.0.0.1:3306/mytestdb?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/ShangHai&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> DriverManager.getConnection(url,user,password);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="3：创建SQL命令发送器Statement"><a href="#3：创建SQL命令发送器Statement" class="headerlink" title="3：创建SQL命令发送器Statement"></a>3：创建SQL命令发送器Statement</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//4.获得语句对象statement</span></span><br><span class="line"><span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> connection.createStatement();</span><br></pre></td></tr></table></figure>

<h4 id="4：通过Statement发送SQL命令并得到结果"><a href="#4：通过Statement发送SQL命令并得到结果" class="headerlink" title="4：通过Statement发送SQL命令并得到结果"></a>4：通过Statement发送SQL命令并得到结果</h4><p><strong>statement.executeUpdate</strong> 在sql操作insert、delete、update时使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//5.执行SQL语句，返回结果</span></span><br><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into dept values(50,&#x27;教学部&#x27;,&#x27;BeiJing&#x27;)&quot;</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> statement.executeUpdate(sql); <span class="comment">//insert delete update</span></span><br><span class="line">System.out.println(<span class="string">&quot;影响行数为&quot;</span>+ row);</span><br></pre></td></tr></table></figure>

<h4 id="5：关闭数据库资源ResultSet-Statement-Connection"><a href="#5：关闭数据库资源ResultSet-Statement-Connection" class="headerlink" title="5：关闭数据库资源ResultSet  Statement  Connection"></a>5：关闭数据库资源ResultSet  Statement  Connection</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//6.释放资源</span></span><br><span class="line">statement.close();</span><br><span class="line">connection.close();</span><br></pre></td></tr></table></figure>

<p>结果</p>
<img src="/2021/06/07/JDBC/20210704123012.png" alt="image-20210704123012385" style="zoom:50%;">

<h2 id="4-常见的异常分析"><a href="#4-常见的异常分析" class="headerlink" title="4. 常见的异常分析"></a>4. 常见的异常分析</h2><p>MySQL8中数据库连接的四个参数有两个发生了变化</p>
<p>String driver = “com.mysql.cj.jdbc.Driver”;</p>
<p>String url = “jdbc:mysql://127.0.0.1:3306/mydb?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=Asia/Shanghai”;</p>
<p>或者String url = “…….serverTimezone=GMT%2B8”;</p>
<ul>
<li><strong>错误1：Exception in thread “main” java.lang.ClassNotFoundException: com.mysql.jdbc2.Driver</strong></li>
</ul>
<p>原因：没有添加jar包或者com.mysql.jdbc2.Driver路径错误</p>
<ul>
<li><strong>错误2：Exception in thread “main” java.sql.SQLException:No suitable driver found for jbdc:mysql://127.0.0.1:3306/stumgr</strong></li>
</ul>
<p>原因：url错误</p>
<ul>
<li><strong>错误3：Exception in thread “main” java.sql.SQLException:</strong></li>
</ul>
<p>Access denied for user ‘root‘@’localhost’ (using password: YES)</p>
<p>原因：用户名或者密码错误</p>
<ul>
<li><strong>错误4：Exception in thread “main” com.mysql.jdbc.exceptions</strong></li>
<li><img src="/2021/06/07/JDBC/06/07/JDBC/20210705111903.png" class title="image-20210704153100091"></li>
</ul>
<p>.jdbc4.MySQLIntegrityConstraintViolationException:Duplicate entry ‘90’ for key ‘PRIMARY’</p>
<p>原因：主键冲突</p>
<ul>
<li><p><strong>错误5：Public Key Retrieval is not allowed</strong></p>
<p>如果用户使用 sha256_password 认证，密码在传输过程中必须使用 TLS 协议保护，但是如果 RSA 公钥不可用，可以使用服务器提供的公钥；可以在连接中通过 ServerRSAPublicKeyFile 指定服务器的 RSA 公钥，或者AllowPublicKeyRetrieval=True参数以允许客户端从服务器获取公钥；但是需要注意的是 AllowPublicKeyRetrieval=True可能会导致恶意的代理通过中间人攻击(MITM)获取到明文密码，所以默认是关闭的，必须显式开启<br>在jdbc连接添加上参数<strong>allowPublicKeyRetrieval=true</strong>即可，注意参数间用&amp;</p>
</li>
</ul>
<p>加参数allowPublicKeyRetrieval=true</p>
<h1 id="1-驱动的加载"><a href="#1-驱动的加载" class="headerlink" title="1. 驱动的加载"></a>1. 驱动的加载</h1><ul>
<li><p>在查看Driver的源代码时我们发现,该类内部有一个静态代码块,在代码块中就是在实例化一个驱动并在驱动中心注册.静态代码块会在类进入内存时执行,也就是说,我们只要让该类字节码进入内存,就会自动完成注册,不需要我们手动去new</p>
<img src="/2021/06/07/JDBC/20210704145529.png" alt="image-20210704145529583" style="zoom:50%;">

<img src="/2021/06/07/JDBC/20210704145550.png" alt="image-20210704145550511" style="zoom: 50%;"></li>
<li><p>可以通过反射来加载驱动</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//可以通过反射来加载驱动</span></span><br><span class="line">Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>因为Driver类里面的静态代码块已经注册了驱动，就<strong>不用再单独注册驱动了</strong></p>
</li>
<li><p>查看jar包发现,jar包中已经默认配置了驱动类的加载，其实不需要手动加载，程序运行的时候也会自动加载jar包里的类</p>
<img src="/2021/06/07/JDBC/20210704150456.png" alt="image-20210704150456396" style="zoom:67%;"></li>
</ul>
<h1 id="2-添加异常处理"><a href="#2-添加异常处理" class="headerlink" title="2. 添加异常处理"></a>2. 添加异常处理</h1><img src="/2021/06/07/JDBC/20210704153100.png" alt="image-20210704153100091" style="zoom:67%;">

<p>将需要catch的异常部分 用快捷键<strong>ctrl+alt+T</strong>选择</p>
<img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20210705110755222.png" alt="image-20210705110755222" style="zoom:50%;">

<p>把最后处理放在finally里面，分别加上try catch</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestJDBC2</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String driver=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>;<span class="comment">//</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://127.0.0.1:3306/mytestdb?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true&quot;</span>;<span class="comment">//</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String user= <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url,user,password);</span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into dept values(50,&#x27;教学部&#x27;,&#x27;BeiJing&#x27;)&quot;</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> statement.executeUpdate(sql);</span><br><span class="line">            System.out.println(<span class="string">&quot;影响行数为&quot;</span>+ row);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span> != statement)&#123; <span class="comment">//statement如果创建失败就不需要关了</span></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    statement.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span> != connection)&#123;<span class="comment">// 同上</span></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    connection.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="3-JDBC完成CURD"><a href="#3-JDBC完成CURD" class="headerlink" title="3. JDBC完成CURD"></a>3. JDBC完成CURD</h1><h3 id="删除和修改操作"><a href="#删除和修改操作" class="headerlink" title="删除和修改操作"></a>删除和修改操作</h3><p>和上面实例一样，只需要改sql语句</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;delete from emp where deptno = 20 &quot;</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update dept set dname = &#x27;总部&#x27;,loc=&#x27;BeiJing&#x27; where deptno = 30 &quot;</span>;</span><br></pre></td></tr></table></figure>

<h3 id="查询操作"><a href="#查询操作" class="headerlink" title="查询操作"></a>查询操作</h3><ul>
<li>使用的方法是executeQuery()，返回的是一个结果集即表格被抽象成的对象 <strong>resultSet</strong></li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from emp&quot;</span>;</span><br><span class="line"><span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> statement.executeQuery(sql); </span><br></pre></td></tr></table></figure>

<ul>
<li><p>循环获得每一列的数据：</p>
<p>**resultset.next()**：返回当前游标所指的行数据是否为空，如果为不为空，返回true，游标向下移动；为空则返回false，游标不移动</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (resultSet.next())&#123;<span class="comment">//判断游标是否为空</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">empno</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;empno&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">ename</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;ename&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">job</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;job&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">MGR</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;MGR&quot;</span>);</span><br><span class="line">    <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> resultSet.getDate(<span class="string">&quot;hiredate&quot;</span>);</span><br><span class="line">    <span class="type">double</span> <span class="variable">sal</span> <span class="operator">=</span> resultSet.getDouble(<span class="string">&quot;SAL&quot;</span>);</span><br><span class="line">    <span class="type">double</span> <span class="variable">comm</span> <span class="operator">=</span> resultSet.getDouble(<span class="string">&quot;comm&quot;</span>);</span><br><span class="line">    <span class="type">int</span> <span class="variable">deptno</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;deptno&quot;</span>);</span><br><span class="line">    System.out.println(empno+<span class="string">&quot; &quot;</span>+ename+<span class="string">&quot; &quot;</span>+job+<span class="string">&quot; &quot;</span>+MGR+<span class="string">&quot; &quot;</span>+<span class="string">&quot; &quot;</span>+date+<span class="string">&quot; &quot;</span>+sal+<span class="string">&quot; &quot;</span>+comm+<span class="string">&quot; &quot;</span>+deptno);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ps: 获得的date对象不是util包的，而是sql包的对象</p>
<ul>
<li><p>关闭resultSet：</p>
<p>虽然 Statement 关闭、重新执行或用于从多结果序列中获取下一个结果时，ResultSet将被自动关闭，但是一个好的编程习惯很重要嘛，该关的还是要关。</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="literal">null</span> != resultSet)&#123;</span><br><span class="line">              <span class="keyword">try</span> &#123;</span><br><span class="line">                  resultSet.close();</span><br><span class="line">              &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                  e.printStackTrace();</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br></pre></td></tr></table></figure>

<h4 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chs.test01;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Class.forName;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: ChanHuiShan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-07-05 - 07 - 05 - 16:28</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: com.chs.test01</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestJDBC4</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">static</span> <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span><span class="string">&quot;jdbc:mysql://127.0.0.1:3306/mytestdb?&quot;</span> +</span><br><span class="line">            <span class="string">&quot;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        testQuery();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testQuery</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.加载驱动</span></span><br><span class="line">            forName(driver);</span><br><span class="line">            <span class="comment">//2.建立连接</span></span><br><span class="line">            connection = DriverManager.getConnection(url,user,password);</span><br><span class="line">            <span class="comment">//3.通过连接搭建statement</span></span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line">            <span class="comment">//4.操作sql</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from emp&quot;</span>;</span><br><span class="line">            resultSet = statement.executeQuery(sql);</span><br><span class="line">            <span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">empno</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;empno&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">ename</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;ename&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">job</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;job&quot;</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">MGR</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;MGR&quot;</span>);</span><br><span class="line">                <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> resultSet.getDate(<span class="string">&quot;hiredate&quot;</span>);</span><br><span class="line">                <span class="type">double</span> <span class="variable">sal</span> <span class="operator">=</span> resultSet.getDouble(<span class="string">&quot;SAL&quot;</span>);</span><br><span class="line">                <span class="type">double</span> <span class="variable">comm</span> <span class="operator">=</span> resultSet.getDouble(<span class="string">&quot;comm&quot;</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">deptno</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;deptno&quot;</span>);</span><br><span class="line">                System.out.println(empno+<span class="string">&quot; &quot;</span>+ename+<span class="string">&quot; &quot;</span>+job+<span class="string">&quot; &quot;</span>+MGR+<span class="string">&quot; &quot;</span>+<span class="string">&quot; &quot;</span>+date+<span class="string">&quot; &quot;</span>+sal+<span class="string">&quot; &quot;</span>+comm+<span class="string">&quot; &quot;</span>+deptno);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException | SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="comment">//关闭resultSet</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span> != resultSet)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    resultSet.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span> != statement)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    statement.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span> != connection)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    connection.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>结果：</p>
<img src="/2021/06/07/JDBC/20210705182201.png" alt="image-20210705182200681" style="zoom:50%;">

<h3 id="创建实体类封装结果集"><a href="#创建实体类封装结果集" class="headerlink" title="创建实体类封装结果集"></a>创建实体类封装结果集</h3><p>​    该实体类是和数据表格名称和字段是一一对应的类，该类主要用处是存储重数据库中查询出来的数据，除此之外该类无其他功能。</p>
<h4 id="Emp-java"><a href="#Emp-java" class="headerlink" title="Emp.java"></a>Emp.java</h4><p>要求：</p>
<ul>
<li>类名和表名保持一致</li>
<li>属性个数和表的列数保持一致</li>
<li>属性的数据类型和列的数据类型保持一致</li>
<li>属性名和表格列名保持一致</li>
<li>所有的属性都是私有的 （出于安全考虑）</li>
<li>实体类的属性推荐写成包装类 （例如int类型不能赋值为null）</li>
<li>日期类型建议使用java.util.Date(因为是父类,比较方便使用多态）</li>
<li>所有的属性都要有get和set方法</li>
<li>必须具备空参构造器</li>
<li>实体类需要实现序列化接口（mybatis 分布式）</li>
<li>实体类中其他构造方法可选</li>
<li>添加toString方法</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chs.entity;</span><br><span class="line"><span class="keyword">import</span> com.sun.scenario.effect.impl.prism.PrRenderInfo;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;<span class="comment">//是java.sql.Date的父类</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: ChanHuiShan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-07-05 - 07 - 05 - 19:07</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: com.chs.entity</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Emp</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;<span class="comment">//实现序列化接口</span></span><br><span class="line">    <span class="keyword">private</span> Integer empno;</span><br><span class="line">    <span class="keyword">private</span> String ename;</span><br><span class="line">    <span class="keyword">private</span> String job;</span><br><span class="line">    <span class="keyword">private</span> Integer mgr;</span><br><span class="line">    <span class="keyword">private</span> Date hiredate;</span><br><span class="line">    <span class="keyword">private</span> Double sal;</span><br><span class="line">    <span class="keyword">private</span> Double comm;</span><br><span class="line">    <span class="keyword">private</span> Integer deptno;</span><br><span class="line">    <span class="comment">//可以有其他构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Emp</span><span class="params">(Integer empno, String ename, String job, Integer mgr, Date hiredate, Double sal, Double comm, Integer deptno)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.empno = empno;</span><br><span class="line">        <span class="built_in">this</span>.ename = ename;</span><br><span class="line">        <span class="built_in">this</span>.job = job;</span><br><span class="line">        <span class="built_in">this</span>.mgr = mgr;</span><br><span class="line">        <span class="built_in">this</span>.hiredate = hiredate;</span><br><span class="line">        <span class="built_in">this</span>.sal = sal;</span><br><span class="line">        <span class="built_in">this</span>.comm = comm;</span><br><span class="line">        <span class="built_in">this</span>.deptno = deptno;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//必须有空参构造器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Emp</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//set和get方法省略</span></span><br><span class="line">    <span class="comment">//toSting省略</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="TestJDBC-java"><a href="#TestJDBC-java" class="headerlink" title="TestJDBC.java"></a>TestJDBC.java</h4><p>修改—返回的是Emp的List集合对象：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Emp&gt; <span class="title function_">testQuery</span><span class="params">()</span>&#123;&#125;</span><br></pre></td></tr></table></figure>

<p>main（）方法里面遍历输出：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//获得方法里返回的集合</span></span><br><span class="line">    List&lt;Emp&gt; emps = testQuery();</span><br><span class="line">    <span class="comment">//遍历集合</span></span><br><span class="line">    <span class="keyword">for</span>(Emp emp:emps)&#123;</span><br><span class="line">        System.out.println(emp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h5 id="完整代码-1"><a href="#完整代码-1" class="headerlink" title="完整代码"></a>完整代码</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: ChanHuiShan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-07-05 - 07 - 05 - 16:28</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: com.chs.test01</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestJDBC4</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">static</span> <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span><span class="string">&quot;jdbc:mysql://127.0.0.1:3306/mytestdb?&quot;</span> +</span><br><span class="line">            <span class="string">&quot;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//获得方法里返回的集合</span></span><br><span class="line">        List&lt;Emp&gt; emps = testQuery();</span><br><span class="line">        <span class="comment">//遍历集合</span></span><br><span class="line">        <span class="keyword">for</span>(Emp emp:emps)&#123;</span><br><span class="line">            System.out.println(emp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Emp&gt; <span class="title function_">testQuery</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        List&lt;Emp&gt; list = <span class="literal">null</span>;<span class="comment">//emp对象的集合初始化</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url,user,password);</span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from emp&quot;</span>;</span><br><span class="line">            resultSet = statement.executeQuery(sql);</span><br><span class="line">            list= <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            <span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">empno</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;empno&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">ename</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;ename&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">job</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;job&quot;</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">MGR</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;MGR&quot;</span>);</span><br><span class="line">                <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> resultSet.getDate(<span class="string">&quot;hiredate&quot;</span>);</span><br><span class="line">                <span class="type">double</span> <span class="variable">sal</span> <span class="operator">=</span> resultSet.getDouble(<span class="string">&quot;SAL&quot;</span>);</span><br><span class="line">                <span class="type">double</span> <span class="variable">comm</span> <span class="operator">=</span> resultSet.getDouble(<span class="string">&quot;comm&quot;</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">deptno</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;deptno&quot;</span>);</span><br><span class="line">                <span class="type">Emp</span> <span class="variable">emp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>(empno, ename, job, MGR, date, sal, comm, deptno);<span class="comment">//构造每一行数据对象</span></span><br><span class="line">                list.add(emp);<span class="comment">//将每一行都放入集合中</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException | SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span> != resultSet)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    resultSet.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span> != statement)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    statement.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span> != connection)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    connection.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;<span class="comment">//返回集合</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="4-预编译PreparedStatement"><a href="#4-预编译PreparedStatement" class="headerlink" title="4. 预编译PreparedStatement"></a>4. 预编译PreparedStatement</h1><h2 id="使用预编译语句来预防SQL注入攻击"><a href="#使用预编译语句来预防SQL注入攻击" class="headerlink" title="使用预编译语句来预防SQL注入攻击"></a>使用预编译语句来预防SQL注入攻击</h2><p>​        SQL注入攻击指的是通过构建<strong>特殊的输入</strong>作为<strong>参数</strong>传入<strong>Web应用程序</strong>，而这些输入大都是SQL语法里的一些组合，通过执行SQL语句进而执行攻击者所要的操作，其主要原因是程序没有细致地过滤用户输入的数据，致使非法数据侵入系统。</p>
<h4 id="模拟登录"><a href="#模拟登录" class="headerlink" title="模拟登录"></a>模拟登录</h4><p>在前台输入用户名和密码，后台判断信息是否正确，并给出前台反馈信息，前台输出反馈信息。</p>
<p>具体实现步骤：</p>
<ul>
<li><p>创建数据库表</p>
<img src="/2021/06/07/JDBC/20210706143739.png" style="zoom:50%;"></li>
<li><p>创建实体类</p>
<img src="/2021/06/07/JDBC/20210706143810.png" alt="image-20210706143810882" style="zoom:50%;"></li>
<li><p>测试类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: ChanHuiShan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-07-06 - 07 - 06 - 14:13</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: com.chs.test02</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestInjection</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">static</span> <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span><span class="string">&quot;jdbc:mysql://127.0.0.1:3306/mytestdb?&quot;</span> +</span><br><span class="line">            <span class="string">&quot;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入用户名：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入密码：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">pwd</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        <span class="type">Account</span> <span class="variable">account</span> <span class="operator">=</span> getAccount(username, pwd);</span><br><span class="line">        System.out.println(<span class="literal">null</span>!=account?(<span class="string">&quot;登录成功&quot;</span>+<span class="string">&quot;用户信息&quot;</span>+account):<span class="string">&quot;登录失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Account <span class="title function_">getAccount</span><span class="params">(String username,String pwd)</span>&#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">Account</span> <span class="variable">account</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.加载驱动</span></span><br><span class="line">            forName(driver);</span><br><span class="line">            <span class="comment">//2.建立连接</span></span><br><span class="line">            connection = DriverManager.getConnection(url,user,password);</span><br><span class="line">            <span class="comment">//3.通过连接搭建statement</span></span><br><span class="line">            statement = connection.createStatement();</span><br><span class="line">            <span class="comment">//4.操作sql</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from account where username = &#x27;&quot;</span>+username+<span class="string">&quot;&#x27;and password = &#x27;&quot;</span>+pwd+<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">            resultSet = statement.executeQuery(sql);</span><br><span class="line">            <span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">aid</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;aid&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">usernamea</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">pwda</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">                <span class="type">Double</span> <span class="variable">balance</span> <span class="operator">=</span> resultSet.getDouble(<span class="string">&quot;balance&quot;</span>);</span><br><span class="line">                account = <span class="keyword">new</span> <span class="title class_">Account</span>(aid,usernamea,pwda,balance);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException | SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span> != resultSet)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    resultSet.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span> != statement)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    statement.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span> != connection)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    connection.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> account;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>结果：</p>
<img src="/2021/06/07/JDBC/20210706152659.png" alt="image-20210706152659400" style="zoom:50%;"></li>
</ul>
<h4 id="注入攻击"><a href="#注入攻击" class="headerlink" title="注入攻击"></a>注入攻击</h4><p>构建特殊的输入:</p>
<p>例如输入密码 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">asdf&#x27;or&#x27;a&#x27;=&#x27;a</span><br></pre></td></tr></table></figure>

<p>整个sql语句就会变为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from account where username = &#x27;asdf&#x27; and password = &#x27;asdf&#x27;or&#x27;a&#x27;=&#x27;a&#x27;;</span><br></pre></td></tr></table></figure>

<p>导致含义改变。</p>
<h4 id="通过预编译语句来预防"><a href="#通过预编译语句来预防" class="headerlink" title="通过预编译语句来预防"></a>通过预编译语句来预防</h4><ul>
<li>使用PreparedStatement语句对象防止注入攻击<ul>
<li>PreparedStatement 可以使用 <strong>?</strong> 作为参数的占位符,即使是字符串和日期类型,也不使用单独再添加 <strong>‘ ‘</strong></li>
<li>connection.createStatement();获得的是普通语句对象 Statement<br>ction.prepareStatement(sql);可以获得一个预编译语句对象PreparedStatement</li>
<li>如果SQL语句中有?作为参数占位符号,那么要在执行CURD之前先设置参数<br>***(问号的编号,数据) 方法设置参数</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String sql=<span class="string">&quot;select * from account where username = ? and password = ?&quot;</span>;</span><br><span class="line">preparedStatement = connection.prepareStatement(sql);<span class="comment">//这里已经传入SQL语句</span></span><br><span class="line"><span class="comment">//设置参数</span></span><br><span class="line">preparedStatement.setString(<span class="number">1</span>,username );</span><br><span class="line">preparedStatement.setString(<span class="number">2</span>,pwd );</span><br><span class="line"><span class="comment">//执行CURD</span></span><br><span class="line">resultSet = preparedStatement.executeQuery();<span class="comment">// 这里不需要再传入SQL语句，传了会报错，亲身经历man</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<img src="/2021/06/07/JDBC/20210707200554.png" alt="image-20210707200553352" style="zoom:50%;">

<p>原理：</p>
<p>说白了就是把值当中的所有单引号给<strong>转义</strong>了!这就达到了防止sql注入的目的，说白了mysql驱动的PreparedStatement实现类的<strong>setString()</strong>;方法内部做了单引号的转义，而Statement不能防止sql注入，就是因为它没有把单引号做转义，而是简单粗暴的直接拼接字符串，所以达不到防止sql注入的目的。</p>
<h2 id="预编译的原理"><a href="#预编译的原理" class="headerlink" title="预编译的原理"></a>预编译的原理</h2><h3 id="预编译的开启"><a href="#预编译的开启" class="headerlink" title="预编译的开启"></a>预编译的开启</h3><p>值得注意的是,我们的Connector/J 5.0.5及之后useServerPrepStmts默认false,就是默认没有开启预编译,之前默认为true, cachePrepStmts 一直默认为false,需要我们手动设置才可以启用预编译,在开启预编译的同时要同时开启预编译缓存才能带来些许的性能提升.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;jdbc:mysql://localhost:3306/mydb?*****&amp;useServerPrepStmts=true&amp;cachePrepStmts=true&quot;</span>; </span><br></pre></td></tr></table></figure>

<h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul>
<li><p>安全性高,可以避免SQL注入</p>
</li>
<li><p>简单不繁琐,不用进行字符串拼接</p>
</li>
<li><p>性能高，用在执行多个相同数据库DML操作时,可以减少sql语句的编译次数</p>
</li>
</ul>
<h2 id="预编译实现CURD"><a href="#预编译实现CURD" class="headerlink" title="预编译实现CURD"></a>预编译实现CURD</h2><h4 id="TestPreparedStatement-java"><a href="#TestPreparedStatement-java" class="headerlink" title="TestPreparedStatement.java"></a>TestPreparedStatement.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: ChanHuiShan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-07-06 - 07 - 06 - 19:31</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: com.chs.test03</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestPreparedStatement</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://127.0.0.1:3306/mytestdb?&quot;</span> +</span><br><span class="line">            <span class="string">&quot;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        testAdd(); <span class="comment">//向emp表中增加一条数据</span></span><br><span class="line">        testUpdate();<span class="comment">//根据工号修改员工表中的数据</span></span><br><span class="line">        testDelete();<span class="comment">//根据工号删除员工表中的数据</span></span><br><span class="line">        testQuery();<span class="comment">//查询名字中包含A的员工信息</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testAdd</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//向emp表中增加一条数据</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url, user, password);</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into emp values(DEFAULT,?,?,?,?,?,?,?)&quot;</span>;</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);<span class="comment">//这个时候就要传入语句对象</span></span><br><span class="line">            <span class="comment">//设置参数</span></span><br><span class="line">            preparedStatement.setString(<span class="number">1</span>, <span class="string">&quot;Mark&quot;</span>);</span><br><span class="line">            preparedStatement.setString(<span class="number">2</span>, <span class="string">&quot;MANAGER&quot;</span>);</span><br><span class="line">            preparedStatement.setInt(<span class="number">3</span>, <span class="number">7839</span>);</span><br><span class="line">            preparedStatement.setDate(<span class="number">4</span>, <span class="keyword">new</span> <span class="title class_">Date</span>(System.currentTimeMillis()));</span><br><span class="line">            preparedStatement.setDouble(<span class="number">5</span>, <span class="number">3000.12</span>);</span><br><span class="line">            preparedStatement.setDouble(<span class="number">6</span>, <span class="number">0.0</span>);</span><br><span class="line">            preparedStatement.setDouble(<span class="number">7</span>, <span class="number">30</span>);</span><br><span class="line">            <span class="comment">//执行CURD</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> preparedStatement.executeUpdate();</span><br><span class="line">            System.out.println(<span class="string">&quot;影响行数&quot;</span> + rows);</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">catch</span>()&#123;&#125;<span class="keyword">finally</span>&#123;&#125; </span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//根据工号修改员工表中的数据</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url, user, password);</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update emp set ename =?,job= ? where empno = ?&quot;</span>;</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);<span class="comment">//这个时候就要传入语句对象</span></span><br><span class="line">            <span class="comment">//设置参数</span></span><br><span class="line">            preparedStatement.setString(<span class="number">1</span>, <span class="string">&quot;John&quot;</span>);</span><br><span class="line">            preparedStatement.setString(<span class="number">2</span>, <span class="string">&quot;ANALYST&quot;</span>);</span><br><span class="line">            preparedStatement.setInt(<span class="number">3</span>, <span class="number">7777</span>);</span><br><span class="line">            <span class="comment">//执行CURD</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> preparedStatement.executeUpdate();</span><br><span class="line">            System.out.println(<span class="string">&quot;影响行数&quot;</span> + rows);</span><br><span class="line">        &#125;<span class="keyword">catch</span>()&#123;&#125;<span class="keyword">finally</span>&#123;&#125;<span class="comment">//这部分都省略，同下</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testDelete</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//根据工号删除员工表中的数据</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url, user, password);</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;delete from emp where empno = ?&quot;</span>;</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);<span class="comment">//这个时候就要传入语句对象</span></span><br><span class="line">            <span class="comment">//设置参数</span></span><br><span class="line">            preparedStatement.setInt(<span class="number">1</span>, <span class="number">7777</span>);</span><br><span class="line">            <span class="comment">//执行CURD</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> preparedStatement.executeUpdate();</span><br><span class="line">            System.out.println(<span class="string">&quot;影响行数&quot;</span> + rows);</span><br><span class="line">        &#125; <span class="keyword">catch</span>()&#123;&#125;<span class="keyword">finally</span>&#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testQuery</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//查询名字中包含A的员工信息</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        List&lt;Emp&gt; list = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url, user, password);</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from emp where ename like ?&quot;</span>;</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            preparedStatement.setString(<span class="number">1</span>,<span class="string">&quot;%A%&quot;</span>);</span><br><span class="line">            resultSet = preparedStatement.executeQuery();</span><br><span class="line">            list= <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">empno</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;empno&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">ename</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;ename&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">job</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;job&quot;</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">MGR</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;MGR&quot;</span>);</span><br><span class="line">                <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> resultSet.getDate(<span class="string">&quot;hiredate&quot;</span>);</span><br><span class="line">                <span class="type">double</span> <span class="variable">sal</span> <span class="operator">=</span> resultSet.getDouble(<span class="string">&quot;SAL&quot;</span>);</span><br><span class="line">                <span class="type">double</span> <span class="variable">comm</span> <span class="operator">=</span> resultSet.getDouble(<span class="string">&quot;comm&quot;</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">deptno</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;deptno&quot;</span>);</span><br><span class="line">                <span class="type">Emp</span> <span class="variable">emp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>(empno, ename, job, MGR, date, sal, comm, deptno);</span><br><span class="line">                list.add(emp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> () &#123;&#125; <span class="keyword">finally</span> &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span>(Emp e:list)&#123;</span><br><span class="line">            System.out.println(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="5-批处理"><a href="#5-批处理" class="headerlink" title="5. 批处理"></a>5. 批处理</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>​        当我们有多条sql语句需要发送到数据库执行的时候，有两种发送方式，一种是执行一条发送一条sql语句给数据库,另一个种是发送一个sql集合给数据库，也就是发送一个批sql到数据库。普通的执行过程是：每处理一条数据，就访问一次数据库；而批处理是：累积到一定数量，再一次性提交到数据库，减少了与数据库的交互次数，所以效率会大大提高,很显然两者的数据库执行效率是不同的，我们发送批处理sql的时候数据库执行效率要高</p>
<h2 id="Statement和preparedStatement的批处理区别"><a href="#Statement和preparedStatement的批处理区别" class="headerlink" title="Statement和preparedStatement的批处理区别"></a>Statement和preparedStatement的批处理区别</h2><ul>
<li>statement语句对象实现批处理有如下问题<ul>
<li>缺点：采用硬编码效率低，安全性较差。</li>
<li>原理：硬编码，每次执行时相似SQL都会进行编译  </li>
</ul>
</li>
<li>PreparedStatement+批处理<ul>
<li>优点：语句只编译一次，减少编译次数。提高了安全性（阻止了SQL注入）</li>
<li>原理：相似SQL只编译一次，减少编译次数</li>
</ul>
</li>
</ul>
<h2 id="批处理开启"><a href="#批处理开启" class="headerlink" title="批处理开启"></a>批处理开启</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&amp;rewriteBatchedStatements=true&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>向部门表中增加多条数据</p>
<p>利用循环添加，并每1000为一批，放入之后清除</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into dept values(default ,?,?)&quot;</span>;</span><br><span class="line">preparedStatement = connection.prepareStatement(sql);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10036</span> i++) &#123;</span><br><span class="line">    preparedStatement.setString(<span class="number">1</span>,<span class="string">&quot;name&quot;</span>);</span><br><span class="line">    preparedStatement.setString(<span class="number">2</span>,<span class="string">&quot;location&quot;</span>);</span><br><span class="line">    <span class="comment">//放进一批里</span></span><br><span class="line">    preparedStatement.addBatch();</span><br><span class="line">    <span class="keyword">if</span>(i%<span class="number">1000</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="comment">//每1000为一批，放入后清除</span></span><br><span class="line">        preparedStatement.executeBatch();</span><br><span class="line">        preparedStatement.clearBatch();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//没有整除完的部分</span></span><br><span class="line">preparedStatement.executeBatch();</span><br><span class="line">preparedStatement.addBatch();</span><br></pre></td></tr></table></figure>

<h1 id="6-JDBC控制事务"><a href="#6-JDBC控制事务" class="headerlink" title="6.JDBC控制事务"></a>6.JDBC控制事务</h1><p>主要是在学习如何让多个数据库操作成为一个整体，实现要么全部执行成功，要么全部都不执行</p>
<p>在JDBC中，事务操作是自动提交，一条对数据库的DML代表一项事务操作</p>
<p>转账的操作：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: ChanHuiShan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-07-08 - 07 - 08 - 16:02</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: com.chs.test05</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestTransaction</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://127.0.0.1:3306/mytestdb?&quot;</span> +</span><br><span class="line">            <span class="string">&quot;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;&quot;</span> +    <span class="string">&quot;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true&amp;useServerPrepStmts=true&amp;cachePrepStmts=true&amp;rewriteBatchedStatements=true&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        testTransaction();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义一个方法，向部门表增加多条数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testTransaction</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url, user, password);</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update account set balance = balance-? where aid =?&quot;</span>;</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            <span class="comment">//转出</span></span><br><span class="line">            preparedStatement.setDouble(<span class="number">1</span>,<span class="number">100</span>);</span><br><span class="line">            preparedStatement.setInt(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">            <span class="comment">//执行</span></span><br><span class="line">            preparedStatement.executeUpdate();</span><br><span class="line">            <span class="comment">//转入</span></span><br><span class="line">            preparedStatement.setDouble(<span class="number">1</span>,-<span class="number">100</span>);</span><br><span class="line">            preparedStatement.setInt(<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line">            <span class="comment">//执行</span></span><br><span class="line">            preparedStatement.executeUpdate();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException | SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != preparedStatement) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    preparedStatement.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != connection) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    connection.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>为了保证多个sql语句一起执行，使用事务。</p>
<p>在JDBC中，事务操作是<strong>自动提交</strong>。一条对数据库的DML(insert、update、delete)代表一项事务操作,操作成功后，系统将自动调用commit()提交，否则自动调用rollback()回滚。</p>
<h3 id="设置事务手动提交"><a href="#设置事务手动提交" class="headerlink" title="设置事务手动提交"></a>设置事务手动提交</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">            forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url, user, password);</span><br><span class="line">            <span class="comment">//设置事务手动提交</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update account set balance = balance-? where aid =?&quot;</span>;</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            <span class="comment">//转出</span></span><br><span class="line">            preparedStatement.setDouble(<span class="number">1</span>,<span class="number">100</span>);</span><br><span class="line">            preparedStatement.setInt(<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">            preparedStatement.executeUpdate();</span><br><span class="line">   		   <span class="comment">//出现异常</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">            <span class="comment">//转入</span></span><br><span class="line">            preparedStatement.setDouble(<span class="number">1</span>,-<span class="number">100</span>);</span><br><span class="line">            preparedStatement.setInt(<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line">            preparedStatement.executeUpdate();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">//回滚操作</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span>!=connection)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    connection.rollback();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span><br><span class="line">                    ex.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//提交操作</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span>!=connection)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    connection.commit();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != preparedStatement) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    preparedStatement.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != connection) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    connection.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<h3 id="设置回滚点"><a href="#设置回滚点" class="headerlink" title="设置回滚点"></a>设置回滚点</h3><p>作用是保证回滚点之前的数据更改生效，回滚点以后的数据更改操作就会无效。</p>
<p>并且回滚点的操作值可以进行更改和设置。</p>
<ul>
<li>在增加数据操作里面，每一千设置一个回滚点：</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">connection = DriverManager.getConnection(url, user, password);</span><br><span class="line">connection.setAutoCommit(<span class="literal">false</span>);<span class="comment">//设置手动提交</span></span><br><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into dept values(default ,?,?)&quot;</span>;</span><br><span class="line">preparedStatement = connection.prepareStatement(sql);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10036</span>; i++) &#123;</span><br><span class="line">    preparedStatement.setString(<span class="number">1</span>,<span class="string">&quot;name&quot;</span>);</span><br><span class="line">    preparedStatement.setString(<span class="number">2</span>,<span class="string">&quot;location&quot;</span>);</span><br><span class="line">    preparedStatement.addBatch();</span><br><span class="line">    <span class="keyword">if</span>(i%<span class="number">1000</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        preparedStatement.executeBatch();</span><br><span class="line">        preparedStatement.clearBatch();</span><br><span class="line">        <span class="comment">//每一千条设置回滚点</span></span><br><span class="line">        <span class="type">Savepoint</span> <span class="variable">savepoint</span> <span class="operator">=</span> connection.setSavepoint();</span><br><span class="line">        savepoints.addLast(savepoint);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//期间出现异常</span></span><br><span class="line">    <span class="keyword">if</span>(i==<span class="number">10001</span>)&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span><span class="number">1</span>/<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">preparedStatement.executeBatch();</span><br><span class="line">preparedStatement.addBatch();</span><br></pre></td></tr></table></figure>

<ul>
<li>出现异常是10000以后，在最后一个回滚点回滚，剩下36则不保留</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> != connection) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获得回滚点集合最后一个点</span></span><br><span class="line">            <span class="type">Savepoint</span> <span class="variable">sp</span> <span class="operator">=</span> savepoints.getLast();</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span> != sp)&#123;</span><br><span class="line">                connection.rollback(sp);&#125;<span class="comment">//回滚</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span><br><span class="line">            ex.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<ul>
<li>设置特定的回滚点</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获得特定的回滚点</span></span><br><span class="line"><span class="type">Savepoint</span> <span class="variable">sp</span> <span class="operator">=</span> savepoints.get(<span class="number">4</span>);</span><br></pre></td></tr></table></figure>

<h1 id="7-DAO模式"><a href="#7-DAO模式" class="headerlink" title="7. DAO模式"></a>7. DAO模式</h1><p>项目结构</p>
<ul>
<li><p><strong>实体类</strong>：和数据库表格一一对应的类,单独放入一个包中,包名往往是 pojo/entity/bean,要操作的每个表格都应该有对应的实体类</p>
<ul>
<li><p>emp &gt; class Emp  </p>
<p>dept &gt; class Dept  </p>
<p>account &gt; class Account </p>
</li>
</ul>
</li>
<li><p><strong>DAO层</strong>：定义了对数据要执行那些操作的接口和实现类,包名往往是 dao/mapper,要操作的每个表格都应该有对应的接口和实现类</p>
<ul>
<li><p>emp &gt; interface EmpDao &gt;EmpDaoImpl</p>
<p>dept &gt; interface DeptDao&gt; DeptDaoImpl</p>
</li>
</ul>
</li>
<li><p>Mybatis/Spring-JDBCTemplate 中,对DAO层代码进行了封装,代码编写方式会有其他变化</p>
</li>
</ul>
<p>项目截图</p>
<img src="/2021/06/07/JDBC/20210709153202.png" alt="image-20210709153201647" style="zoom: 50%;">

<h2 id="接口类（DAO层）"><a href="#接口类（DAO层）" class="headerlink" title="接口类（DAO层）"></a>接口类（DAO层）</h2><h3 id="Emp-java-1"><a href="#Emp-java-1" class="headerlink" title="Emp.java"></a>Emp.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: ChanHuiShan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-07-09 - 07 - 09 - 15:26</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: com.chs.dao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">EmpDao</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向数据库Emp表中增加一条数据的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> emp 要增加的数据封装成的Emp类的对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 增加成功返回大于0的整数，增加失败返回0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">addEmp</span><span class="params">(Emp emp)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据员工编号来删除员工信息的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> empno 要删除的员工的编号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 删除成功返回大于0的整数，删除失败返回0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteByEmpno</span><span class="params">(<span class="type">int</span> empno)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有员工的信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 所有员工的信息集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;Emp&gt; <span class="title function_">findAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据工号修改员工信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> emp 传入修改的信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 修改成功返回大于0的整数，删除失败返回0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateEmp</span><span class="params">(Emp emp)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Dept-java"><a href="#Dept-java" class="headerlink" title="Dept.java"></a>Dept.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: ChanHuiShan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-07-09 - 07 - 09 - 15:26</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: com.chs.dao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">DeptDao</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有部门信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 所有部门信息的集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;Dept&gt; <span class="title function_">findAll</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加部门信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dept 需要添加的部门信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 增加成功返回大于0的整数，增加失败返回0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">addDept</span><span class="params">(Dept dept)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="实现类（未被抽取的）"><a href="#实现类（未被抽取的）" class="headerlink" title="实现类（未被抽取的）"></a>实现类（未被抽取的）</h2><h3 id="EmpDaoImpl-java"><a href="#EmpDaoImpl-java" class="headerlink" title="EmpDaoImpl.java"></a>EmpDaoImpl.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: ChanHuiShan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-07-09 - 07 - 09 - 15:28</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: com.chs.dao.impl</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmpDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">EmpDao</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://127.0.0.1:3306/mytestdb?&quot;</span> +</span><br><span class="line">            <span class="string">&quot;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addEmp</span><span class="params">(Emp emp)</span> &#123;</span><br><span class="line">        <span class="comment">//向emp表中增加一条数据</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> rows= <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url, user, password);</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into emp values(DEFAULT,?,?,?,?,?,?,?)&quot;</span>;</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);<span class="comment">//这个时候就要传入语句对象</span></span><br><span class="line">            <span class="comment">//设置参数</span></span><br><span class="line">            preparedStatement.setObject(<span class="number">1</span>, emp.getEname());</span><br><span class="line">            preparedStatement.setObject(<span class="number">2</span>, emp.getJob());</span><br><span class="line">            preparedStatement.setObject(<span class="number">3</span>, emp.getMgr());</span><br><span class="line">            preparedStatement.setObject(<span class="number">4</span>, emp.getHiredate());</span><br><span class="line">            preparedStatement.setObject(<span class="number">5</span>, emp.getSal());</span><br><span class="line">            preparedStatement.setObject(<span class="number">6</span>, emp.getComm());</span><br><span class="line">            preparedStatement.setObject(<span class="number">7</span>, emp.getDeptno());</span><br><span class="line">            <span class="comment">//执行CURD</span></span><br><span class="line">            rows = preparedStatement.executeUpdate();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException | SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;<span class="comment">//释放资源</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != preparedStatement) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    preparedStatement.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != connection) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    connection.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> rows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteByEmpno</span><span class="params">(<span class="type">int</span> empno)</span> &#123;</span><br><span class="line">        <span class="comment">//根据工号删除员工表中的数据</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> rows= <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url, user, password);</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;delete from emp where empno = ?&quot;</span>;</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);<span class="comment">//这个时候就要传入语句对象</span></span><br><span class="line">            <span class="comment">//设置参数</span></span><br><span class="line">            preparedStatement.setObject(<span class="number">1</span>, empno);</span><br><span class="line">            <span class="comment">//执行CURD</span></span><br><span class="line">            rows = preparedStatement.executeUpdate();</span><br><span class="line">            <span class="comment">//设置参数然后今次那</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException | SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;<span class="comment">//释放资源</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != preparedStatement) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    preparedStatement.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != connection) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    connection.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> rows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Emp&gt; <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//查询名字中包含A的员工信息</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        List&lt;Emp&gt; list = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url, user, password);</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from emp &quot;</span>;</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            resultSet = preparedStatement.executeQuery();</span><br><span class="line">            list= <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">empno</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;empno&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">ename</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;ename&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">job</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;job&quot;</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">MGR</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;MGR&quot;</span>);</span><br><span class="line">                <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> resultSet.getDate(<span class="string">&quot;hiredate&quot;</span>);</span><br><span class="line">                <span class="type">double</span> <span class="variable">sal</span> <span class="operator">=</span> resultSet.getDouble(<span class="string">&quot;SAL&quot;</span>);</span><br><span class="line">                <span class="type">double</span> <span class="variable">comm</span> <span class="operator">=</span> resultSet.getDouble(<span class="string">&quot;comm&quot;</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">deptno</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;deptno&quot;</span>);</span><br><span class="line">                <span class="type">Emp</span> <span class="variable">emp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>(empno, ename, job, MGR, date, sal, comm, deptno);</span><br><span class="line">                list.add(emp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException | SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != resultSet) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    resultSet.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != preparedStatement) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    preparedStatement.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != connection) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    connection.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateEmp</span><span class="params">(Emp emp)</span> &#123;</span><br><span class="line">        <span class="comment">//向emp表中增加一条数据</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> rows= <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url, user, password);</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update emp set ename = ?,job = ?,mgr = ?,hiredate=?,sal=?,comm=? ,deptno = ? where empno = ?&quot;</span>;</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);<span class="comment">//这个时候就要传入语句对象</span></span><br><span class="line">            <span class="comment">//设置参数</span></span><br><span class="line">            preparedStatement.setObject(<span class="number">1</span>, emp.getEname());</span><br><span class="line">            preparedStatement.setObject(<span class="number">2</span>, emp.getJob());</span><br><span class="line">            preparedStatement.setObject(<span class="number">3</span>, emp.getMgr());</span><br><span class="line">            preparedStatement.setObject(<span class="number">4</span>, emp.getHiredate());</span><br><span class="line">            preparedStatement.setObject(<span class="number">5</span>, emp.getSal());</span><br><span class="line">            preparedStatement.setObject(<span class="number">6</span>, emp.getComm());</span><br><span class="line">            preparedStatement.setObject(<span class="number">7</span>, emp.getDeptno());</span><br><span class="line">            preparedStatement.setObject(<span class="number">8</span>,emp.getEmpno());</span><br><span class="line">            <span class="comment">//执行CURD</span></span><br><span class="line">            rows = preparedStatement.executeUpdate();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException | SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;<span class="comment">//释放资源</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != preparedStatement) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    preparedStatement.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != connection) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    connection.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> rows;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这些操作都很多相似的地方，可以被抽取成为一个总的类，所以可以啊看待</p>
<h3 id="DeptDaoImpl-java"><a href="#DeptDaoImpl-java" class="headerlink" title="DeptDaoImpl.java"></a>DeptDaoImpl.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: ChanHuiShan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-07-09 - 07 - 09 - 15:29</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: com.chs.dao.impl</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeptDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">DeptDao</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">driver</span> <span class="operator">=</span> <span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://127.0.0.1:3306/mytestdb?&quot;</span> +</span><br><span class="line">            <span class="string">&quot;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">user</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Dept&gt; <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//查询名字中包含A的员工信息</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        List&lt;Dept&gt; list = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url, user, password);</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from dept &quot;</span>;</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            resultSet = preparedStatement.executeQuery();</span><br><span class="line">            list= <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">deptno</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;deptno&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">dname</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;dname&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">loc</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;loc&quot;</span>);</span><br><span class="line">                <span class="type">Dept</span> <span class="variable">dept</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dept</span>(deptno,dname,loc);</span><br><span class="line">                list.add(dept);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException | SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != resultSet) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    resultSet.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != preparedStatement) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    preparedStatement.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != connection) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    connection.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addDept</span><span class="params">(Dept dept)</span> &#123;</span><br><span class="line">        <span class="comment">//向emp表中增加一条数据</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> rows= <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            forName(driver);</span><br><span class="line">            connection = DriverManager.getConnection(url, user, password);</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into dept values(?,?,?)&quot;</span>;</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);<span class="comment">//这个时候就要传入语句对象</span></span><br><span class="line">            <span class="comment">//设置参数</span></span><br><span class="line">            preparedStatement.setObject(<span class="number">1</span>,dept.getDeptno());</span><br><span class="line">            preparedStatement.setObject(<span class="number">2</span>,dept.getDname());</span><br><span class="line">            preparedStatement.setObject(<span class="number">3</span>,dept.getLoc());</span><br><span class="line">            <span class="comment">//执行CURD</span></span><br><span class="line">            rows = preparedStatement.executeUpdate();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException | SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;<span class="comment">//释放资源</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != preparedStatement) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    preparedStatement.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != connection) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    connection.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> rows;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="员工管理系统"><a href="#员工管理系统" class="headerlink" title="员工管理系统"></a>员工管理系统</h2><h3 id="EmpManageSystem-java"><a href="#EmpManageSystem-java" class="headerlink" title="EmpManageSystem.java"></a>EmpManageSystem.java</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>: ChanHuiShan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span>: 2021-07-09 - 07 - 09 - 20:11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>: com.chs.view</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>: 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmpManageSystem</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">EmpDao</span> <span class="variable">empDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EmpDaoImpl</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DeptDao deptDao= <span class="keyword">new</span> <span class="title class_">DeptDaoImpl</span>();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">SimpleDateFormat</span> <span class="variable">simpleDateFormat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;<span class="comment">//控制台循环打印</span></span><br><span class="line">            showMenu();</span><br><span class="line">            System.out.println(<span class="string">&quot;请用户录入选项&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">            <span class="keyword">switch</span> (i)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    case1();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    case2();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    case3();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                    case4();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                    case5();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                    case6();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    System.out.println(<span class="string">&quot;请输入1-7的数字！！！&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">showMenu</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;----------------------------&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;1.查看所有员工的信息&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;2.查看所有部门信息&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;3.根据工号删除员工信息&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;4.根据工号修改员工信息&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;5.增加员工信息&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;6.增加部门信息&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;----------------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">case1</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//查看所有员工的信息</span></span><br><span class="line">        List&lt;Emp&gt; list = empDao.findAll();</span><br><span class="line">        <span class="comment">/*for (Emp e: list)&#123;</span></span><br><span class="line"><span class="comment">            System.out.println(e);</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">case2</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//查看所有部门的信息</span></span><br><span class="line">        List&lt;Dept&gt; list = deptDao.findAll();</span><br><span class="line">        list.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">case3</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//根据工号来删除员工信息</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入要删除员工的工号：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> empDao.deleteByEmpno(i);</span><br><span class="line">        <span class="keyword">if</span> (i1!=<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;删除成功！&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;删除失败！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">case4</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//根据员工工号修改员工信息</span></span><br><span class="line">        System.out.println(<span class="string">&quot;*请输入员工的编号&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">empno</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;*请输入员工的姓名&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">ename</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        System.out.println(<span class="string">&quot;*请输入员工的工作&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">job</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        System.out.println(<span class="string">&quot;*请输入员工的上级编号&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">mgr</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;*请输入员工的聘用日期（格式为yyyy-mm-dd）&quot;</span>);</span><br><span class="line">        <span class="type">Date</span> <span class="variable">hiredate</span> <span class="operator">=</span> <span class="literal">null</span>;<span class="comment">//把参数从try代码块里拿出来初始化，因为创建对象的时候会访问不到这个值</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            hiredate = simpleDateFormat.parse(sc.next());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请按照格式输入!!!&quot;</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;*请输入员工的薪资&quot;</span>);</span><br><span class="line">        <span class="type">double</span> <span class="variable">sal</span> <span class="operator">=</span> sc.nextDouble();</span><br><span class="line">        System.out.println(<span class="string">&quot;*请输入员工的奖金&quot;</span>);</span><br><span class="line">        <span class="type">double</span> <span class="variable">comm</span> <span class="operator">=</span> sc.nextDouble();</span><br><span class="line">        System.out.println(<span class="string">&quot;*请输入员工的部门编号&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">deptno</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>(empno,ename,job,mgr,hiredate,sal,comm,deptno);</span><br><span class="line">        empDao.updateEmp(emp);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">case5</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//添加员工信息</span></span><br><span class="line">        System.out.println(<span class="string">&quot;*请输入员工的姓名&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">ename</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        System.out.println(<span class="string">&quot;*请输入员工的工作&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">job</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        System.out.println(<span class="string">&quot;*请输入员工的上级编号&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">mgr</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;*请输入员工的聘用日期（格式为yyyy-mm-dd）&quot;</span>);</span><br><span class="line">        <span class="type">Date</span> <span class="variable">hiredate</span> <span class="operator">=</span> <span class="literal">null</span>;<span class="comment">//把参数从try代码块里拿出来初始化，因为创建对象的时候会访问不到这个值</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            hiredate = simpleDateFormat.parse(sc.next());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请按照格式输入!!!&quot;</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;*请输入员工的薪资&quot;</span>);</span><br><span class="line">        <span class="type">double</span> <span class="variable">sal</span> <span class="operator">=</span> sc.nextDouble();</span><br><span class="line">        System.out.println(<span class="string">&quot;*请输入员工的奖金&quot;</span>);</span><br><span class="line">        <span class="type">double</span> <span class="variable">comm</span> <span class="operator">=</span> sc.nextDouble();</span><br><span class="line">        System.out.println(<span class="string">&quot;*请输入员工的部门编号&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">deptno</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">Emp</span> <span class="variable">emp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Emp</span>(<span class="literal">null</span>,ename,job,mgr,hiredate,sal,comm,deptno);</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> empDao.addEmp(emp);</span><br><span class="line">        <span class="keyword">if</span> (i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;添加成功&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;添加失败！！！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">case6</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//添加部门信息</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入部门号&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">deptno</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;*请输入部门名称&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">dname</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        System.out.println(<span class="string">&quot;*请输入部门地址&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">loc</span> <span class="operator">=</span> sc.next();</span><br><span class="line">        <span class="type">Dept</span> <span class="variable">dept</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dept</span>(deptno, dname, loc);</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> deptDao.addDept(dept);</span><br><span class="line">        <span class="keyword">if</span> (i&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;添加成功&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;添加失败！！！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="BaseDao抽取"><a href="#BaseDao抽取" class="headerlink" title="BaseDao抽取"></a>BaseDao抽取</h2><p>由上面实现类的代码可以看到增删改查方法的代码都很相似，其实可以把相似的部分抽取出来称为一个BaseDao的类</p>
<h3 id="增删改的抽取–baseUpdate"><a href="#增删改的抽取–baseUpdate" class="headerlink" title="增删改的抽取–baseUpdate"></a>增删改的抽取–baseUpdate</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 增删改方法的抽取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql 传入的sql语句对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args 传入的可变参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 修改成功返回大于0的数，返回失败返回0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">baseUpdate</span><span class="params">(String sql,Object ... args)</span>&#123;</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">int</span> rows= <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        forName(driver);</span><br><span class="line">        connection = DriverManager.getConnection(url, user, password);</span><br><span class="line">        preparedStatement = connection.prepareStatement(sql);<span class="comment">//这个时候就要传入语句对象</span></span><br><span class="line">        <span class="comment">//设置参数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; args.length; i++) &#123;</span><br><span class="line">            preparedStatement.setObject(i+<span class="number">1</span>,args[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//执行CURD</span></span><br><span class="line">        rows = preparedStatement.executeUpdate();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClassNotFoundException | SQLException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;<span class="comment">//释放资源</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != preparedStatement) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                preparedStatement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != connection) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rows;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="查询的抽取–baseQuery"><a href="#查询的抽取–baseQuery" class="headerlink" title="查询的抽取–baseQuery"></a>查询的抽取–baseQuery</h3><p>通过<strong>反射</strong>获取传入字节码的对象属性</p>
<p>关于<strong>反射是否破坏封装类</strong>（面试）：<a href="https://www.cnblogs.com/wk-missQ1/p/13304329.html">https://www.cnblogs.com/wk-missQ1/p/13304329.html</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询操作的抽取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz 传入字节码以便通过反射获得对象的属性，</span></span><br><span class="line"><span class="comment">     *              因为不知道具体会传入什么对象里面是什么属性。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql 传入的sql语句对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args 一些可变的参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回一个查询结果集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> List <span class="title function_">baseQuery</span><span class="params">(Class clazz,String sql,Object ... args)</span>&#123;</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        forName(driver);</span><br><span class="line">        connection = DriverManager.getConnection(url, user, password);</span><br><span class="line">        preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">        list= <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//设置参数 -- 这里要注意呀</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; args.length; i++) &#123;</span><br><span class="line">            preparedStatement.setObject(i+<span class="number">1</span>,args[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//执行CURD</span></span><br><span class="line">        resultSet = preparedStatement.executeQuery();</span><br><span class="line">        <span class="comment">//通过字节码获取对象的属性</span></span><br><span class="line">        Field[] fields = clazz.getDeclaredFields();</span><br><span class="line">        <span class="comment">//获取访问封装类属性的权限--设置为true可以访问</span></span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">            <span class="comment">//通过反射创建对象</span></span><br><span class="line">            <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> clazz.newInstance();<span class="comment">//默认通过反射调用对象的空参构造方法</span></span><br><span class="line">            <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> field.getName();<span class="comment">//先将属性名字获得</span></span><br><span class="line">                <span class="type">Object</span> <span class="variable">data</span> <span class="operator">=</span> resultSet.getObject(name);<span class="comment">//通过属性名从结果集中获得</span></span><br><span class="line">                field.set(data,obj);<span class="comment">//将数据放入对象中</span></span><br><span class="line">            &#125;</span><br><span class="line">            list.add(obj);<span class="comment">//将对象加入到链表集合里</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClassNotFoundException | SQLException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InstantiationException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != resultSet) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                resultSet.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != preparedStatement) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                preparedStatement.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> != connection) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置参数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; args.length; i++) &#123;</span><br><span class="line">    preparedStatement.setObject(i+<span class="number">1</span>,args[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//执行CURD</span></span><br><span class="line">resultSet = preparedStatement.executeQuery();</span><br><span class="line"><span class="comment">//通过字节码获取对象的属性</span></span><br><span class="line">Field[] fields = clazz.getDeclaredFields();</span><br><span class="line"><span class="comment">//获取访问封装类属性的权限--设置为true可以访问</span></span><br><span class="line"><span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">    field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">    <span class="comment">//通过反射创建对象</span></span><br><span class="line">    <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> clazz.newInstance();<span class="comment">//默认通过反射调用对象的空参构造方法</span></span><br><span class="line">    <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> field.getName();<span class="comment">//先将属性名字获得</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">data</span> <span class="operator">=</span> resultSet.getObject(name);<span class="comment">//通过属性名从结果集中获得</span></span><br><span class="line">        field.set(data,obj);<span class="comment">//将数据放入对象中</span></span><br><span class="line">    &#125;</span><br><span class="line">    list.add(obj);<span class="comment">//将对象放入list表中</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这样一来，两个实现类中间的增删改操作就可以被简化</p>
<h3 id="实现类简化结果"><a href="#实现类简化结果" class="headerlink" title="实现类简化结果"></a>实现类简化结果</h3><h4 id="DeptDaoImpl-java-1"><a href="#DeptDaoImpl-java-1" class="headerlink" title="DeptDaoImpl.java"></a>DeptDaoImpl.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DeptDaoImpl</span> <span class="keyword">extends</span> <span class="title class_">BaseDao</span> <span class="keyword">implements</span> <span class="title class_">DeptDao</span> &#123;<span class="comment">//注意继承BaseDao</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Dept&gt; <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from dept &quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> baseQuery(Dept.class,sql);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addDept</span><span class="params">(Dept dept)</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into dept values(?,?,?)&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> baseUpdate(sql,dept.getDeptno(),dept.getDname(),</span><br><span class="line">                    dept.getLoc());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="EmpDaoImpl-java-1"><a href="#EmpDaoImpl-java-1" class="headerlink" title="EmpDaoImpl.java"></a>EmpDaoImpl.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmpDaoImpl</span> <span class="keyword">extends</span> <span class="title class_">BaseDao</span> <span class="keyword">implements</span> <span class="title class_">EmpDao</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addEmp</span><span class="params">(Emp emp)</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into emp values(DEFAULT,?,?,?,?,?,?,?)&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> baseUpdate(sql,emp.getEname(),emp.getJob(),emp.getMgr(),</span><br><span class="line">                    emp.getHiredate(),emp.getSal(),emp.getComm(),emp.getDeptno());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">deleteByEmpno</span><span class="params">(<span class="type">int</span> empno)</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;delete from emp where empno = ?&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> baseUpdate(sql,empno);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Emp&gt; <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from emp &quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> baseQuery(Emp.class,sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateEmp</span><span class="params">(Emp emp)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update emp set ename = ?,job = ?,mgr = ?,hiredate=?,sal=?,comm=? ,deptno = ? where empno = ?&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> baseUpdate(sql,emp.getEname(),emp.getJob(),emp.getMgr(),</span><br><span class="line">                emp.getHiredate(),emp.getSal(),emp.getComm(),emp.getDeptno(),emp.getEmpno());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="错误总结："><a href="#错误总结：" class="headerlink" title="错误总结："></a>错误总结：</h4><p><strong>java.lang.IllegalArgumentException</strong>：传入参数传错了</p>
<img src="/2021/06/07/JDBC/20210711103201.png" alt="image-20210711103159768" style="zoom:50%;">

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">field.set(obj,data);<span class="comment">//将数据放入对象中,不要传反了</span></span><br></pre></td></tr></table></figure>

<h2 id="连接池"><a href="#连接池" class="headerlink" title="连接池"></a>连接池</h2><ul>
<li><p>传统的连接：</p>
<p>​    首先调用Class.forName()方法加载数据库驱动，然后调用DriverManager.getConnection()方法建立连接.</p>
<ul>
<li><p>缺点：</p>
<p>​    Connection对象在每次执行DML和DQL的过程中都要创建一次,DML和DQL执行完毕后,connection对象都会被销毁. connection对象是可以反复使用的,没有必要每次都创建新的.该对象的创建和销毁都是比较消耗系统资源的,如何实现connection对象的反复使用呢?使用连接池技术实现.   </p>
</li>
</ul>
</li>
<li><p>使用连接池：</p>
<ul>
<li><p>预先准备一些链接对象,放入连接池中,当多个线程并发执行时,可以避免短时间内一次性大量创建链接对象,减少计算机单位时间内的运算压力,提高程序的响应速度</p>
</li>
<li><p>实现链接对象的反复使用,可以大大减少链接对象的创建次数,减少资源的消耗</p>
</li>
</ul>
</li>
</ul>
<p>MyConnectionPool.java</p>
<ul>
<li><p>创建一个连接对象</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//准备一个池子装连接对象</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> LinkedList&lt;Connection&gt; pool;</span><br></pre></td></tr></table></figure></li>
<li><p>静态代码块</p>
<ul>
<li>加载驱动</li>
<li>初始化pool</li>
<li>创建5个链接对象</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用静态代码块加载驱动，创建连接</span></span><br><span class="line"><span class="keyword">static</span>&#123;</span><br><span class="line">    <span class="comment">//加载驱动</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Class.forName(driver);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//初始化pool</span></span><br><span class="line">    pool = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">    <span class="comment">//创建五个链接对象</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; initSize; i++) &#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> initConnection();</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">null</span> != connection)&#123;</span><br><span class="line">            pool.add(connection);</span><br><span class="line">            System.out.println(<span class="string">&quot;初始化连接：&quot;</span>+connection.hashCode()+<span class="string">&quot;放入连接池&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>私有的初始化一个链接对象的方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 私有的初始化一个链接对象的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 初始化的连接对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Connection <span class="title function_">initConnection</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url,user,password);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>公有的向外界提供链接对象</p>
<ul>
<li>如果池子里有对象<ul>
<li>remove（）</li>
</ul>
</li>
<li>如果池子没了：创建新的对象</li>
<li>最后返回对象</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 公有的向外界提供链接对象的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (pool.size()&gt;<span class="number">0</span>)&#123;<span class="comment">//如果连接池里面有元素</span></span><br><span class="line">        connection = pool.remove();<span class="comment">//移出集合中的第一个元素</span></span><br><span class="line">        System.out.println(<span class="string">&quot;连接池中还有链接，获得链接：&quot;</span>+connection.hashCode());</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        connection = initConnection();</span><br><span class="line">        System.out.println(<span class="string">&quot;连接池为空，创建新链接：&quot;</span>+connection);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> connection;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>公有的向链接对象归还链接对象的方法</p>
<ul>
<li>若链接没有被关闭<ul>
<li>调整事务状态，设置为手动提交</li>
<li>容量小于最大容量<ul>
<li>池子最后加上connection</li>
</ul>
</li>
<li>容量达到最大容量<ul>
<li>关闭连接，打印池子满了，关闭连接</li>
</ul>
</li>
</ul>
</li>
<li>若已经被关闭，打印：无需关闭，不用归还</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 公有的向链接对象归还链接对象的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> connection</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">returnConnection</span><span class="params">(Connection connection)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">null</span> != connection)&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!connection.isClosed())</span><br><span class="line">                <span class="keyword">if</span> (pool.size()&lt; maxSize)&#123;</span><br><span class="line">                    connection.setAutoCommit(<span class="literal">true</span>);<span class="comment">//调整事务状态</span></span><br><span class="line">                    pool.addLast(connection);<span class="comment">//归还链接对象给池子</span></span><br><span class="line">                    System.out.println(<span class="string">&quot;连接池未满，归还链接对象：&quot;</span>+connection.hashCode());</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    connection.close();</span><br><span class="line">                    System.out.println(<span class="string">&quot;连接池已满，关闭连接池&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;连接已经关闭无需归还&quot;</span>);<span class="comment">//连接被关了下次是没法用的</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;传入的连接为null，无需归还&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><ol>
<li><p>创建多个连接：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Connection</span> <span class="variable">connection1</span> <span class="operator">=</span> MyConnectionPool.getConnection();</span><br><span class="line">...</span><br><span class="line"><span class="type">Connection</span> <span class="variable">connection11</span> <span class="operator">=</span> MyConnectionPool.getConnection();</span><br></pre></td></tr></table></figure>

<p>结果：前面小于initSize的部分个从连接池里取，后面超过的部分直接初始化。</p>
<img src="/2021/06/07/JDBC/20210711185528.png" style="zoom:50%;"></li>
<li><p>归还连接</p>
<ol>
<li><p>传入null值</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MyConnectionPool.returnConnection(<span class="literal">null</span>);</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<img src="/2021/06/07/JDBC/20210711190848.png" alt="image-20210711190848341" style="zoom:50%;"></li>
<li><p>传入已关闭的连接</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">connection1.close();</span><br><span class="line">MyConnectionPool.returnConnection(connection1);</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<img src="/2021/06/07/JDBC/20210711190953.png" alt="image-20210711190953769" style="zoom: 67%;"></li>
<li><p>传入超过maxSize的连接</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MyConnectionPool.returnConnection(connection11);<span class="comment">//maxSize=10---11&gt;10</span></span><br></pre></td></tr></table></figure>

<img src="/2021/06/07/JDBC/20210711191448.png" alt="image-20210711191448052" style="zoom:50%;"></li>
</ol>
</li>
</ol>
<h3 id="BaseDao改进"><a href="#BaseDao改进" class="headerlink" title="BaseDao改进"></a>BaseDao改进</h3><ul>
<li><p>原来的参数可以删除</p>
<img src="/2021/06/07/JDBC/20210711192110.png" alt="image-20210711192110111" style="zoom: 50%;"></li>
<li><p>加载驱动和连接部分改进</p>
<img src="/2021/06/07/JDBC/20210711192336.png" alt="image-20210711192335963" style="zoom: 67%;"></li>
<li><p>连接最后归还</p>
<img src="/2021/06/07/JDBC/20210711192550.png" alt="image-20210711192550600" style="zoom:50%;"></li>
</ul>
<h4 id="BaseDao-java"><a href="#BaseDao-java" class="headerlink" title="BaseDao.java"></a>BaseDao.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">BaseDao</span> &#123;</span><br><span class="line">    <span class="comment">//原来的参数全部删除</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 增删改方法的抽取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql 传入的sql语句对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args 传入的可变参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 修改成功返回大于0的数，返回失败返回0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">baseUpdate</span><span class="params">(String sql,Object ... args)</span>&#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> rows= <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = MyConnectionPool.getConnection();<span class="comment">//从连接池里获得连接</span></span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);<span class="comment">//这个时候就要传入语句对象</span></span><br><span class="line">            <span class="comment">//设置参数</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; args.length; i++) &#123;</span><br><span class="line">                preparedStatement.setObject(i+<span class="number">1</span>,args[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//执行CURD</span></span><br><span class="line">            rows = preparedStatement.executeUpdate();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;<span class="comment">//释放资源</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != preparedStatement) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    preparedStatement.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            MyConnectionPool.returnConnection(connection);<span class="comment">//归还到连接池里</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> rows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询操作的抽取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz 传入字节码以便通过反射获得对象的属性，</span></span><br><span class="line"><span class="comment">     *              因为不知道具体会传入什么对象里面是什么属性。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sql 传入的sql语句对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args 一些可变的参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回一个查询结果集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List <span class="title function_">baseQuery</span><span class="params">(Class clazz,String sql,Object ... args)</span>&#123;</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">PreparedStatement</span> <span class="variable">preparedStatement</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            connection = MyConnectionPool.getConnection();</span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            list= <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            <span class="comment">//设置参数</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; args.length; i++) &#123;</span><br><span class="line">                preparedStatement.setObject(i+<span class="number">1</span>,args[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//执行CURD</span></span><br><span class="line">            resultSet = preparedStatement.executeQuery();</span><br><span class="line">            <span class="comment">//通过字节码获取对象的属性</span></span><br><span class="line">            Field[] fields = clazz.getDeclaredFields();</span><br><span class="line">            <span class="comment">//获取访问封装类属性的权限--设置为true可以访问</span></span><br><span class="line">            <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">               field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">                <span class="comment">//通过反射创建对象</span></span><br><span class="line">                <span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> clazz.newInstance();<span class="comment">//默认通过反射调用对象的空参构造方法</span></span><br><span class="line">                <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">                    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> field.getName();<span class="comment">//先将属性名字获得</span></span><br><span class="line">                    <span class="type">Object</span> <span class="variable">data</span> <span class="operator">=</span> resultSet.getObject(name);<span class="comment">//通过属性名从结果集中获得</span></span><br><span class="line">                    field.set(obj,data);<span class="comment">//将数据放入对象中</span></span><br><span class="line">                &#125;</span><br><span class="line">                list.add(obj);<span class="comment">//将对象加入到链表集合里</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != resultSet) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    resultSet.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != preparedStatement) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    preparedStatement.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            MyConnectionPool.returnConnection(connection);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="配置文件优化连接池"><a href="#配置文件优化连接池" class="headerlink" title="配置文件优化连接池"></a>配置文件优化连接池</h2><img src="/2021/06/07/JDBC/20210711193622.png" alt="image-20210711193622546" style="zoom: 50%;">

<p>注意格式：空格不能随便加</p>
<img src="/2021/06/07/JDBC/20210711193523.png" alt="image-20210711193523624" style="zoom:50%;">

<h3 id="PropertiesUtil工具类"><a href="#PropertiesUtil工具类" class="headerlink" title="PropertiesUtil工具类"></a>PropertiesUtil工具类</h3><ul>
<li>创建工具类<ul>
<li>定义构造方法<ul>
<li>传进配置文件的路径</li>
<li>通过字节码获取文件路径</li>
<li>加载IO流</li>
</ul>
</li>
<li>定义一个获得参数的方法</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PropertiesUtil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Properties properties;<span class="comment">//定义配置文件参数</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义配置文件构造器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> path 传入配置文件路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">PropertiesUtil</span><span class="params">(String path)</span>&#123;</span><br><span class="line">        properties = <span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">        <span class="comment">//通过字节码获取IO流</span></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">resourceAsStream</span> <span class="operator">=</span> <span class="built_in">this</span>.getClass().getResourceAsStream(path);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//加载IO流</span></span><br><span class="line">            properties.load(resourceAsStream);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回配置文件参数值的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 参数名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 参数的字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getProperties</span><span class="params">(String key)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> properties.getProperty(key);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="连接池优化"><a href="#连接池优化" class="headerlink" title="连接池优化"></a>连接池优化</h3><ul>
<li><p>删除参数值 </p>
<img src="/2021/06/07/JDBC/20210712101026.png" alt="image-20210712101026751" style="zoom:50%;"></li>
<li><p>在静态代码块里配置参数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建配置文件对象</span></span><br><span class="line"><span class="type">PropertiesUtil</span> <span class="variable">propertiesUtil</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PropertiesUtil</span>(<span class="string">&quot;/jdbc.properties&quot;</span>);</span><br><span class="line">driver = propertiesUtil.getProperties(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">url = propertiesUtil.getProperties(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">user = propertiesUtil.getProperties(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">password = propertiesUtil.getProperties(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">initSize = Integer.parseInt(propertiesUtil.getProperties(<span class="string">&quot;initSize&quot;</span>));</span><br><span class="line">maxSize = Integer.parseInt(propertiesUtil.getProperties(<span class="string">&quot;maxSize&quot;</span>));</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="错误总结"><a href="#错误总结" class="headerlink" title="错误总结"></a>错误总结</h3><p>连接池的定义好像出现了某种问题</p>
<p>Exception in thread “main” java.lang.NoClassDefFoundError: Could not initialize class com.chs.dao.MyConnectionPool</p>
<p>发现是构造器中没有用到本身的参数，而是重新定义了一个参数：</p>
<img src="/2021/06/07/JDBC/20210712110521.png" alt="image-20210712110521532" style="zoom: 67%;">



<h1 id="8-log4j日志"><a href="#8-log4j日志" class="headerlink" title="8. log4j日志"></a>8. log4j日志</h1><ol>
<li><p>什么是日志log</p>
<p>​        异常信息  登录成功失败的信息  其他重要操作的信息，日志可以记录程序的运行状态,运行信息,用户的一些常用操作.日志可以帮助我们分析程序的运行状态,帮我们分析用户的操作习惯,进而对程序进行改</p>
</li>
<li><p>如何记录日志</p>
<ul>
<li><p>方式1：System.out.println(…..)    e.printStackTrace();</p>
<p>缺点：不是保存到文件，不能长久存储</p>
</li>
<li><p>方式2：IO流 将System.out.println(…..)  e.printStackTrace();写入文件</p>
<p>缺点：操作繁琐,IO流操作容易阻塞线程,日志没有等级,日志的格式不能很好的定制,要想实行编程复杂</p>
</li>
<li><p>方式3：使用现成的日志框架，比如log4j</p>
<p>优点：1长久保存 2有等级3格式可以很好的定制 4代码编写简单</p>
</li>
</ul>
</li>
<li><p>log4j日志的级别</p>
<pre><code>FATAL：  指出现非常严重的错误事件，这些错误可能导致应用程序异常中止
ERROR： 指虽有错误，但仍允许应用程序继续运行
WARN：  指运行环境潜藏着危害
INFO：    指报告信息，这些信息在粗粒度级别上突出显示应用程序的进程
DEBUG： 指细粒度信息事件，对于应用程序的调试是最有用的
</code></pre>
</li>
<li><p>使用log4j记录日志</p>
<ul>
<li><p>加入jar包   <strong>log4j-1.2.8.jar</strong></p>
<img src="/2021/06/07/JDBC/20210712120555.png" alt="image-20210712120555879" style="zoom:50%;"></li>
<li><p>加入属性文件 src 下 <strong>log4j.properties</strong></p>
<img src="/2021/06/07/JDBC/20210712120643.png" alt="image-20210712120643129" style="zoom:50%;">

<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">log4j.rootLogger</span>=<span class="string">error,logfile</span></span><br><span class="line"><span class="comment">## 方式一：打印到控制台</span></span><br><span class="line"><span class="attr">log4j.appender.stdout</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.Target</span>=<span class="string">System.err</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.layout</span>=<span class="string">org.apache.log4j.SimpleLayout</span></span><br><span class="line"><span class="comment">## 方式二：打印到logfile文件</span></span><br><span class="line"><span class="attr">log4j.appender.logfile</span>=<span class="string">org.apache.log4j.FileAppender</span></span><br><span class="line"><span class="attr">log4j.appender.logfile.File</span>=<span class="string">d:/msb.log</span></span><br><span class="line"><span class="attr">log4j.appender.logfile.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.logfile.layout.ConversionPattern</span>=<span class="string">%d&#123;yyyy-MM-dd   HH:mm:ss&#125; %l %F %p %m%n</span></span><br></pre></td></tr></table></figure>

<img src="/2021/06/07/JDBC/20210712124734.png" alt="image-20210712124734548" style="zoom: 67%;">

<img src="/2021/06/07/JDBC/20210712125136.png" alt="image-20210712125136115" style="zoom:50%;"></li>
<li><p>通过属性文件理解log4j的主要API</p>
<p>Appender 日志目的地 :ConsoleAppender  FileAppender</p>
<p>Layout 日志格式化器 ：SimpleLayout  PatternLayout</p>
</li>
</ul>
</li>
</ol>
<h3 id="以连接池为例："><a href="#以连接池为例：" class="headerlink" title="以连接池为例："></a>以连接池为例：</h3><ul>
<li><p>添加日志对象</p>
<img src="/2021/06/07/JDBC/20210712122737.png" alt="image-20210712122736926" style="zoom:50%;"></li>
<li><p>初始化日志</p>
<img src="/2021/06/07/JDBC/20210712123200.png" alt="image-20210712123159994" style="zoom:50%;"></li>
<li><p>将sout语句和错误打印改为日志输出：</p>
<ul>
<li>错误大多使用fatal级别</li>
</ul>
<img src="/2021/06/07/JDBC/20210712124134.png" alt="image-20210712124134859" style="zoom:50%;">

<ul>
<li>sout提示语句一般使用info级别</li>
</ul>
<img src="/2021/06/07/JDBC/20210712124306.png" alt="image-20210712124306011" style="zoom:50%;">

<p>运行结果：</p>
<img src="/2021/06/07/JDBC/20210712124525.png" alt="image-20210712124525739" style="zoom:67%;"></li>
</ul>
<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%p：输出日志信息的优先级，即DEBUG，INFO，WARN，ERROR，FATAL。</span><br><span class="line">%d：输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，如：%d&#123;yyyy/MM/dd HH:mm:ss,SSS&#125;。</span><br><span class="line">%r：输出自应用程序启动到输出该log信息耗费的毫秒数。</span><br><span class="line">%t：输出产生该日志事件的线程名。</span><br><span class="line">%l：输出日志事件的发生位置，相当于%c.%M(%F:%L)的组合，包括类全名、方法、文件名以及在代码中的行数。例如</span><br><span class="line">test.TestLog4j.main(TestLog4j.java:10)。</span><br><span class="line">%c：输出日志信息所属的类目，通常就是所在类的全名。</span><br><span class="line">%M：输出产生日志信息的方法名。</span><br><span class="line">%F：输出日志消息产生时所在的文件名称。</span><br><span class="line">%L:：输出代码中的行号。</span><br><span class="line">%m:：输出代码中指定的具体日志信息。</span><br><span class="line">%n：输出一个回车换行符，Windows平台为&quot;rn&quot;，Unix平台为&quot;n&quot;。</span><br><span class="line">%x：输出和当前线程相关联的NDC(嵌套诊断环境)，尤其用到像java servlets这样的多客户多线程的应用中。</span><br><span class="line">%%：输出一个&quot;%&quot;字符。</span><br></pre></td></tr></table></figure>



<h1 id="9-三大范式"><a href="#9-三大范式" class="headerlink" title="9. 三大范式"></a>9. 三大范式</h1><h2 id="第一范式（1NF）"><a href="#第一范式（1NF）" class="headerlink" title="第一范式（1NF）"></a><strong>第一范式（1NF）</strong></h2><p><strong>要求数据库表的每一列都是不可分割的原子数据项。</strong></p>
<p>举例说明：</p>
<img src="/2021/06/07/JDBC/20210712153337.png" alt="img" style="zoom:67%;">

<p>在上面的表中，“家庭信息”和“学校信息”列均不满足原子性的要求，故不满足第一范式，调整如下：</p>
<img src="/2021/06/07/JDBC/20210712153335.png" alt="img" style="zoom:67%;">

<p>可见，调整后的每一列都是不可再分的，因此满足第一范式（1NF）；</p>
<h2 id="第二范式（2NF）"><a href="#第二范式（2NF）" class="headerlink" title="第二范式（2NF）"></a><strong>第二范式（2NF）</strong></h2><p><strong>在1NF的基础上，非码属性必须完全依赖于候选码（在1NF基础上消除非主属性对主码的部分函数依赖）</strong></p>
<p><strong>第二范式需要确保数据库表中的每一列都和主键相关，而不能只与主键的某一部分相关（主要针对联合主键而言）。</strong></p>
<p>举例说明：</p>
<img src="/2021/06/07/JDBC/20210712153333.png" alt="img" style="zoom:67%;">

<p>在上图所示的情况中，同一个订单中可能包含不同的产品，因此主键必须是“订单号”和“产品号”联合组成，</p>
<p>但可以发现，产品数量、产品折扣、产品价格与“订单号”和“产品号”都相关，但是订单金额和订单时间仅与“订单号”相关，与“产品号”无关，</p>
<p>这样就不满足第二范式的要求，调整如下，需分成两个表：</p>
<p> <img src="/2021/06/07/JDBC/20210712153328.png" alt="img" style="zoom:67%;"> <img src="/2021/06/07/JDBC/20210712153331.png" alt="img" style="zoom:67%;"></p>
<h2 id="第三范式（3NF）"><a href="#第三范式（3NF）" class="headerlink" title="第三范式（3NF）"></a><strong>第三范式（3NF）</strong></h2><p><strong>在2NF基础上，任何非主<a href="https://baike.baidu.com/item/%E5%B1%9E%E6%80%A7">属性</a>不依赖于其它非主属性（在2NF基础上消除传递依赖）</strong></p>
<p><strong>第三范式需要确保数据表中的每一列数据都和主键直接相关，而不能间接相关。</strong></p>
<p>举例说明：</p>
<img src="/2021/06/07/JDBC/20210712153325.png" alt="img" style="zoom:67%;">

<p>上表中，所有属性都完全依赖于学号，所以满足第二范式，但是“班主任性别”和“班主任年龄”直接依赖的是“班主任姓名”，</p>
<p>而不是主键“学号”，所以需做如下调整：</p>
<p><img src="/2021/06/07/JDBC/20210712153312.png" alt="img" style="zoom:67%;"> <img src="/2021/06/07/JDBC/20210712153317.png" alt="img" style="zoom:67%;"></p>
<p>这样以来，就满足了第三范式的要求。</p>
<p>ps:如果把上表中的班主任姓名改成班主任教工号可能更确切，更符合实际情况，不过只要能理解就行。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul>
<li>优点：结构合理、冗余较小、尽量避免插入删除修改异常</li>
</ul>
<ul>
<li><p>缺点：性能降低、多表查询比单表查询速度慢。</p>
</li>
<li><p>范式是指导数据设计的规范化理论，可以保证数据库设计质量</p>
<ul>
<li>第一范式：字段不能再分</li>
<li>第二范式：不存在局部依赖</li>
<li>第三范式：不含传递依赖（间接依赖）</li>
</ul>
</li>
<li><p>在实际设计中，要整体遵循范式理论，但某些特定的情况下不能死板遵循，这样会降低数据库的效率，一般单表查询效率会比多表查询高，特定表的的设计可以违反第三范式，增加冗余提高性能</p>
<ul>
<li>例如：经常购物车条目的中除了条目编号，商品编号，商品数量外，可以增加经常使用的商品名称，商品价格等</li>
<li><img src="/2021/06/07/JDBC/20210712154207.png" alt="image-20210712154207006" style="zoom:50%;"></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>JDBC</tag>
        <tag>Java</tag>
        <tag>DataBase</tag>
      </tags>
  </entry>
  <entry>
    <title>JQuery</title>
    <url>/2021/06/18/JQuery/</url>
    <content><![CDATA[<h1 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h1><h4 id="为什么使用jQuery？"><a href="#为什么使用jQuery？" class="headerlink" title="为什么使用jQuery？"></a>为什么使用jQuery？</h4><p>使用原生JavaScript编码存在问题</p>
<p>1选择器功能弱  </p>
<p>2 DOM操作繁琐之极</p>
<p>3浏览器兼容性不好</p>
<p>4动画功能弱</p>
<span id="more"></span>

<h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>1强大的选择器</p>
<p>2出色的DOM封装</p>
<p>3出色的浏览器兼容性</p>
<p>4强大的动画功能</p>
<p>5体积小，压缩后只有100KB左右</p>
<p>6可靠的事件处理机制</p>
<p>7使用隐式迭代简化编程</p>
<p>8丰富的插件支持</p>
<h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>目前最流行的JavaScript函数库之一，对JavaScript进行了封装。并不是一门新语言。将常用的、复杂的操作进行函数化封装，直接调用，大大降低了使用JavaScript的难度，改变了使用JavaScript的习惯。jQuery能做的JavaScript也能做，但使用jQuery能大幅提高开发效率,由美国人John Resig在2006年推出，目前最新版本是v3.5.1。宗旨：Write less，do more（写更少代码，做更多事情）。官方网址<a href="http://jquery.com/">http://jquery.com/</a></p>
<h3 id><a href="#" class="headerlink" title></a></h3><h3 id="-1"><a href="#-1" class="headerlink" title="==$()=="></a>==$()==</h3><p>作用一：页面加载函数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*jQuery(document).ready(function ()&#123;</span></span><br><span class="line"><span class="comment">                                var domS1=document.getElementById(&quot;s1&quot;);</span></span><br><span class="line"><span class="comment">                                console.log(domS1.innerText);</span></span><br><span class="line"><span class="comment">                        &#125;)*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// jQuery  可以简写 $</span></span><br><span class="line"><span class="comment">/*$(document).ready(function ()&#123;</span></span><br><span class="line"><span class="comment">                                var domS1=document.getElementById(&quot;s1&quot;);</span></span><br><span class="line"><span class="comment">                                console.log(domS1.innerText);</span></span><br><span class="line"><span class="comment">                        &#125;)*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> domS1=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;s1&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(domS1.<span class="property">innerText</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;第二个页面加载函数&quot;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;第三个页面加载函数&quot;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>作用二：选择器标志</p>
<p><strong>$(selector)</strong></p>
<h1 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h1><h2 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//标签选择器 $(&quot;a&quot;)   </span></span><br><span class="line">                  $(<span class="string">&quot;h3&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line">                  $(<span class="string">&quot;p&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line"><span class="comment">// ID选择器 $(&quot;#id&quot;)     $(&quot;p#id&quot;) </span></span><br><span class="line">                  $(<span class="string">&quot;#h31&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line">                  $(<span class="string">&quot;h3#h31&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line"><span class="comment">// 类选择器 $(&quot;.class&quot;)    $(&quot;h2.class&quot;) </span></span><br><span class="line">                  $(<span class="string">&quot;.red1&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line"><span class="comment">// 通配选择器 $(&quot;*&quot;) </span></span><br><span class="line">                  $(<span class="string">&quot;*&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line"><span class="comment">// 并集选择器$(&quot;elem1,elem2,elem3&quot;) </span></span><br><span class="line">                  $(<span class="string">&quot;#h31,span,div&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line"><span class="comment">// 后代选择器$(ul li)   </span></span><br><span class="line">                  $(<span class="string">&quot;p span&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>);   </span><br><span class="line"><span class="comment">//  父子选择器 $(ul&gt;li)   </span></span><br><span class="line">                  $(<span class="string">&quot;p&gt;span&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line"><span class="comment">//  后面第一个兄弟元素 prev + next </span></span><br><span class="line">                  $(<span class="string">&quot;h3+p&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line"><span class="comment">//  后面所有的兄弟元素 prev ~ next </span></span><br><span class="line">                $(<span class="string">&quot;h3~p&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br></pre></td></tr></table></figure>

<h2 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//[attribute] </span></span><br><span class="line">                    $(<span class="string">&quot;a&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line">                    $(<span class="string">&quot;a[href]&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line"><span class="comment">//[attribute1][attribute2] </span></span><br><span class="line">                    $(<span class="string">&quot;a[href][title]&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line"><span class="comment">//[attribute=value]   </span></span><br><span class="line">                    $(<span class="string">&quot;a[href=&#x27;film-2.html&#x27;]&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line"><span class="comment">//[attribute!=value]   </span></span><br><span class="line">                    $(<span class="string">&quot;a[href][href!=&#x27;film-2.html&#x27;]&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line"><span class="comment">//[attribute^=value]   </span></span><br><span class="line">                    $(<span class="string">&quot;a[href^=&#x27;http&#x27;]&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line"><span class="comment">//[attribute$=value   </span></span><br><span class="line">                    $(<span class="string">&quot;a[href$=&#x27;htm&#x27;]&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line"><span class="comment">//[attribute*=value]   </span></span><br><span class="line">               		 $(<span class="string">&quot;a[href*=&#x27;mashibing&#x27;]&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>);</span><br></pre></td></tr></table></figure>



<h2 id="位置选择器"><a href="#位置选择器" class="headerlink" title="位置选择器"></a>位置选择器</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">  <span class="comment">//位置针对整个页面 </span></span><br><span class="line">                  <span class="comment">//:first     :last   :odd   :even   </span></span><br><span class="line">                  $(<span class="string">&quot;p:first&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line">                  $(<span class="string">&quot;p:last&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line">                  $(<span class="string">&quot;p:odd&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>);<span class="comment">//索引从0开始 奇数的索引 1 3 5 第偶数的元素</span></span><br><span class="line">                  $(<span class="string">&quot;p:even&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); <span class="comment">//</span></span><br><span class="line">                  <span class="comment">//:eq(n)     :gt(n)   :lt(n) </span></span><br><span class="line">                  $(<span class="string">&quot;p:eq(4)&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>);   <span class="comment">//equals </span></span><br><span class="line">                  $(<span class="string">&quot;p:lt(4)&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>);<span class="comment">//less   than  </span></span><br><span class="line">                  $(<span class="string">&quot;p:gt(4)&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>);<span class="comment">//greater   than </span></span><br><span class="line"><span class="comment">//位置针对上级标签 </span></span><br><span class="line">                  <span class="comment">//:first-child    :last-child   :only-child </span></span><br><span class="line">                  $(<span class="string">&quot;p:first-child&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line">                  $(<span class="string">&quot;p:last-child&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line">                  $(<span class="string">&quot;p:only-child&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line">                  <span class="comment">//:nth-child(n)   :nth-child(odd|even) :nth-child(xn+y)</span></span><br><span class="line">                   <span class="comment">// 索引从0开始 只有此处从1开始</span></span><br><span class="line">                  $(<span class="string">&quot;p:nth-child(2)&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>);</span><br><span class="line">                  $(<span class="string">&quot;p:nth-child(odd)&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line">                  $(<span class="string">&quot;p:nth-child(even)&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>); </span><br><span class="line">                  $(<span class="string">&quot;p:nth-child(3n+1)&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;myClass&quot;</span>);<span class="comment">//n=0,1,2,3 </span></span><br></pre></td></tr></table></figure>



<h2 id="表单选择器"><a href="#表单选择器" class="headerlink" title="表单选择器"></a>表单选择器</h2><ul>
<li><p>关于表单项的选择器</p>
<p>:text   :password  :radio  :checkbox  :hidden  :file  :submit</p>
<p>:input  匹配所有 input, textarea, select 和 button 元素</p>
</li>
<li><p>关于表单项状态的选择器</p>
<p>:selected  :checked  :enabled  :disabled  :hidden :visible</p>
</li>
<li><p>注意$(“input”)和$(“:input”)的区别</p>
<p>$(“input”)：标签选择器，只匹配input标签,</p>
<p>$(“:input”)： 匹配所有 input, textarea, select 和 button 元素</p>
</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//:text   :password    :radio  :checkbox  :hidden    :file  :submit </span></span><br><span class="line">                    <span class="keyword">var</span> arr =$(<span class="string">&quot;input&quot;</span>); <span class="comment">// 标签名选择器</span></span><br><span class="line">                  </span><br><span class="line">                    <span class="keyword">var</span> arr = $(<span class="string">&quot;input[type=hidden]&quot;</span>); </span><br><span class="line">                    <span class="keyword">var</span> arr = $(<span class="string">&quot;input:hidden&quot;</span>);              </span><br><span class="line"><span class="comment">//:input  匹配所有 input, textarea, select 和 button 元素 </span></span><br><span class="line">                    <span class="keyword">var</span> arr =   $(<span class="string">&quot;input,select,textarea,button&quot;</span>);   </span><br><span class="line">                  <span class="keyword">var</span> arr = $(<span class="string">&quot;:input&quot;</span>); </span><br><span class="line"><span class="comment">//:selected    :checked  :enabled  :disabled   </span></span><br><span class="line">                    <span class="keyword">var</span> arr = $(<span class="string">&quot;:disabled&quot;</span>); </span><br><span class="line">                    <span class="keyword">var</span> arr = $(<span class="string">&quot;:enabled&quot;</span>); </span><br><span class="line">                    <span class="keyword">var</span> arr = $(<span class="string">&quot;:input:not(:disabled)&quot;</span>); </span><br><span class="line">                    <span class="keyword">var</span> arr = $(<span class="string">&quot;:checked&quot;</span>); </span><br><span class="line">                    <span class="keyword">var</span> arr = $(<span class="string">&quot;:selected&quot;</span>); </span><br><span class="line">                    <span class="comment">//:hidden :visible       </span></span><br><span class="line">                    <span class="keyword">var</span> arr = $(<span class="string">&quot;input:hidden&quot;</span>) </span><br><span class="line">                    <span class="keyword">var</span>   arr = $(<span class="string">&quot;:input:visible&quot;</span>)</span><br><span class="line">                  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                      <span class="variable language_">console</span>.<span class="title function_">info</span>(arr[i]);</span><br><span class="line">                  &#125;</span><br></pre></td></tr></table></figure>



<h1 id="完成DOM编程"><a href="#完成DOM编程" class="headerlink" title="完成DOM编程"></a>完成DOM编程</h1><h2 id="操作属性"><a href="#操作属性" class="headerlink" title="操作属性"></a>操作属性</h2><p>原生js 中的通过元素.属性名或者元素.setAttribute()方式操作元素属性,jQuery给我们封装了attr() 和removeAttr(),更加便捷的操作属性</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">         	 *attr() </span></span><br><span class="line"><span class="comment">         	 * </span></span><br><span class="line"><span class="comment">         	 * */</span></span><br><span class="line"><span class="comment">//获得属性</span></span><br><span class="line">             <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span><br><span class="line">                  <span class="variable language_">console</span>.<span class="title function_">log</span>($(<span class="string">&quot;#f1&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;color&quot;</span>))</span><br><span class="line">                  <span class="variable language_">console</span>.<span class="title function_">log</span>($(<span class="string">&quot;#f1&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;id&quot;</span>))</span><br><span class="line">                  <span class="variable language_">console</span>.<span class="title function_">log</span>($(<span class="string">&quot;#f1&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;size&quot;</span>))</span><br><span class="line">             &#125;</span><br><span class="line"><span class="comment">//修改属性</span></span><br><span class="line">             <span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params"></span>)&#123;</span><br><span class="line">                 $(<span class="string">&quot;#f1&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;color&quot;</span>,<span class="string">&quot;green&quot;</span>)</span><br><span class="line">                 $(<span class="string">&quot;#f1&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;size&quot;</span>,<span class="string">&quot;5&quot;</span>)</span><br><span class="line">             &#125;</span><br><span class="line"><span class="comment">//删除属性</span></span><br><span class="line">             <span class="keyword">function</span> <span class="title function_">fun3</span>(<span class="params"></span>)&#123;</span><br><span class="line">                 $(<span class="string">&quot;#f1&quot;</span>).<span class="title function_">removeAttr</span>(<span class="string">&quot;color&quot;</span>) </span><br><span class="line">             &#125;</span><br><span class="line"><span class="comment">//添加属性</span></span><br><span class="line">             <span class="keyword">function</span> <span class="title function_">fun4</span>(<span class="params"></span>)&#123;</span><br><span class="line">                $(<span class="string">&quot;#f1&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;class&quot;</span>,<span class="string">&quot;a&quot;</span>)</span><br><span class="line">             &#125;</span><br></pre></td></tr></table></figure>



<h2 id="操作样式"><a href="#操作样式" class="headerlink" title="操作样式"></a>操作样式</h2><p>原生js 中的通过元素.style.样式名=’样式值’的方式操作元素样式,jQuery给我们封装了css()方法,便于我们操作样式,多数情况样式选择器使用类选择器,所以jQuery针对于这一情况,给我们封装了==addClass==  ==removeClass== ==toggleClass== 三个方法</p>
<p>css样式</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">          <span class="selector-class">.a</span>&#123;</span></span><br><span class="line"><span class="language-css">              <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">              <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">              <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">          &#125;  </span></span><br><span class="line"><span class="language-css">          <span class="selector-class">.b</span>&#123;</span></span><br><span class="line"><span class="language-css">              <span class="attribute">border</span>: <span class="number">10px</span> solid green;</span></span><br><span class="line"><span class="language-css">              <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">          &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>jQuery封装的==css()==方法</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//修改样式</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//获得d1的css样式</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>($(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;width&quot;</span>));</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>($(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;height&quot;</span>));</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>($(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;background-color&quot;</span>));</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//修改d1的css样式</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;width&quot;</span>,<span class="string">&quot;200px&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;height&quot;</span>,<span class="string">&quot;300px&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;yellow&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">              * CSS 样式在实际的研发中,往往通过类选择器作用到元素上</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">              * jQuery就专门的封装了操作class属性值的方法</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">              * */</span></span></span><br><span class="line"><span class="language-javascript">	<span class="comment">//添加class值</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d2&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;b&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//删除class值</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun3</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d2&quot;</span>).<span class="title function_">removeClass</span>(<span class="string">&quot;b&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//切换class值</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun4</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d2&quot;</span>).<span class="title function_">toggleClass</span>(<span class="string">&quot;b&quot;</span>)<span class="comment">// 原来有b 则删除,如果没有,则增加b</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="操作文本"><a href="#操作文本" class="headerlink" title="操作文本"></a>操作文本</h2><p>原生js 中的通过元素.innerText和innerHTML和.value属性操作标签内部文本和内容,jQuery给我们封装了==text(),html()和val()==三个方法</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//获得标签内容</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                          	 * innerText &gt;&gt;&gt;&gt; text();</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                          	 * innerHTML &gt;&gt;&gt;&gt; html();</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                          	 * value     &gt;&gt;&gt;&gt; val();</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                          	 * </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                          	 * */</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>($(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">text</span>()) </span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>($(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">html</span>())</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>($(<span class="string">&quot;#i1&quot;</span>).<span class="title function_">val</span>())</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//修改标签内容</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//$(&quot;#d1&quot;).text(&quot;&lt;h1&gt;牛气冲天&lt;/h1&gt;&quot;);</span></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&lt;h1&gt;牛气冲天&lt;/h1&gt;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#i1&quot;</span>).<span class="title function_">val</span>(<span class="string">&quot;你好&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//删除标签中的内容</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun3</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//$(&quot;#d1&quot;).html(&quot;&quot;);</span></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">empty</span>();<span class="comment">// 清空内容</span></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#i1&quot;</span>).<span class="title function_">val</span>(<span class="string">&quot;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="增删元素"><a href="#增删元素" class="headerlink" title="增删元素"></a>增删元素</h2><p>原生js 中的对于元素的创建,增加和删除代码比较繁琐,而jQuery从元素的创建到元素的增加和删除都给我们提供了更加便捷的方法</p>
<ul>
<li>创建元素<ul>
<li>$(‘<span>text<span>‘)</span></span></li>
</ul>
</li>
<li>追加元素<ul>
<li>append() appendTo() 添加内部标签</li>
<li>before() insertBefore() 向前增加标签</li>
<li>after() insertAfter()  向后增加标签</li>
</ul>
</li>
<li>删除元素<ul>
<li>empty()  清空字标签</li>
<li>remove() 移除当前标签</li>
</ul>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//append() 调用的对象是添加的区域</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 创建元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> span1=$(<span class="string">&quot;&lt;span&gt;&lt;/span&gt;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 设置样式</span></span></span><br><span class="line"><span class="language-javascript">        span1.<span class="title function_">css</span>(<span class="string">&quot;color&quot;</span>,<span class="string">&quot;green&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        span1.<span class="title function_">css</span>(<span class="string">&quot;border&quot;</span>,<span class="string">&quot;1px solid blue&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        span1.<span class="title function_">css</span>(<span class="string">&quot;background-color&quot;</span>,<span class="string">&quot;lightgray&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 设置文字</span></span></span><br><span class="line"><span class="language-javascript">        span1.<span class="title function_">text</span>(<span class="string">&quot;今天天气很好&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&#x27;#d1&#x27;</span>).<span class="title function_">append</span>(span1)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//appendTo() 调用的对象是要添加的内容</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> h =$(<span class="string">&quot;&lt;h3&gt;测试文字&lt;/h3&gt;&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;color&quot;</span>,<span class="string">&quot;red&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;border&quot;</span>,<span class="string">&quot;1px solid green&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        h.<span class="title function_">appendTo</span>($(<span class="string">&#x27;#d1&#x27;</span>))</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//before()</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun3</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> span1=$(<span class="string">&#x27;&lt;span style=&quot;color: red; border: 1px solid orangered;&quot;&gt;测试文字&lt;/span&gt;&#x27;</span>) </span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">before</span>(span1);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun4</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> span1=$(<span class="string">&#x27;&lt;span style=&quot;color: red; border: 1px solid orangered;&quot;&gt;测试文字&lt;/span&gt;&#x27;</span>) </span></span><br><span class="line"><span class="language-javascript">        span1.<span class="title function_">insertBefore</span>($(<span class="string">&quot;#d1&quot;</span>));</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//after()</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun5</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> span1=$(<span class="string">&#x27;&lt;span style=&quot;color: red; border: 1px solid orangered;&quot;&gt;测试文字&lt;/span&gt;&#x27;</span>) </span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">after</span>(span1);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun6</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> span1=$(<span class="string">&#x27;&lt;span style=&quot;color: red; border: 1px solid orangered;&quot;&gt;测试文字&lt;/span&gt;&#x27;</span>) </span></span><br><span class="line"><span class="language-javascript">        span1.<span class="title function_">insertAfter</span>($(<span class="string">&quot;#d1&quot;</span>));</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//empty()</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun7</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">empty</span>()</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//remove()</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun8</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">remove</span>(); <span class="comment">// 移除当前元素本身</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="操作事件"><a href="#操作事件" class="headerlink" title="操作事件"></a>操作事件</h2><p>无非就是绑定事件,触发事件,解绑定事件.原生js中的通过DOM编程和在标签上的事件属性绑定事件,</p>
<p>jQuery中,我们可以使用</p>
<p>事件的绑定:</p>
<ul>
<li>==bind()==  </li>
<li>==live()==(1.8及之前可用) </li>
<li>==on()==(1.9之后推荐使用),==one()==</li>
</ul>
<p>事件解绑定:==unbind()==</p>
<p>事件的触发:行为触发, jQuery方法触发</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript"><span class="comment">//给元素绑定事件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//原生JS</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*var div1=document.getElementById(&quot;d1&quot;)</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                div1.onmouseover=function ()&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                	alert(&quot;悬停&quot;)</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                &#125;*/</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/* bind 方法绑定事件</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                * 在jQuery中,事件的名称= 原始名称去掉 on</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                * onclick       click</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                * onmouseover   mouseover</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                * </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                * */</span></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">bind</span>(<span class="string">&#x27;mouseover&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&#x27;#d1&#x27;</span>).<span class="title function_">css</span>(<span class="string">&quot;background-color&quot;</span>,<span class="string">&#x27;yellow&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*事件名作为方法*/</span></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">mouseleave</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            $(<span class="string">&#x27;#d1&#x27;</span>).<span class="title function_">css</span>(<span class="string">&quot;background-color&quot;</span>,<span class="string">&#x27;lightgreen&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                 * one 绑定事件一次 </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                 * </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                 * */</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*$(&quot;#d1&quot;).one(&#x27;mouseover&#x27;,function()&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                	$(&#x27;#d1&#x27;).css(&quot;background-color&quot;,&#x27;yellow&#x27;)</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                &#125;);</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                 $(&quot;#d1&quot;).one(&#x27;mouseleave&#x27;,function()&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                	$(&#x27;#d1&#x27;).css(&quot;background-color&quot;,&#x27;lightgreen&#x27;)</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                &#125;);*/</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript"><span class="comment">//解除绑定</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//$(&quot;#d1&quot;).unbind();  解除绑定的所有事件</span></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">unbind</span>(<span class="string">&quot;mouseover&quot;</span>) <span class="comment">// 接触绑定的指定事件</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript"><span class="comment">//触发事件</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun3</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 相当于发生了获得焦点事件</span></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#i1&quot;</span>).<span class="title function_">focus</span>()</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun4</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;获得焦点了&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="jQuery对象和DOM对象的转换"><a href="#jQuery对象和DOM对象的转换" class="headerlink" title="jQuery对象和DOM对象的转换"></a>jQuery对象和DOM对象的转换</h2><p>使用原生JS方式获得的页面结点对象我们可以简称为DOM对象,使用jQuery核心函数获得的对象我们可以简称为jQuery对象,这两种方式获得的对象即是是页面上同一个元素,那么也是不一样的,二者之间的API是不通用的.而在某些情况下,我们往往无法选择接收的对象,只能被动使用,那么这个时候我们可以让二者实现转换,以达到可以调用API实现功能的目的</p>
<p>使用原生JSDOM对象转换成jQuery对象方式是==$(dom对象)==</p>
<p>jQuery对象转换成DOM对象的方式是==jQuery对象[0]/.get(0)==， </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    $(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1 原生JS获取页面元素  原生DOM对象</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> div1=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;d1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2 jQuery方式获取页面元素 jQuery对象</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> div2=$(<span class="string">&quot;#d1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">				 * DOM对象和jQuery对象之间的方法和属性是不通用的</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">				 *  </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">				 * */</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(div1.<span class="property">innerText</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(div2.<span class="title function_">text</span>());</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(div1)</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(div2)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// DOM对象如何调用jQuery函数  DOM对象转换为jQuery    $(DOM)</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>($(div1).<span class="title function_">text</span>());</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// jQuery对象如何调用DOM对象的属性和方法   jQuery转换为DOM对象  get(0)  [0]</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(div2.<span class="title function_">get</span>(<span class="number">0</span>).<span class="property">innerText</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(div2[<span class="number">0</span>].<span class="property">innerText</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="迭代遍历方式"><a href="#迭代遍历方式" class="headerlink" title="迭代遍历方式"></a>迭代遍历方式</h2><p>jQuery给我们封装了一个快捷遍历元素的方法,接下来我们就使用一下jQuery中新的遍历方式</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    $(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         		 * jQuery对象名往往以$开始, 以示和DOM对象区分</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         		 * </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         		 * </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         		 * */</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> $lis =$(<span class="string">&quot;li&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>($lis)</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">0</span>;i&lt;$lis.<span class="property">length</span>;i++)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>($lis.<span class="title function_">get</span>(i))</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         		 * jQuery提供了一个each方法帮助我们遍历元素</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         		 * */</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $lis.<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">i,e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         			 * e是一个原生DOM对象,所以用的是text()方法来提取文本</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         			 * */</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(i+<span class="string">&quot;&gt;&quot;</span>+$(e).<span class="title function_">text</span>())</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">each</span>($lis,<span class="keyword">function</span>(<span class="params">i,e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         			 * e是一个原生DOM对象</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         			 * */</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(i+<span class="string">&quot;&gt;&quot;</span>+$(e).<span class="title function_">text</span>())</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h1 id="动画效果"><a href="#动画效果" class="headerlink" title="动画效果"></a>动画效果</h1><h2 id="显示和隐藏"><a href="#显示和隐藏" class="headerlink" title="显示和隐藏"></a>显示和隐藏</h2><ul>
<li>==show()== :实现简单显示动画效果方法</li>
<li>==hide()== :实现简单隐藏动画效果方法</li>
<li>==toggle()== :实现切换简单显示和隐藏动画效果方法</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#d1</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">/*$(&quot;#d1&quot;).show(2000,&#x27;swing&#x27;,function()&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                                        alert(&quot;动画执行结束&quot;)</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                                &#125;)*/</span></span></span><br><span class="line"><span class="language-javascript">                $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">show</span>(<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">hide</span>(<span class="number">3000</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun3</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">toggle</span>(<span class="number">5000</span>);<span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;d1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;show&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun1()&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;hide&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun2()&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;toggle&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun3()&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span> </span><br></pre></td></tr></table></figure>

<h2 id="滑动动画效果"><a href="#滑动动画效果" class="headerlink" title="滑动动画效果"></a>滑动动画效果</h2><ul>
<li>==slideDown()==:实现向下滑动效果</li>
<li>==slideUp()==:实现向上滑动效果</li>
<li>==slideToggle()==:实现滑动切换动画效果</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">slideDown</span>(<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">slideUp</span>(<span class="number">3000</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun3</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">slideToggle</span>(<span class="number">5000</span>);<span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="淡入淡出动画效果"><a href="#淡入淡出动画效果" class="headerlink" title="淡入淡出动画效果"></a>淡入淡出动画效果</h2><ul>
<li>==fadeln()==: 实现淡入动画效果</li>
<li>==fadeOut()==:实现淡出动画效果</li>
<li>==fadeToggle()==:实现淡入淡出切换效果</li>
<li>==fadeTo()==：实现淡入指定透明度效果方法</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//淡入动画</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">fadeIn</span>(<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//淡出动画</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">fadeOut</span>(<span class="number">3000</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//淡入淡出切换</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun3</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">fadeToggle</span>(<span class="number">5000</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//淡入指定透明度效果</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fun4</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">fadeTo</span>(<span class="number">5000</span>,<span class="number">0.2</span>);<span class="comment">// 0-1 </span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="实现自定义动画效果"><a href="#实现自定义动画效果" class="headerlink" title="实现自定义动画效果"></a>实现自定义动画效果</h2><p>==$(“”).animate({动画内容},执行时间,动画结束后要执行的方法)==</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    $(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//$(&quot;&quot;).animate(&#123;动画内容&#125;,执行时间,动画结束后要执行的方法)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&quot;#d1&quot;</span>).<span class="title function_">animate</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">width</span>:<span class="string">&quot;100px&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">height</span>:<span class="string">&quot;100px&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">opcity</span>:<span class="number">0.5</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">borderRadius</span>:<span class="string">&quot;50px&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,<span class="number">2000</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>(<span class="string">&quot;动画执行结束了&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<img src="/2021/06/18/JQuery/20210731144759.gif" alt="1627712830125 00_00_00-00_00_30" style="zoom: 50%;">

<h1 id="表单检验"><a href="#表单检验" class="headerlink" title="表单检验"></a>表单检验</h1><h2 id="表单验证案例"><a href="#表单验证案例" class="headerlink" title="表单验证案例"></a>表单验证案例</h2><h4 id="验证要求"><a href="#验证要求" class="headerlink" title="验证要求"></a>验证要求</h4><p>用户名不能为空</p>
<p>用户名长度大于等于6</p>
<p>用户名中不能有数字</p>
<p>密码不少于5位</p>
<p>两次密码必须一致</p>
<p>邮箱格式正确 必须有@和.  例如<a href="mailto:&#x31;&#x32;&#51;&#x34;&#53;&#x36;&#55;&#56;&#57;&#64;&#113;&#x71;&#x2e;&#99;&#x6f;&#x6d;">&#x31;&#x32;&#51;&#x34;&#53;&#x36;&#55;&#56;&#57;&#64;&#113;&#x71;&#x2e;&#99;&#x6f;&#x6d;</a></p>
<h4 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h4><p><img src="/2021/06/18/JQuery/Users\Dell\AppData\Roaming\Typora\typora-user-images\image-20210731144934316.png" alt="image-20210731144934316"></p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p><a href="#form%E8%A1%A8%E5%8D%95%E5%BA%94%E7%94%A8%E6%AD%A3%E5%88%99">代码改进</a></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>1.对于表单的提交，要给form标签绑定onSubmit事件，而不是给submit按钮绑定onClick事件,onsubmit绑定的方法时要有return关键字,绑定的方法要返回true/false</p>
<p>1.对于表单的提交，要给form标签绑定onSubmit事件，而不是给submit按钮绑定onClick事件,onsubmit绑定的方法时要有return关键字,绑定的方法要返回true/false</p>
<p>2.表单项内容不管输入的是字符串、数字、日期，js、jQuery、JSP接收后都是String类型</p>
<p>3.表单的验证和String对象有密切关系 length charAt(i) indexOf(“@”)</p>
<p>4.如果表单项内容为空，js收到的不是null，而是空字符串。判断条件不能写 username == null，而要写username==””或username.length ==0  </p>
<p>5.验证出错要return false，验证无错要return true，并且 onsubmit=”return checkForm()</p>
<p>6.该示例的缺点主要在于对于邮箱如果采用传统方式进行验证，代码繁琐并且不能保证严谨性,过度依赖String的API。对于邮箱、手机号码、邮政编码等验证，可以使用正则表达式进行验证，严谨而且简单。 </p>
<h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><h3 id="1-什么是正则表达式"><a href="#1-什么是正则表达式" class="headerlink" title="1. 什么是正则表达式"></a>1. 什么是正则表达式</h3><p>Regular Expression，在代码中常简写为regex,正则表达式使用单个字符串来描述、匹配一系列符合某个句法规则的字符串。在很多文本编辑器里，正则表达式通常被用来检索、替换那些符合某个模式的文本。正则表达式是对字符串（包括普通字符（例如，a 到 z 之间的字母）和特殊字符（称为“元字符”））操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。正则表达式是一种文本模式，该模式描述在搜索文本时要匹配的一个或多个字符串。</p>
<h3 id="2-为什么使用正则表达式"><a href="#2-为什么使用正则表达式" class="headerlink" title="2. 为什么使用正则表达式"></a>2. 为什么使用正则表达式</h3><ul>
<li>正则表达式可以是文本的校验的代码更加简洁</li>
<li>正则表达式可以实现更加严谨细致的校验</li>
</ul>
<h3 id="3-正则表达式举例"><a href="#3-正则表达式举例" class="headerlink" title="3. 正则表达式举例"></a>3. 正则表达式举例</h3><p>匹配国内电话号码：\d{3}-\d{8}|\d{4}-\d{7}</p>
<p>匹配腾讯QQ号：[1-9][0-9]{4,}</p>
<p>匹配中国邮政编码：\d{6}   </p>
<p>匹配身份证：\d{15}|\d{18}</p>
<p>匹配由数字和26个英文字母组成的字符串 ^[A-Za-z0-9]+$　</p>
<p>匹配Email地址：\w+([-+.]\w+)*@\w+([-.]\w+)<em>.\w+([-.]\w+)</em></p>
<p>匹配中文字符的正则表达式： [\u4e00-\u9fa5] [a-zA-Z]</p>
<h3 id="4-JS创建正则表达式"><a href="#4-JS创建正则表达式" class="headerlink" title="4. JS创建正则表达式"></a>4. JS创建正则表达式</h3><p>正则表达式在JS中创建的语法为:</p>
<p>==var reg=/china/;==</p>
<p>==var reg=new RegExp(“china”);==</p>
<h3 id="5-通配符号"><a href="#5-通配符号" class="headerlink" title="5. 通配符号"></a>5. 通配符号</h3><img src="/2021/06/18/JQuery/06/18/JQuery/20210731151417.png" class title="image-20210731151417254">



<h3 id="6-重复符号"><a href="#6-重复符号" class="headerlink" title="6. 重复符号"></a>6. 重复符号</h3><img src="/2021/06/18/JQuery/20210731151725.png" alt="image-20210731151725582">



<h3 id="使用正则表达式实现数据验证"><a href="#使用正则表达式实现数据验证" class="headerlink" title="使用正则表达式实现数据验证"></a>使用正则表达式实现数据验证</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">			 * 正则表达式不依赖jQuery</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">			 * 正则表达式本身就是一个字符串 只不过该字符串用于表述一种规则</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">			 * </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">			 * */</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> reg =<span class="regexp">/^\w?$/</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> words =<span class="string">&quot;a&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(words))</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> regex1 = <span class="regexp">/^\d&#123;6&#125;$/</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> regex2 = <span class="regexp">/^1[3456789]\d&#123;9&#125;$/</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> regex3 = <span class="regexp">/^\w&#123;6,&#125;@[0-9A-Za-z]&#123;2,&#125;(\.[a-zA-Z]&#123;2,3&#125;)&#123;1,2&#125;$/</span>;  </span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="form表单应用正则"><a href="#form表单应用正则" class="headerlink" title="form表单应用正则"></a>form表单应用正则</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">checkUsername</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> reg1=<span class="regexp">/^\D&#123;6,&#125;$/</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> username =$(<span class="string">&quot;#user&quot;</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span>(!reg1.<span class="title function_">test</span>(username))&#123;</span></span><br><span class="line"><span class="language-javascript">                    $(<span class="string">&quot;#usertip&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&lt;font color=&#x27;red&#x27;&gt;格式必须是至少六位的非数字&lt;/font&gt;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 提示OK</span></span></span><br><span class="line"><span class="language-javascript">                $(<span class="string">&quot;#usertip&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&lt;font color=&#x27;green&#x27;&gt;OK&lt;/font&gt;&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">checkPassword</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> reg2=<span class="regexp">/^\S&#123;5,&#125;$/</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> pwd =$(<span class="string">&quot;#pwd&quot;</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span>(!reg2.<span class="title function_">test</span>(pwd))&#123;</span></span><br><span class="line"><span class="language-javascript">                    $(<span class="string">&quot;#pwdtip&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&lt;font color=&#x27;red&#x27;&gt;至少为5位非空格&lt;/font&gt;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                $(<span class="string">&quot;#pwdtip&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&lt;font color=&#x27;green&#x27;&gt;OK&lt;/font&gt;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">checkRepwd</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> p1=$(<span class="string">&quot;#pwd&quot;</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> p2=$(<span class="string">&quot;#repwd&quot;</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span>(p1.<span class="property">length</span>&lt; <span class="number">5</span> || p1 != p2)&#123;</span></span><br><span class="line"><span class="language-javascript">                    $(<span class="string">&quot;#repwdtip&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&lt;font color=&#x27;red&#x27;&gt;两次密码不一致&lt;/font&gt;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                $(<span class="string">&quot;#repwdtip&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&lt;font color=&#x27;green&#x27;&gt;OK&lt;/font&gt;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">checkEmail</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> em=$(<span class="string">&quot;#email&quot;</span>).<span class="title function_">val</span>();</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> regex3 = <span class="regexp">/^\w&#123;6,&#125;@[0-9A-Za-z]&#123;2,&#125;(\.[a-zA-Z]&#123;2,3&#125;)&#123;1,2&#125;$/</span>; </span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span>(!regex3.<span class="title function_">test</span>(em) )&#123;</span></span><br><span class="line"><span class="language-javascript">                    $(<span class="string">&quot;#emailtip&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&lt;font color=&#x27;red&#x27;&gt;邮箱格式有误&lt;/font&gt;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                $(<span class="string">&quot;#emailtip&quot;</span>).<span class="title function_">html</span>(<span class="string">&quot;&lt;font color=&#x27;green&#x27;&gt;OK&lt;/font&gt;&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">checkForm</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="title function_">checkUsername</span>()&amp;&amp;<span class="title function_">checkPassword</span>()&amp;&amp;<span class="title function_">checkRepwd</span>()&amp;&amp;<span class="title function_">checkEmail</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">&quot;center&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span> <span class="attr">onsubmit</span>=<span class="string">&quot;return checkForm()&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>您的姓名：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">onblur</span>=<span class="string">&quot;checkUsername()&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;usertip&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: inline;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>输入密码：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">onblur</span>=<span class="string">&quot;checkPassword()&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;pwdtip&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: inline;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>再输入一遍密码：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;repwd&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">onblur</span>=<span class="string">&quot;checkRepwd()&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;repwdtip&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: inline;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>您的Email：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">onblur</span>=<span class="string">&quot;checkEmail()&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;emailtip&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span> <span class="attr">class</span>=<span class="string">&quot;rb1&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="BootStrap"><a href="#BootStrap" class="headerlink" title="BootStrap"></a>BootStrap</h1><h2 id="容器类"><a href="#容器类" class="headerlink" title="容器类"></a>容器类</h2><p>==.container== 类用于固定宽度并支持响应式布局的容器。</p>
<p>==.container-fluid== 类用于 100% 宽度，占据全部视口（viewport）的容器。</p>
<p><strong>二者区别:</strong></p>
<p>固定容器的响应式布局规则是当窗口大小变化时,在指定的宽度范围内使用固定的宽度,</p>
<p>流容器的响应式布局规则是随着窗口大小的变化一同变化,横向全部占满</p>
<p><strong>固定容器的阈值如下图:</strong></p>
<img src="/2021/06/18/JQuery/20210731153222.png" alt="image-20210731153222356" style="zoom:50%;">

<h2 id="栅格系统"><a href="#栅格系统" class="headerlink" title="栅格系统"></a>栅格系统</h2><p>Bootstrap 提供了一套响应式、移动设备优先的流式网格系统，随着屏幕或视口（viewport）尺寸的增加，系统会自动分为最多 12 列。我们也可以根据自己的需要定义列数.</p>
<h3 id="网格类"><a href="#网格类" class="headerlink" title="网格类"></a>网格类</h3><p>Bootstrap 4 网格系统有以下 5 个类:</p>
<p>==.col-== 针对所有设备</p>
<p>==.col-sm-== 平板 - 屏幕宽度等于或大于 576px</p>
<p>==.col-md-== 桌面显示器 - 屏幕宽度等于或大于 768px)</p>
<p>==.col-lg-== 大桌面显示器 - 屏幕宽度等于或大于 992px)</p>
<p>==.col-xl-== 超大桌面显示器 - 屏幕宽度等于或大于 1200px)</p>
<h3 id="网格系统规则"><a href="#网格系统规则" class="headerlink" title="网格系统规则"></a>网格系统规则</h3><p>1 网格每一行需要放在设置了 .container (固定宽度) 或 .container-fluid (全屏宽度) 类的容器中，这样就可以自动设置一些外边距与内边距。</p>
<p>2 使用行来创建水平的列组class=row。</p>
<p>3 内容需要放置在列中，并且只有列可以是行的直接子节点。</p>
<p>4 预定义的类如 .row 和 .col-sm-4 可用于快速制作网格布局。</p>
<p>5 列通过填充创建列内容之间的间隙。 这个间隙是通过 .rows 类上的负边距设置第一行和最后一列的偏移。</p>
<p>6 网格列是通过跨越指定的 12 个列来创建。 例如，设置三个相等的列，需要使用三个.col-sm-4 来设置。</p>
<p>7  Bootstrap 3 和 Bootstrap 4 最大的区别在于 Bootstrap 4 现在使用 flexbox（弹性盒子） 而不是浮动。 Flexbox 的一大优势是，没有指定宽度的网格列将自动设置为等宽与等高列 。 如果您想了解有关Flexbox的更多信息，可以阅读我们的CSS Flexbox教程。</p>
<img src="/2021/06/18/JQuery/06/18/JQuery/20210731153418.png" class title="image-20210731153418460">

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--移动端优先的配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--bootstrap的样式库--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/bootstrap.min.css&quot;</span> &gt;</span></span><br><span class="line">        <span class="comment">&lt;!--jQuery--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery-3.5.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--popper--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/bootstrap.bundle.min.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--核心js文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/bootstrap.min.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: lavender;border:1px solid #117A8B;&quot;</span>&gt;</span></span><br><span class="line">                    One of three columns</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-8&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: lavender;border:1px solid #117A8B;&quot;</span>&gt;</span></span><br><span class="line">                    One of three columns</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-2&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: lavender;border:1px solid #117A8B;&quot;</span>&gt;</span></span><br><span class="line">                    One of three columns</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: lavender;border:1px solid #117A8B;&quot;</span>&gt;</span></span><br><span class="line">                    One of three columns</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: lavender;border:1px solid #117A8B;&quot;</span>&gt;</span></span><br><span class="line">                    One of three columns</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-sm-7&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: lavender;border:1px solid #117A8B;&quot;</span>&gt;</span></span><br><span class="line">                    One of three columns</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="导航栏案例"><a href="#导航栏案例" class="headerlink" title="导航栏案例"></a>导航栏案例</h2><img src="/2021/06/18/JQuery/06/18/JQuery/20210731153456.png" class title="image-20210731153456278">

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--移动端优先的配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--bootstrap的样式库--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/bootstrap.min.css&quot;</span> &gt;</span></span><br><span class="line">        <span class="comment">&lt;!--jQuery--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery-3.5.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--popper--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/bootstrap.bundle.min.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--核心js文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/bootstrap.min.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎进入马士兵教育<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Nav pills --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav nav-pills&quot;</span> <span class="attr">role</span>=<span class="string">&quot;tablist&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link active&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;pill&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#home&quot;</span>&gt;</span>主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;pill&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#menu1&quot;</span>&gt;</span>讲师介绍<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;pill&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#menu2&quot;</span>&gt;</span>课程介绍<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;pill&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#menu3&quot;</span>&gt;</span>优秀学员<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">&lt;!-- Tab panes --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-content&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;home&quot;</span> <span class="attr">class</span>=<span class="string">&quot;container tab-pane active&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border: 10px solid red;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我们公司<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;menu1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;container tab-pane fade&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border: 10px solid green;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我们的优秀讲师<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;menu2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;container tab-pane fade&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border: 10px solid yellow;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>我们的课程<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;menu3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;container tab-pane fade&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border: 10px solid blueviolet;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>优秀学员<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="轮播图案例"><a href="#轮播图案例" class="headerlink" title="轮播图案例"></a>轮播图案例</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--移动端优先的配置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--bootstrap的样式库--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/bootstrap.min.css&quot;</span> &gt;</span></span><br><span class="line">        <span class="comment">&lt;!--jQuery--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery-3.5.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--popper--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/bootstrap.bundle.min.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--核心js文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/bootstrap.min.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;carouselExampleCaptions&quot;</span> <span class="attr">class</span>=<span class="string">&quot;carousel slide&quot;</span> <span class="attr">data-ride</span>=<span class="string">&quot;carousel&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;carousel-indicators&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carouselExampleCaptions&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carouselExampleCaptions&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carouselExampleCaptions&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carouselExampleCaptions&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-inner&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-item active&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://static.runoob.com/images/mix/img_fjords_wide.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;d-block w-100&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption d-none d-md-block&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h5</span>&gt;</span>江河<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Nulla vitae elit libero, a pharetra augue mollis interdum.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-item&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://static.runoob.com/images/mix/img_nature_wide.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;d-block w-100&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption d-none d-md-block&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h5</span>&gt;</span>山川<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipiscing elit.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-item&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://static.runoob.com/images/mix/img_mountains_wide.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;d-block w-100&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption d-none d-md-block&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h5</span>&gt;</span>公路<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Praesent commodo cursus magna, vel scelerisque nisl consectetur.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-item&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://www.12306.cn/index/images/pic/banner0619.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;d-block w-100&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-caption d-none d-md-block&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h5</span>&gt;</span>火车<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Praesent commodo cursus magna, vel scelerisque nisl consectetur.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;carousel-control-prev&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#carouselExampleCaptions&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;prev&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;carousel-control-prev-icon&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Previous<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;carousel-control-next&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#carouselExampleCaptions&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;next&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;carousel-control-next-icon&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Next<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>JQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux学习</title>
    <url>/2021/07/21/Linux%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h1><h2 id="启动网络"><a href="#启动网络" class="headerlink" title="启动网络"></a>启动网络</h2><ul>
<li>启动网卡（仅针对单次可用）</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nmcli c up ens33</span></span><br></pre></td></tr></table></figure>

<ul>
<li>修改配置文件（永久可用）</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span></span><br></pre></td></tr></table></figure>

<img src="/2021/07/21/Linux%E5%AD%A6%E4%B9%A0/20210810165254.png" alt="image-20210810165233126" style="zoom:33%;">

<p>ONBOOT=yes</p>
<p>NAT模式</p>
<p>在VMWare中默认使用的NAT模式</p>
<ul>
<li>Network Address Translation 网络地址转换，</li>
</ul>
<p>为什么要求改网络类型：因为给NAT模式外界不能访问windows里面的操作系统</p>
<p>改成桥接模式</p>
<img src="/2021/07/21/Linux%E5%AD%A6%E4%B9%A0/20210810165902.png" alt="image-20210810165902006" style="zoom: 33%;">

]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaEE</title>
    <url>/2021/07/20/JavaEE/</url>
    <content><![CDATA[<h1 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h1><p>​                                                           </p>
<img src="/2021/07/20/JavaEE/20210731155304-20220507093630276.png" alt="image-20210731155304853" style="zoom:67%;">



<span id="more"></span>

<h1 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h1><h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h2><p>协议：Protocol</p>
<h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>HTTP协议是<strong>Hyper Text Transfer Protocol（超文本传输协议）</strong>的缩写, HTTP是万维网（WWW:World Wide Web）的数据通信的基础。</p>
<p>HTTP是一个简单的请求-响应协议，它通常运行在TCP之上。它指定了客户端可能发送给服务器什么样的消息以及得到什么样的响应。</p>
<img src="/2021/07/20/JavaEE/20210802110328-20220507093630140.png" alt="image-20210802110327666" style="zoom:67%;">


<p>HTTP是一个基于<strong>TCP/IP</strong>通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）。</p>
<img src="/2021/07/20/JavaEE/20210802110337-20220507093630336.png" alt="image-20210802110337133" style="zoom:67%;">

<h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>1支持客户/服务器模式</p>
<p>HTTP协议支持客户端服务端模式，需要使用浏览器作为客户端来访问服务端。</p>
<p>2简单快速</p>
<p>客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、POST等。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。</p>
<p>3灵活</p>
<p>HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type（Content-Type是HTTP包中用来表示内容类型的标识）加以标记。</p>
<p>4无连接</p>
<p>每次请求一次，释放一次连接。所以无连接表示每次连接只能处理一个请求。优点就是节省传输时间，实现简单。我们有时称这种无连接为短连接。对应的就有了长链接，长连接专门解决效率问题。当建立好了一个连接之后，可以多次请求。但是缺点就是容易造成占用资源不释放的问题。当HTTP协议头部中字段Connection：keep-alive表示支持长链接。</p>
<p>5单向性</p>
<p>服务端永远是被动的等待客户端的请求。</p>
<p>6无状态</p>
<p>HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。为了解决HTTP协议无状态，于是，两种用于保持HTTP连接状态的技术就应运而生了，一个是Cookie，而另一个则是Session。</p>
<p>HTTP协议发展和版本</p>
<p>http协议在1991年发布第一个版本版本号为0.9。随后WWW联盟（WWW Consortium-W3C）于1994年成立，http协议被纳入到W3C组织中进行维护和管理。</p>
<p>http1.0</p>
<p>最早在1996年在网页中使用，内容简单，所以浏览器的每次请求都需要与服务器建立一个TCP连接，服务器处理完成后立即断开TCP连接（无连接），服务器不跟踪每个客户端也不记录过去的请求（无状态）,请求只能由客户端发起（单向性）。</p>
<p>http1.1</p>
<p>到1999年广泛在各大浏览器网络请求中使用，HTTP/1.0中默认使用Connection: close。在HTTP/1.1中已经默认使用Connection: keep-alive（长连接），避免了连接建立和释放的开销，但服务器必须按照客户端请求的先后顺序依次回送相应的结果，以保证客户端能够区分出每次请求的响应内容。通过Content-Length字段来判断当前请求的数据是否已经全部接收。不允许同时存在两个并行的响应。</p>
<p>1.1中最重要的一个特点是支持“长连接”，即“一次连接可以多次请求”。</p>
<p>HTTP 1.1支持持久连接（HTTP/1.1的默认模式使用带流水线的持久连接），在一个TCP连接上可以传送多个HTTP请求和响应，减少了建立和关闭连接的消耗和延迟。一个包含有许多图像的网页文件的多个请求和应答可以在一个连接中传输，但每个单独的网页文件的请求和应答仍然需要使用各自的连接。HTTP 1.1还允许客户端不用等待上一次请求结果返回，就可以发出下一次请求，但服务器端必须按照接收到客户端请求的先后顺序依次回送响应结果，以保证客户端能够区分出每次请求的响应内容，这样也显著地减少了整个下载过程所需要的时间。</p>
<p>http2.0</p>
<p>长连接</p>
<p>在HTTP/2中，客户端向某个域名的服务器请求页面的过程中，只会创建一条TCP连接，即使这页面可能包含上百个资源。  单一的连接应该是HTTP2的主要优势，单一的连接能减少TCP握手带来的时延。HTTP2中用一条单一的长连接，避免了创建多个TCP连接带来的网络开销，提高了吞吐量。</p>
<p>多路复用 (Multiplexing)</p>
<p>HTTP2.0中所有加强性能的核心是二进制传输，在HTTP1.x中，我们是通过文本的方式传输数据。在HTTP2.0中引入了新的编码机制，所有传输的数据都会被分割，并采用二进制格式编码。</p>
<p>多路复用，连接共享。不同的request可以使用同一个连接传输（最后根据每个request上的id号组合成正常的请求）。</p>
<p>HTTP2.0中，有两个概念非常重要：帧（frame）和流（stream）。<br>帧是最小的数据单位，每个帧会标识出该帧属于哪个流，流是多个帧组成的数据流。<br>所谓多路复用，即在一个TCP连接中存在多个流，即可以同时发送多个请求，对端可以通过帧中的表示知道该帧属于哪个请求。在客户端，这些帧乱序发送，到对端后再根据每个帧首部的流标识符重新组装。通过该技术，可以避免HTTP旧版本的队头阻塞问题，极大提高传输性能。</p>
<p>首部压缩（Header Compression）</p>
<p>由于1.1中header带有大量的信息，并且得重复传输，2.0使用encoder来减少需要传输的hearder大小。</p>
<p>服务端推送（Server Push）</p>
<p>在HTTP2.0中，服务端可以在客户端某个请求后，主动推送其他资源。<br>可以想象一下，某些资源客户端是一定会请求的，这时就可以采取服务端push的技术，提前给客户端推送必要的资源，就可以相对减少一点延迟时间。在浏览器兼容的情况下也可以使用prefetch。</p>
<p>更安全</p>
<p>HTTP2.0使用了tls的拓展ALPN做为协议升级，除此之外，HTTP2.0对tls的安全性做了近一步加强，通过黑名单机制禁用了几百种不再安全的加密算法。</p>
<h1 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h1><h2 id="1-引入"><a href="#1-引入" class="headerlink" title="1.   引入"></a>1.   引入</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Servlet是Server Applet的简称，称为服务端小程序，是JavaEE平台下的技术标准，基于Java语言编写的服务端程序。Web容器或应用服务器实现了Servlet标准所以Servlet需运行在Web容器或应用服务器中。Servlet主要功能在于能在服务器中执行并生成数据。</p>
<h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><p>使用单进程多线程方式运行</p>
<img src="/2021/07/20/JavaEE/20210802204053-20220507093630091.png" alt="image-20210802204049056" style="zoom:80%;">

<h3 id="应用程序中的位置"><a href="#应用程序中的位置" class="headerlink" title="应用程序中的位置"></a>应用程序中的位置</h3><img src="/2021/07/20/JavaEE/07/20/JavaEE/20210802204157-20220507093630043.png" class title="image-20210802204157808">

<h3 id="静态资源和动态资源的区分"><a href="#静态资源和动态资源的区分" class="headerlink" title="静态资源和动态资源的区分"></a>静态资源和动态资源的区分</h3><ul>
<li>静态资源：每次访问都不需要运算，直接就可以返回的资源，如HTML CSS JS 多媒体文件等等 每次访问获得地资源都是一样的</li>
<li>动态资源：每次访问都需要运算代码生成的资源如 Servlet JSP 每次访问获得的结果可能都是不一样的</li>
</ul>
<p>Servlet 作为一种动态资源技术 是后面学习框架的基础</p>
<h3 id="Servlet在程序中的地位"><a href="#Servlet在程序中的地位" class="headerlink" title="Servlet在程序中的地位"></a>Servlet在程序中的地位</h3><p>Servlet是可以接受Http请求并作出相应的一种技术,是JAVA语言编写的一种动态资源<br>Servlet是前后端衔接的一种技术,不是所有的JAVA类都可以接收请求和作出相应,Servlet可以</p>
<p>在MVC模式中,Servlet作为Controller层(控制层)主要技术,用于和浏览器完成数据交互,控制交互逻辑</p>
<h3 id="servlet三大域对象"><a href="#servlet三大域对象" class="headerlink" title="==servlet三大域对象=="></a>==servlet三大域对象==</h3><p><strong>Servlet三大域对象的应用 request、session、application（ServletContext）</strong></p>
<p><strong>ServletContext是一个全局的储存信息的空间，服务器开始就存在，服务器关闭才释放。</strong></p>
<p><strong>request，一个用户可有多个；session，一个用户一个；而servletContext，所有用户共用一个。所以，为了节省空间，提高效率，ServletContext中，要放必须的、重要的、所有用户需要共享的线程又是安全的一些信息。</strong></p>
<h2 id="案例1：初步认识"><a href="#案例1：初步认识" class="headerlink" title="案例1：初步认识"></a>案例1：初步认识</h2><ul>
<li><p>创建一个JAVAWEB项目，并在项目中开发一个自己的Servlet，继承HttpServlet类</p>
<img src="/2021/07/20/JavaEE/20210802205500-20220507093630287.png" alt="image-20210802205500530" style="zoom:50%;">

<img src="/2021/07/20/JavaEE/07/20/JavaEE/20210802205532-20220507093629703.png" class title="image-20210802205532234"></li>
<li><p>在MyServlet类中重写service方法</p>
<img src="/2021/07/20/JavaEE/07/20/JavaEE/20210802205558-20220507093630506.png" class title="image-20210802205558243"></li>
<li><p>在service方法中定义具体的功能代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    <span class="comment">//动态生成数据</span></span><br><span class="line">    <span class="comment">//随机生成一个整数</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>().nextInt();</span><br><span class="line">    <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> (num%<span class="number">2</span>==<span class="number">0</span>)?<span class="string">&quot;happy birthday&quot;</span>:<span class="string">&quot;happy new year&quot;</span>;</span><br><span class="line">    <span class="comment">//对浏览器做出响应</span></span><br><span class="line">    <span class="type">PrintWriter</span> <span class="variable">writer</span> <span class="operator">=</span> resp.getWriter();<span class="comment">//该打印流指向了浏览器</span></span><br><span class="line">    writer.write(message);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>在web.xml中配置Servlet的映射路径</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--向Tomcat声明一个Servlet--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myFirstServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span><span class="comment">&lt;!--这只是别名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.chs.servlet.Myservlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--给Servlet匹配一个请求的映射路径--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myFirstServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/mySerlvet.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>打开浏览器请求Servlet资源</p>
<img src="/2021/07/20/JavaEE/07/20/JavaEE/20210802205836-20220507093630044.png" class title="image-20210802205836668"></li>
</ul>
<h2 id="案例2：登录页"><a href="#案例2：登录页" class="headerlink" title="案例2：登录页"></a>案例2：登录页</h2><h3 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h3><p>准备一个登陆页，可以输入要用户名和密码</p>
<p>输入完毕向Servlet提交用户名和密码</p>
<p>Servlet接收到用户名和密码之后校验是否正确</p>
<p>如果正确响应success</p>
<p>如果不正确响应Failed</p>
<h3 id="具体步骤："><a href="#具体步骤：" class="headerlink" title="具体步骤："></a>具体步骤：</h3><ul>
<li><p>项目结构：</p>
<img src="/2021/07/20/JavaEE/20210802210210-20220507093630228.png" alt="image-20210802210210084" style="zoom:67%;"></li>
<li><p>开发登录页：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span> <span class="attr">action</span>=<span class="string">&quot;loginServlet.do&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">&quot;margin: 0px auto&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;0px&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0px&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1px&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> &gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>开发后台Servlet</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;login servlet invoked&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取请求中的数据</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">pwd</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;pwd&quot;</span>);</span><br><span class="line">        <span class="comment">// 判断数据</span></span><br><span class="line">        String message=<span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(username.equals(<span class="string">&quot;mashibing&quot;</span>)&amp;&amp; pwd.equals(<span class="string">&quot;123456&quot;</span>))&#123;</span><br><span class="line">            message=<span class="string">&quot;Success&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            message=<span class="string">&quot;Fail&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 作出响应</span></span><br><span class="line">        resp.getWriter().write(message);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li>
<li><p>配置Servlet</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>loginServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.mashibing.servlet.LoginServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>loginServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/loginServlet.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>login.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<p>运行测试</p>
<img src="/2021/07/20/JavaEE/07/20/JavaEE/20210802210437-20220507093630239.png" class title="image-20210802210437528">

<img src="/2021/07/20/JavaEE/20210802210446-20220507093630225.png" alt="image-20210802210446147" style="zoom:67%;">



<h2 id="2-HttpServletRequest"><a href="#2-HttpServletRequest" class="headerlink" title="2. HttpServletRequest"></a>2. HttpServletRequest</h2><p>一个http可以分为三个部分：<strong>请求行 请求头 请求体</strong></p>
<h3 id="请求行"><a href="#请求行" class="headerlink" title="请求行"></a>请求行</h3><ul>
<li>请求方式：GET   </li>
<li>请求的URL： <a href="http://192.168.56.220:8080/logOnDemo/logon.html">http://192.168.56.220:8080/logOnDemo/logon.html</a></li>
<li>协议及版本： HTTP/1.1</li>
</ul>
<h3 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h3><img src="/2021/07/20/JavaEE/07/20/JavaEE/20210802210812-20220507093630614.png" class title="image-20210802210812138">



<h3 id="请求体"><a href="#请求体" class="headerlink" title="请求体"></a>请求体</h3><p>get方式提交的请求数据通过地址栏提交 ,没有请求体<br>post方式提交请求数据单独放到请求体中,请求时所携带的数据 (post方式)</p>
<h3 id="http支持的请求方式"><a href="#http支持的请求方式" class="headerlink" title="http支持的请求方式"></a>http支持的请求方式</h3><img src="/2021/07/20/JavaEE/07/20/JavaEE/20210802211209-20220507093630776.png" class title="image-20210802211209830">

<h4 id="get和post的区别"><a href="#get和post的区别" class="headerlink" title="==get和post的区别=="></a>==get和post的区别==</h4><p>==(面试）==</p>
<ul>
<li><p>GET在浏览器回退时是无害的，而POST会再次提交请求。</p>
</li>
<li><p>GET产生的URL地址可以被Bookmark，而POST不可以。</p>
</li>
<li><p>GET请求会被浏览器主动cache，而POST不会，除非手动设置。</p>
</li>
<li><p>GET请求只能进行url编码，而POST支持多种编码方式。</p>
</li>
<li><p>GET请求参数会被完整保留在浏览器历史记录里，而POST中的参数不会被保留。</p>
</li>
<li><p>GET请求在URL中传送的参数是有长度限制的，而POST则没有。对参数的数据类型GET只接受ASCII字符，而POST即可是字符也可是字节。</p>
</li>
<li><p>GET比POST更不安全，因为参数直接暴露在URL上，所以不能用来传递敏感信息。</p>
</li>
<li><p>GET参数通过URL传递，POST放在Request body中。</p>
</li>
</ul>
<h3 id="具体操作：获得客户端请求信息"><a href="#具体操作：获得客户端请求信息" class="headerlink" title="具体操作：获得客户端请求信息"></a>具体操作：获得客户端请求信息</h3><p>HttpServletRequest对象代表客户端浏览器的请求，当客户端浏览器通过HTTP协议访问服务器时，HTTP请求中的所有信息都会被Tomcat所解析并封装在这个对象中，通过这个对象提供的方法，可以获得客户端请求的所有信息。</p>
<h4 id="1-获取请求行信息"><a href="#1-获取请求行信息" class="headerlink" title="1.获取请求行信息"></a>1.获取请求行信息</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">req.getRequestURL():<span class="comment">//返回客户端浏览器发出请求时的完整URL。</span></span><br><span class="line"></span><br><span class="line">req.getRequestURI():<span class="comment">//返回请求行中指定资源部分。</span></span><br><span class="line"></span><br><span class="line">req.getRemoteAddr():<span class="comment">//返回发出请求的客户机的IP地址。</span></span><br><span class="line"></span><br><span class="line">req.getLocalAddr():<span class="comment">//返回WEB服务器的IP地址。</span></span><br><span class="line"></span><br><span class="line">req.getLocalPort():<span class="comment">//返回WEB服务器处理Http协议的连接器所监听的端口。</span></span><br></pre></td></tr></table></figure>

<h4 id="2-获取请求头信息"><a href="#2-获取请求头信息" class="headerlink" title="2.获取请求头信息"></a>2.获取请求头信息</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">req.getHeader(<span class="string">&quot;headerKey&quot;</span>):<span class="comment">//根据请求头中的key获取对应的value。</span></span><br><span class="line"><span class="type">String</span> <span class="variable">headerValue</span> <span class="operator">=</span> req.getHeader(<span class="string">&quot;headerKey&quot;</span>);</span><br><span class="line">req.getHeaderNames():<span class="comment">//获取请求头中所有的key，该方法返回枚举类型。</span></span><br><span class="line">Enumeration&lt;String&gt; headerNames = req.getHeaderNames();</span><br></pre></td></tr></table></figure>



<p>测试代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Servlet3</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        System.out.println(req.getRequestURL());<span class="comment">//返回客户端浏览器发出请求时的完整URL。</span></span><br><span class="line">        System.out.println(req.getRequestURI());<span class="comment">//返回请求行中指定资源部分。</span></span><br><span class="line">        System.out.println(req.getRemoteAddr());<span class="comment">//返回发出请求的客户机的IP地址。</span></span><br><span class="line">        System.out.println(req.getLocalAddr());<span class="comment">//返回WEB服务器的IP地址。</span></span><br><span class="line">        System.out.println(req.getLocalPort());<span class="comment">//返回WEB服务器处理Http协议的连接器所监听的端口。</span></span><br><span class="line">        System.out.println(<span class="string">&quot;主机名: &quot;</span> + req.getLocalName());</span><br><span class="line">        System.out.println(<span class="string">&quot;客户端PORT: &quot;</span> + req.getRemotePort());</span><br><span class="line">        System.out.println(<span class="string">&quot;当前项目部署名: &quot;</span> + req.getContextPath());</span><br><span class="line">        System.out.println(<span class="string">&quot;协议名:&quot;</span>+req.getScheme());</span><br><span class="line">        System.out.println(<span class="string">&quot;请求方式:&quot;</span>+req.getMethod());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据请求头名或者请求头对应的值</span></span><br><span class="line">        System.out.println(req.getHeader(<span class="string">&quot;Accept&quot;</span>));</span><br><span class="line">        <span class="comment">// 获得全部的请求头名</span></span><br><span class="line">        Enumeration&lt;String&gt; headerNames = req.getHeaderNames();</span><br><span class="line">        <span class="keyword">while</span> (headerNames.hasMoreElements())&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">headername</span> <span class="operator">=</span> headerNames.nextElement();</span><br><span class="line">            System.out.println(headername+<span class="string">&quot;:&quot;</span>+req.getHeader(headername));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="3-获取请求数据"><a href="#3-获取请求数据" class="headerlink" title="3.获取请求数据"></a>3.获取请求数据</h4><ul>
<li><p>根据key获取指定value:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">req.getParameter(<span class="string">&quot;key&quot;</span>):<span class="comment">//根据key获取指定value。</span></span><br></pre></td></tr></table></figure></li>
<li><p>获java取复选框(checkbox组件)中的值（多个值）：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">req.getParameterValues(<span class="string">&quot;checkboxkey&quot;</span>):<span class="comment">//获取复选框(checkbox组件)中的值，返回一个String[]。</span></span><br></pre></td></tr></table></figure></li>
<li><p>获取所有提交数据的key</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">req.getParameterNames():<span class="comment">//获取请求中所有数据的key，该方法返回一个枚举类型。</span></span><br></pre></td></tr></table></figure></li>
<li><p>使用Map结构获取提交数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">req.getParameterMap():<span class="comment">//获取请求中所有的数据并存放到一个Map结构中，该方法返回一个Map，其中key为String类型value为String[]类型。</span></span><br></pre></td></tr></table></figure></li>
<li><p>设置请求编码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">req.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>请求的数据包基于字节在网络上传输，Tomcat接收到请求的数据包后会将数据包中的字节转换为字符。在Tomcat中使用的是ISO-8859-1的单字节编码完成字节与字符的转换，所以数据中含有中文就会出现乱码，可以通过req.setCharacterEncoding(“utf-8”)方法来对提交的数据根据指定的编码方式重新做编码处理。</p>
</li>
</ul>
<h2 id="案例3-HTTP请求"><a href="#案例3-HTTP请求" class="headerlink" title="案例3:HTTP请求"></a>案例3:HTTP请求</h2><p><strong>需求 ：获得前端客户端表单中请求的数据信息</strong></p>
<h3 id="前端代码"><a href="#前端代码" class="headerlink" title="前端代码"></a>前端代码</h3><h4 id="开发form表单注意事项"><a href="#开发form表单注意事项" class="headerlink" title="开发form表单注意事项"></a>开发form表单注意事项</h4><ol>
<li><p>form 不是from</p>
</li>
<li><p>form表单内部不是所有的标签信息都会提交 一些输入信息  input select textarea … …</p>
</li>
<li><p>提交的标签必须具备<strong>name属性</strong>  name属性的作用是让后台区分数据  id便于在前端区分数据</p>
</li>
<li><p>提交的标签一般都要具备<strong>value属性</strong>  value属性确定我们要提交的具体的数据</p>
</li>
<li><p>==get post==<a href="#get%E5%92%8Cpost%E7%9A%84%E5%8C%BA%E5%88%AB">区别</a><br>get方式数据是通过URL携带<br>提交的数据只能是文本<br>提交的数据量不大<br>get方式提交的数据相对不安全</p>
<p>post 将数据单独打包放到请求体中<br>提交的数据可以是文本可以是各种文件<br>提交的数据量理论上没有上限<br>post方式提交数据相对安全</p>
</li>
</ol>
<p>  ==readonly只读== 也是会提交数据的<br>  ==hidden==  隐藏 也是会提交数据<br>  ==disabled== 不可用 显示但是不提交</p>
<p><strong>代码：</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;form method=<span class="string">&quot;get&quot;</span> action=<span class="string">&quot;myServlet&quot;</span>&gt;</span><br><span class="line">    &lt;table style=<span class="string">&quot;margin: 0px auto&quot;</span> width=<span class="string">&quot;300px&quot;</span> cellpadding=<span class="string">&quot;0px&quot;</span> cellspacing=<span class="string">&quot;0px&quot;</span> border=<span class="string">&quot;1px&quot;</span>&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;用户名&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> id=<span class="string">&quot;in1&quot;</span> value=<span class="string">&quot;12345&quot;</span> disabled &gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;密码&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;pwd&quot;</span>&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;性别&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;input type=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;gender&quot;</span> value=<span class="string">&quot;1&quot;</span> checked&gt;男</span><br><span class="line">                &lt;input type=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;gender&quot;</span> value=<span class="string">&quot;0&quot;</span>&gt;女</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;爱好&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobby&quot;</span> value=<span class="string">&quot;1&quot;</span>&gt;蓝球</span><br><span class="line">                &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobby&quot;</span> value=<span class="string">&quot;2&quot;</span>&gt;足球</span><br><span class="line">                &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobby&quot;</span> value=<span class="string">&quot;3&quot;</span>&gt;羽毛球</span><br><span class="line">                &lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;hobby&quot;</span> value=<span class="string">&quot;4&quot;</span>&gt;乒乓球</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;个人简介&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;!--文本域 双标签 页面上显示的文字是双标签中的文本 不是value属性</span><br><span class="line"></span><br><span class="line">                    文本域提交的数据不是value属性值,是双标签中的文本</span><br><span class="line">                --&gt;</span><br><span class="line">                &lt;textarea name=<span class="string">&quot;introduce&quot;</span> &gt;b&lt;/textarea&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line"></span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;籍贯&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;!--</span><br><span class="line">                select</span><br><span class="line">                option没有定义value属性 那么就提交option中间的文字(不推荐)</span><br><span class="line"></span><br><span class="line">                --&gt;</span><br><span class="line">                &lt;select name=<span class="string">&quot;provience&quot;</span>&gt;</span><br><span class="line">                    &lt;option value=<span class="string">&quot;1&quot;</span>&gt;a京&lt;/option&gt;</span><br><span class="line">                    &lt;option value=<span class="string">&quot;2&quot;</span>&gt;b津&lt;/option&gt;</span><br><span class="line">                    &lt;option value=<span class="string">&quot;3&quot;</span>&gt;c冀&lt;/option&gt;</span><br><span class="line">                &lt;/select&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr align=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">            &lt;td colspan=<span class="string">&quot;2&quot;</span>&gt;</span><br><span class="line">                &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交数据&quot;</span>&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>

<p><strong>效果：</strong></p>
<img src="/2021/07/20/JavaEE/20210803102738-20220507093630489.png" alt="image-20210803102513541" style="zoom: 50%;">

<h3 id="Servlet代码"><a href="#Servlet代码" class="headerlink" title="Servlet代码"></a>Servlet代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// req获取参数</span></span><br><span class="line">        <span class="comment">// 如果 前端发过来的数据由数据名但是没有值, getParameter返回的是一个空字符串  &quot;&quot;</span></span><br><span class="line">        <span class="comment">// 获取的参数在提交的数据中名都没有,getParameter返回的是null</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;username:&quot;</span>+username);</span><br><span class="line">        System.out.println(<span class="string">&quot;password:&quot;</span>+req.getParameter(<span class="string">&quot;pwd&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;gender:&quot;</span>+req.getParameter(<span class="string">&quot;gender&quot;</span>));</span><br><span class="line">        <span class="comment">// hobby=1&amp;hobby=2&amp;hobby=3 想要获得多个同名的参数 getParameterValues 返回的是一个Sting数组</span></span><br><span class="line">        String[] hobbies = req.getParameterValues(<span class="string">&quot;hobby&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;hobbies:&quot;</span>+ Arrays.toString(hobbies));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// textarea</span></span><br><span class="line">        System.out.println(<span class="string">&quot;introduce:&quot;</span>+req.getParameter(<span class="string">&quot;introduce&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// select</span></span><br><span class="line">        System.out.println(<span class="string">&quot;provience:&quot;</span>+req.getParameter(<span class="string">&quot;provience&quot;</span>));</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;___________________________&quot;</span>);</span><br><span class="line">        <span class="comment">// 如果不知道参数的名字?</span></span><br><span class="line">        <span class="comment">// 获取所有的参数名</span></span><br><span class="line">        Enumeration&lt;String&gt; pNames = req.getParameterNames();</span><br><span class="line">        <span class="keyword">while</span>(pNames.hasMoreElements())&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">pname</span> <span class="operator">=</span> pNames.nextElement();</span><br><span class="line">            String[] pValues = req.getParameterValues(pname);</span><br><span class="line">            System.out.println(pname+<span class="string">&quot;:&quot;</span>+Arrays.toString(pValues));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;________________________________&quot;</span>);</span><br><span class="line">        Map&lt;String, String[]&gt; pmap = req.getParameterMap();</span><br><span class="line">        Set&lt;Map.Entry&lt;String, String[]&gt;&gt; entries = pmap.entrySet();</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, String[]&gt; entry : entries) &#123;</span><br><span class="line">            System.out.println(entry.getKey()+<span class="string">&quot;:&quot;</span>+Arrays.toString(entry.getValue()));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>运行结果：</p>
<img src="/2021/07/20/JavaEE/20210803102814-20220507093630541.png" alt="image-20210803102714186" style="zoom:50%;">

<h2 id="3-HttpServletResponse"><a href="#3-HttpServletResponse" class="headerlink" title="3. HttpServletResponse"></a>3. HttpServletResponse</h2><p>http响应部分可以分为三部分：<strong>响应行，响应头，响应体</strong></p>
<h3 id="响应行"><a href="#响应行" class="headerlink" title="响应行"></a>响应行</h3><img src="/2021/07/20/JavaEE/07/20/JavaEE/20210803161928-20220507093630572.png" class title="image-20210803161927018">

<p>响应状态码列表</p>
<img src="/2021/07/20/JavaEE/07/20/JavaEE/20210803161950-20220507093630931.png" class title="image-20210803161950030">

<h3 id="响应头"><a href="#响应头" class="headerlink" title="响应头"></a>响应头</h3><p>Content-Type：响应内容的类型(MIME)</p>
<img src="/2021/07/20/JavaEE/07/20/JavaEE/20210803162052-20220507093630775.png" class title="image-20210803162052600">

<h3 id="响应实体"><a href="#响应实体" class="headerlink" title="响应实体"></a>响应实体</h3><p>即<strong>服务器响应回来的内容</strong></p>
<p>​        HttpServletResponse对象代表服务器的响应，封装了响应客户端浏览器的<strong>流对象</strong>，以及向客户端浏览器响应的<strong>响应头、响应数据、响应状态码等信息</strong>。</p>
<h4 id="ContentType-响应设置"><a href="#ContentType-响应设置" class="headerlink" title="ContentType:响应设置"></a>ContentType:响应设置</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">resp.setContentType(<span class="string">&quot;MIME&quot;</span>):<span class="comment">//该方法可通过MIME-Type设置响应类型。</span></span><br></pre></td></tr></table></figure>

<h6 id="MIME"><a href="#MIME" class="headerlink" title="MIME"></a><strong>MIME</strong></h6><p>全称是<strong>Multipurpose Internet Mail Extensions</strong>，即多用途互联网邮件扩展类型。<br>这是HTTP协议中用来定义文档性质及格式的标准。对HTTP传输内容类型进行了全面定义。<br>服务器通过MIME告知响应内容类型，而浏览器则通过MIME类型来确定如何处理文档。</p>
<p><strong>HTTP content-type 类型表：</strong></p>
<p><a href="https://www.runoob.com/http/http-content-type.html">https://www.runoob.com/http/http-content-type.html</a></p>
<p><strong>常见的媒体格式类型如下：</strong></p>
<ul>
<li>text/html ： HTML格式</li>
<li>text/plain ：纯文本格式</li>
<li>text/xml ： XML格式</li>
<li>image/gif ：gif图片格式</li>
<li>image/jpeg ：jpg图片格式</li>
<li>image/png：png图片格式</li>
</ul>
<p>以application开头的媒体格式类型：</p>
<ul>
<li>application/xhtml+xml ：XHTML格式</li>
<li>application/xml： XML数据格式</li>
<li>application/atom+xml ：Atom XML聚合格式</li>
<li>application/json： JSON数据格式</li>
<li>application/pdf：pdf格式</li>
<li>application/msword ： Word文档格式</li>
<li>application/octet-stream ： 二进制流数据（如常见的文件下载）</li>
<li>application/x-www-form-urlencoded ： <form enctype>中默认的encType，form表单数据被编码为key/value格式发送到服务器（表单默认的提交数据的格式）</form></li>
</ul>
<p>另外一种常见的媒体格式是上传文件之时使用的：</p>
<ul>
<li>multipart/form-data ： 需要在表单中进行文件上传时，就需要使用该格式</li>
</ul>
<p><strong>常见的字节型响应：</strong></p>
<ul>
<li>image/jpeg：图片类型为jpeg或jpg格式。</li>
</ul>
<ul>
<li>image/gif: 图片类型为gif格式。</li>
</ul>
<p><strong>设置响应编码</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>设置服务端为浏览器产生响应的响应编码，服务端会根据此编码将响应内容的字符转换为字节。同时客户端浏览器会根据此编码方式显示响应内容。</p>
<p><strong>在响应中添加附加信息（文件下载）</strong></p>
<p>在实现文件下载时，我们需要修改响应头，添加附加信息。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">response.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>,   <span class="string">&quot;attachment; filename=&quot;</span>+文件名);</span><br></pre></td></tr></table></figure>

<p>==Content-Disposition:attachment==</p>
<p>该附加信息表示作为对下载文件的一个标识字段。不会在浏览器中显示而是直接做下载处理。</p>
<p>filename=文件名,表示指定下载文件的文件名。</p>
<p>解决文件名中文乱码问题:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">resp.addHeader(<span class="string">&quot;Content-Disposition&quot;</span>,<span class="string">&quot;attachment;filename=&quot;</span>+<span class="keyword">new</span> <span class="title class_">String</span> (file.getName().getBytes(<span class="string">&quot;gbk&quot;</span>),<span class="string">&quot;iso-8859-1&quot;</span>));</span><br></pre></td></tr></table></figure>



<h3 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyServlet2</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 设置响应码</span></span><br><span class="line">        <span class="comment">//resp.setStatus(500);</span></span><br><span class="line">        <span class="comment">//resp.setStatus(405, &quot;request method not supported&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置响应头</span></span><br><span class="line">        <span class="comment">//resp.setHeader(&quot;Date&quot;,&quot;2022-11-11&quot;);</span></span><br><span class="line">        <span class="comment">// 自定义头</span></span><br><span class="line">        <span class="comment">// resp.setHeader(&quot;aaa&quot;, &quot;bbb&quot;);</span></span><br><span class="line">        <span class="comment">// 高速浏览器响应的数据是什么? 浏览器根据此头决定 数据如何应用</span></span><br><span class="line">        <span class="comment">// 设置MIME类型 json  xml 文件下载  ... ...</span></span><br><span class="line">        <span class="comment">// resp.setHeader(&quot;content-type&quot;, &quot;text/css&quot;);</span></span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html&quot;</span>);<span class="comment">// 专门用于设置Content-Type 响应头</span></span><br><span class="line">        resp.getWriter().write(<span class="string">&quot;&lt;h1&gt;this is tag h1&lt;/h1&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="乱码问题"><a href="#乱码问题" class="headerlink" title="乱码问题"></a>乱码问题</h2><h3 id="1-控制台乱码"><a href="#1-控制台乱码" class="headerlink" title="1 控制台乱码"></a>1 控制台乱码</h3><p>设置Tomcat中 conf下logging.properties中所有的UTF-8编码为GBK即可</p>
<h3 id="2-post请求乱码"><a href="#2-post请求乱码" class="headerlink" title="2 post请求乱码"></a>2 post请求乱码</h3><p>通过HttpServletRequest设置请求编码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">req.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="3-get请求乱码"><a href="#3-get请求乱码" class="headerlink" title="3 get请求乱码"></a>3 get请求乱码</h3><p>需要手动进行编码解码,或者设置tomcat中的server.xml中的URI编码.tomcat9已经解决了该问题</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span>   <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> <span class="attr">URIEncoding</span>=<span class="string">&quot;utf-8&quot;</span>  /&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-响应乱码"><a href="#4-响应乱码" class="headerlink" title="4 响应乱码"></a>4 响应乱码</h3><p>通过HttpServletResponse设置响应编码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//以UTF-8编码处理数据</span></span><br><span class="line">resp.setContentType(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line"><span class="comment">//设置响应头,以便浏览器知道以何种编码解析数据</span></span><br><span class="line">resp.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br></pre></td></tr></table></figure>



<h2 id="4-servlet生命周期"><a href="#4-servlet生命周期" class="headerlink" title="4. servlet生命周期"></a>4. servlet生命周期</h2><h3 id="四个阶段"><a href="#四个阶段" class="headerlink" title="四个阶段"></a>四个阶段</h3><p>Servlet的生命周期是由容器管理的，分别经历四个阶段：</p>
<table>
<thead>
<tr>
<th>阶段</th>
<th>次数</th>
<th>时机</th>
</tr>
</thead>
<tbody><tr>
<td>创建 new</td>
<td>1次</td>
<td>第一次请求</td>
</tr>
<tr>
<td>初始化 init()</td>
<td>1次</td>
<td>实例化之后</td>
</tr>
<tr>
<td>执行服务 service()</td>
<td>多次</td>
<td>每次请求</td>
</tr>
<tr>
<td>销毁 destroy()</td>
<td>1次</td>
<td>停止服务</td>
</tr>
</tbody></table>
<p>当客户端浏览器第一次请求Servlet时，容器会实例化这个Servlet，然后调用一次init方法，并在新的线程中执行service方法处理请求。service方法执行完毕后容器不会销毁这个Servlet而是做缓存处理，当客户端浏览器再次请求这个Servlet时，容器会从缓存中直接找到这个Servlet对象，并再一次在新的线程中执行Service方法。当容器在销毁Servlet之前对调用一次destory方法。</p>
<p><strong>在Servlet中我们一般不要轻易使用成员变量!!!! 可能会造成线程安全问题</strong></p>
<p><strong>如果要使用的话,应该尽量避免对成员变量产生修改</strong></p>
<p><strong>如果要产生修改我们应该注意线程安全问题</strong></p>
<p><strong>如果我们自己添加线程安全编码处理,会严重影响效率</strong></p>
<p><strong>综上所述:原则,能不用成员变量就不用!!!</strong></p>
<p>servlet代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyServlet4</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="comment">// 成员变量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyServlet4</span><span class="params">()</span>   &#123;<span class="comment">// 构造一个Servlet对象的方法</span></span><br><span class="line">        System.out.println(<span class="string">&quot;MyServlet4 Constructor invoked&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException &#123;<span class="comment">// 初始化</span></span><br><span class="line">        System.out.println(<span class="string">&quot;MyServlet4 init invoked&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 执行服务</span></span><br><span class="line">        System.out.println(<span class="string">&quot;MyServlet4 service invoked&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;<span class="comment">// 销毁</span></span><br><span class="line">        System.out.println(<span class="string">&quot;MyServlet4 destory invoked&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>配置：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myServlet4<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.mashibing.servlet.MyServlet4<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>6<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>myServlet4<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/myServlet4.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>​        多次请求servlet并查看控制台输出即可印证上述结论,值得注意的是,如果需要Servlet在服务启动时就实例化并初始化,我们可以在servlet的配置中添加load-on-startup配置启动顺序,配置的数字为启动顺序,应避免冲突且应**&gt;6**</p>
<img src="/2021/07/20/JavaEE/07/20/JavaEE/20210803205411-20220507093631302.png" class title="image-20210803205409578">

<p><strong>Servlet处理请求的过程</strong></p>
<p>​        当浏览器基于get方式请求我们创建Servlet时，我们自定义的Servlet中的doGet方法会被执行。doGet方法能够被执行并处理get请求的原因是，容器在启动时会解析web工程中WEB-INF目录中的web.xml文件，在该文件中我们配置了Servlet与URI的绑定，容器通过对请求的解析可以获取请求资源的URI，然后找到与该URI绑定的Servlet并做实例化处理(注意：只实例化一次，如果在缓存中能够找到这个Servlet就不会再做次实例化处理)。在实例化时会使用Servlet接口类型作为引用类型的定义，并调用一次init方法，由于HttpServlet中重写了该方法所以最终执行的是HttpServlet中init方法(HttpServlet中的Init方法是一个空的方法体)，然后在新的线程中调用service方法。由于在HttpServlet中重写了Service方法所以最终执行的是HttpServlet中的service方法。在service方法中通过request.getMethod()获取到请求方式进行判断如果是Get方式请求就执行doGet方法，如果是POST请求就执行doPost方法。如果是基于GET方式提交的，并且在我们自定义的Servlet中又重写了HttpServlet中的doGet方法，那么最终会根据Java的多态特性转而执行我们自定义的Servlet中的doGet方法。</p>
<img src="/2021/07/20/JavaEE/07/20/JavaEE/20210803205435-20220507093630830.png" class title="image-20210803205435158">

<ul>
<li>老程序员喜欢重写doGet()和doPost()方法 然后挑一个方法里面直接调用另一个方法，因为两个方法很相似。</li>
<li>但是又可以直接重写service，可以同时处理get和post</li>
</ul>
<h2 id="5-ServletContext和ServletConfig"><a href="#5-ServletContext和ServletConfig" class="headerlink" title="5. ServletContext和ServletConfig"></a>5. ServletContext和ServletConfig</h2><h3 id="ServletContext-application"><a href="#ServletContext-application" class="headerlink" title="ServletContext(application)"></a>ServletContext(application)</h3><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><p>ServletContext官方叫Servlet上下文。服务器会为每一个Web应用创建一个ServletContext对象。这个对象全局唯一，而且Web应用中的所有Servlet都共享这个对象。所以叫全局应用程序共享对象</p>
<img src="/2021/07/20/JavaEE/20210804094215-20220507093631574.png" alt="image-20210804094215771" style="zoom:67%;">

<h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><ul>
<li>相对路径转绝对路径</li>
<li>获取容器的附加信息</li>
<li>读取配置信息</li>
<li>全局容器</li>
</ul>
<h4 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h4><ul>
<li><p>获取项目的部署名<br>==context.getContextPath()==</p>
</li>
<li><p>相对路径转绝对路径(文件上传下载时需要注意)</p>
<p>==context.getRealPath(“path”)==</p>
<p>该方法可以将一个相对路径转换为绝对路径，在文件上传与下载时需要用到该方法做路径的转换。</p>
</li>
<li><p>获取容器的附加信息</p>
<p>==servletContext.getServerInfo()==</p>
</li>
<li><p>返回Servlet容器的名称和版本号</p>
<ul>
<li><p>返回Servlet容器所支持Servlet的主版本号</p>
<p>==servletContext.getMajorVersion()==</p>
</li>
<li><p>返回Servlet容器所支持Servlet的副版本号</p>
<p>==servletContext.getMinorVersion()==</p>
</li>
</ul>
</li>
<li><p>获取web.xml文件中的信息</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>key<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>value<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>读取web.xml文件中<context-param>标签中的配置信息</context-param></p>
<p>==servletContext.getInitParameter(“key”)==</p>
</li>
<li><p>读取web.xml文件中所有param-name标签中的值。</p>
<p>==servletContext.getInitParameterNames()==</p>
</li>
</ul>
</li>
<li><p>全局容器</p>
<ul>
<li><p>向全局容器中存放数据。</p>
<p>==servletContext.setAttribute(“key”,ObjectValue)==</p>
</li>
<li><p>从全局容器中获取数据。</p>
<p>==servletContext.getAttribute(“key”)==</p>
</li>
<li><p>根据key删除全局容器中的value。</p>
<p>==servletContext.removeAttribute(“key”)==</p>
</li>
</ul>
</li>
</ul>
<h5 id="测试代码："><a href="#测试代码：" class="headerlink" title="测试代码："></a>测试代码：</h5><p><strong>xml配置</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>username<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>mashibing<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>password<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>servlet1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.msb.testServlet.Servlet1<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>servlet1<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/servlet1.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>servlet</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Servlet1</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//1 通过req获取Servlet对象</span></span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext1</span> <span class="operator">=</span> req.getServletContext();</span><br><span class="line">        <span class="comment">//通过继承的方法获取Servlet对象</span></span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext2</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext();</span><br><span class="line">        <span class="comment">//比较两种获取方法获取的对象</span></span><br><span class="line">        System.out.println(servletContext1==servletContext2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2 获取部署名</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">contextPath</span> <span class="operator">=</span> servletContext1.getContextPath();</span><br><span class="line">        System.out.println(<span class="string">&quot;contextPath&quot;</span>+contextPath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3 将一个相对路径转换为项目的绝对路径</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">fileUpload</span> <span class="operator">=</span> servletContext1.getRealPath(<span class="string">&quot;fileUpload&quot;</span>);</span><br><span class="line">        System.out.println(fileUpload);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4 获取容器的附加信息</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">serverInfo</span> <span class="operator">=</span> servletContext1.getServerInfo();</span><br><span class="line">        System.out.println(serverInfo);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5 获取Servlet容器的名称和版本号</span></span><br><span class="line">        <span class="comment">//主版本号</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">majorVersion</span> <span class="operator">=</span> servletContext1.getMajorVersion();</span><br><span class="line">        <span class="comment">//副版本号</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">minorVersion</span> <span class="operator">=</span> servletContext1.getMinorVersion();</span><br><span class="line">        System.out.println(<span class="string">&quot;majorVersion&quot;</span>+majorVersion);</span><br><span class="line">        System.out.println(<span class="string">&quot;minorVersion&quot;</span>+minorVersion);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//6 读取web.xml文件信息</span></span><br><span class="line">        <span class="comment">//获取配置的全局初始信息</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> servletContext1.getInitParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> servletContext1.getInitParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;username&quot;</span>+username);</span><br><span class="line">        System.out.println(<span class="string">&quot;password&quot;</span>+password);</span><br><span class="line">        <span class="comment">//配置信息名称未知情况下 获取全局初始信息</span></span><br><span class="line">        Enumeration&lt;String&gt; pNames = servletContext1.getInitParameterNames();</span><br><span class="line">        <span class="keyword">while</span> (pNames.hasMoreElements())&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">e</span> <span class="operator">=</span> pNames.nextElement();</span><br><span class="line">            System.out.println(e+<span class="string">&quot;:&quot;</span>+ servletContext1.getInitParameter(e));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//7 向ServletContext对象中增加数据域对象</span></span><br><span class="line">        List&lt;String&gt; data = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        Collections.addAll(data,<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王武&quot;</span>);</span><br><span class="line">        servletContext1.setAttribute(<span class="string">&quot;list&quot;</span>,data);</span><br><span class="line">        servletContext1.setAttribute(<span class="string">&quot;gender&quot;</span>,<span class="string">&quot;boy&quot;</span>);</span><br><span class="line">        <span class="comment">//getAttribute也可以获得初始信息对象</span></span><br><span class="line">        List&lt;String&gt; list = (List&lt;String&gt;) servletContext1.getAttribute(<span class="string">&quot;list&quot;</span>);</span><br><span class="line">        System.out.println(list);</span><br><span class="line">        <span class="type">String</span> <span class="variable">gender</span> <span class="operator">=</span> (String) servletContext1.getAttribute(<span class="string">&quot;gender&quot;</span>);</span><br><span class="line">        System.out.println(gender);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>测试结果</p>
<img src="/2021/07/20/JavaEE/07/20/JavaEE/20210804112525-20220507093631140.png" class title="image-20210804112522391">

<h4 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h4><p>​        当容器启动是会创建ServletContext对象并一直缓存该对象，知道容器关闭后该对象生命周期结束。ServletContext对象的生命周期非常长，所以在使用全局容器时不建议存放业务数据</p>
<h3 id="ServletConfig"><a href="#ServletConfig" class="headerlink" title="ServletConfig"></a>ServletConfig</h3><h4 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h4><p>ServletConfig对象对应web.xml文件中的<servlet>节点。当Tomcat初始化一个Servlet时，会将该Servlet的配置信息，封装到一个ServletConfig对象中。</servlet></p>
<h4 id="操作-1"><a href="#操作-1" class="headerlink" title="操作"></a>操作</h4><p>我们通过Config对象读取servlet节点中的配置信息</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>servletName<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servletClass<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>key<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>value<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>读取web.xml文件中<servlet>标签中<init-param>标签中的配置信息。</init-param></servlet></p>
<p>==servletConfig.getInitParameter(“key”);==</p>
</li>
<li><p>读取web.xml文件中当前<servlet>标签中所有<init-param>标签中的值。</init-param></servlet></p>
<p>==servletConfig.getInitParameterNames();==</p>
</li>
</ul>
<h5 id="测试代码-1"><a href="#测试代码-1" class="headerlink" title="测试代码"></a>测试代码</h5><p> <strong>xml配置</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>servlet3<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.msb.testServlet.Servlet3<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>brand<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>ASUS<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>screen<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>三星<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>servlet4<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.msb.testServlet.Servlet4<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>pinpai<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>联想<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>pingmu<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>京东方<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>servlet3<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/servlet3.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>servlet4<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/servlet4.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>servlet</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Servlet3</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">ServletConfig</span> <span class="variable">servletConfig</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletConfig();</span><br><span class="line">        System.out.println(servletConfig.getInitParameter(<span class="string">&quot;brand&quot;</span>));</span><br><span class="line">        System.out.println(servletConfig.getInitParameter(<span class="string">&quot;screen&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Servlet4</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">ServletConfig</span> <span class="variable">servletConfig</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletConfig();</span><br><span class="line">        System.out.println(servletConfig.getInitParameter(<span class="string">&quot;pinpai&quot;</span>));</span><br><span class="line">        System.out.println(servletConfig.getInitParameter(<span class="string">&quot;pingmu&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="6-URL的匹配规则"><a href="#6-URL的匹配规则" class="headerlink" title="6. URL的匹配规则"></a>6. URL的匹配规则</h2><h3 id="精确匹配"><a href="#精确匹配" class="headerlink" title="精确匹配"></a>精确匹配</h3><p>精确匹配是指<url-pattern>中配置的值必须与url完全精确匹配。</url-pattern></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>demoServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/demo.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="http://localhost:8888/demo/demo.do">http://localhost:8888/demo/demo.do</a> 匹配</p>
<p><a href="http://localhost:8888/demo/suibian/demo.do">http://localhost:8888/demo/suibian/demo.do</a> 不匹配</p>
<h3 id="扩展名匹配"><a href="#扩展名匹配" class="headerlink" title="扩展名匹配"></a>扩展名匹配</h3><p>在<url-pattern>允许使用统配符“<em>”作为匹配规则，“</em>”表示匹配任意字符。在扩展名匹配中只要扩展名相同都会被匹配和路径无关。注意，在使用扩展名匹配时在<url-pattern>中不能使用“/”，否则容器启动就会抛出异常。</url-pattern></url-pattern></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>demoServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="http://localhost:8888/demo/abc.do">http://localhost:8888/demo/abc.do</a> 匹配</p>
<p><a href="http://localhost:8888/demo/suibian/haha.do">http://localhost:8888/demo/suibian/haha.do</a> 匹配</p>
<p><a href="http://localhost:8888/demo/abc">http://localhost:8888/demo/abc</a> 不匹配</p>
<h3 id="路径匹配"><a href="#路径匹配" class="headerlink" title="路径匹配"></a>路径匹配</h3><p>根据请求路径进行匹配，在请求中只要包含该路径都匹配，“*”表示任意路径以及子路径</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>demoServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/suibian/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="http://localhost:8888/demo/suibian/haha.do">http://localhost:8888/demo/suibian/haha.do</a> 匹配</p>
<p><a href="http://localhost:8888/demo/suibian/hehe/haha.do">http://localhost:8888/demo/suibian/hehe/haha.do</a> 匹配</p>
<p><a href="http://localhost:8888/demo/hehe/heihei.do">http://localhost:8888/demo/hehe/heihei.do</a> 不匹配</p>
<h3 id="任意匹配"><a href="#任意匹配" class="headerlink" title="任意匹配"></a>任意匹配</h3><p>匹配“/ 匹配所有但不包括JSP页面</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="http://localhost:8888/demo/suibian.do%E5%8C%B9%E9%85%8D">http://localhost:8888/demo/suibian.do匹配</a></p>
<p><a href="http://localhost:8888/demo/addUser.html%E5%8C%B9%E9%85%8D">http://localhost:8888/demo/addUser.html匹配</a></p>
<p><a href="http://localhost:8888/demo/css/view.css%E5%8C%B9%E9%85%8D">http://localhost:8888/demo/css/view.css匹配</a></p>
<p><a href="http://localhost:8888/demo/addUser.jsp%E4%B8%8D%E5%8C%B9%E9%85%8D">http://localhost:8888/demo/addUser.jsp不匹配</a></p>
<p><a href="http://localhost:8888/demo/user/addUser.jsp%E4%B8%8D%E5%8C%B9%E9%85%8D">http://localhost:8888/demo/user/addUser.jsp不匹配</a></p>
<h3 id="匹配所有"><a href="#匹配所有" class="headerlink" title="匹配所有"></a>匹配所有</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="http://localhost:8888/demo/suibian.do%E5%8C%B9%E9%85%8D">http://localhost:8888/demo/suibian.do匹配</a></p>
<p><a href="http://localhost:8888/demo/addUser.html%E5%8C%B9%E9%85%8D">http://localhost:8888/demo/addUser.html匹配</a></p>
<p><a href="http://localhost:8888/demo/suibian/suibian.do%E5%8C%B9%E9%85%8D">http://localhost:8888/demo/suibian/suibian.do匹配</a></p>
<h3 id="优先顺序"><a href="#优先顺序" class="headerlink" title="优先顺序"></a>优先顺序</h3><p>当一个url与多个Servlet的匹配规则可以匹配时，则按照 “ 精确路径 &gt; 最长路径 &gt;扩展名”这样的优先级匹配到对应的Servlet。</p>
<h4 id="案例分析"><a href="#案例分析" class="headerlink" title="案例分析"></a>案例分析</h4><p>Servlet1映射到 /abc/*</p>
<p>Servlet2映射到 /*</p>
<p>Servlet3映射到 /abc</p>
<p>Servlet4映射到 *.do</p>
<p>当请求URL为“/abc/a.html”，“/abc/*”和“/*”都匹配，Servlet引擎将调用Servlet1。</p>
<p>当请求URL为“/abc”时，“/abc/*”和“/abc”都匹配，Servlet引擎将调用Servlet3。</p>
<p>当请求URL为“/abc/a.do”时，“/abc/<em>”和“</em>.do”都匹配，Servlet引擎将调用Servlet1。</p>
<p>当请求URL为“/a.do”时，“/<em>”和“</em>.do”都匹配，Servlet引擎将调用Servlet2。</p>
<p>当请求URL为“/xxx/yyy/a.do”时，“/<em>”和“</em>.do”都匹配，Servlet引擎将调用Servlet2。</p>
<h3 id="URL映射方式"><a href="#URL映射方式" class="headerlink" title="URL映射方式"></a>URL映射方式</h3><p>在web.xml文件中支持将多个URL映射到一个Servlet中，但是相同的URL不能同时映射到两个Servlet中。</p>
<h4 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>demoServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/suibian/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>demoServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/suibian/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>demoServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>





<h2 id="7-注解开发"><a href="#7-注解开发" class="headerlink" title="7. 注解开发"></a>7. 注解开发</h2><p><strong>基于注解式开发Servlet</strong></p>
<p>​    在Servlet3.0以及之后的版本中支持注解式开发Servlet。对于Servlet的配置不在依赖于web.xml配置文件而是使用@WebServlet将一个继承于javax.servlet.http.HttpServlet的类定义为Servlet组件。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Target(&#123;ElementType.TYPE&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> WebServlet &#123;</span><br><span class="line">    String <span class="title function_">name</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    String[] value() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    String[] urlPatterns() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">loadOnStartup</span><span class="params">()</span> <span class="keyword">default</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    WebInitParam[] initParams() <span class="keyword">default</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">asyncSupported</span><span class="params">()</span> <span class="keyword">default</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    String <span class="title function_">smallIcon</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    String <span class="title function_">largeIcon</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    String <span class="title function_">description</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    String <span class="title function_">displayName</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="相关属性"><a href="#相关属性" class="headerlink" title="相关属性"></a>相关属性</h3><img src="/2021/07/20/JavaEE/07/20/JavaEE/20210804163548-20220507093631188.png" class title="image-20210804163546326">



<h2 id="8-forward-请求转发"><a href="#8-forward-请求转发" class="headerlink" title="8. forward 请求转发"></a>8. forward 请求转发</h2><h3 id="forward处理流程"><a href="#forward处理流程" class="headerlink" title="forward处理流程"></a>forward处理流程</h3><ol>
<li>清空Response存放响应正文数据的缓冲区</li>
<li>如果目标资源为Servlet或JSP，就调用它们的service()方法，把该方法产生的响应结果发送到客户端；如果目标资源文件系统中的静态HTML，就读取文档中的数据把它发送到客户端。</li>
</ol>
<img src="/2021/07/20/JavaEE/07/20/JavaEE/20210804165930-20220507093631487.png" class title="image-20210804165930737">

<ul>
<li>请求转发是一种<strong>服务器的行为</strong>,是对浏览器屏蔽</li>
<li>浏览器的地址栏不会发生变化</li>
<li>请求的参数是可以从源组件传递到目标组件的</li>
<li>请求对象和响应对象没有重新创建,而是传递给了目标组件</li>
<li>请求转发可以帮助我们完成页面的跳转</li>
<li>请求转发可以转发至WEB-INF里</li>
<li>请求转发只能转发给当前项目的内部资源,不能转发至外部资源</li>
<li>常用forward</li>
</ul>
<h3 id="forword处理特点"><a href="#forword处理特点" class="headerlink" title="forword处理特点"></a>forword处理特点</h3><ol>
<li>由于forword()方法先清空用于存放响应正文的缓冲区，因此源Servlet生成的响应结果不会被发送到客户端，只有目标资源生成的响应结果才会被发送到客户端。</li>
<li>如果源Servlet在进行请求转发之前，已经提交了响应结（flushBuffer(),close()方法），那么forward()方法抛出IllegalStateException。为了避免该异常，不应该在源Servlet中提交响应结果。</li>
</ol>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ol>
<li><p>在forward转发模式下,请求应该完全交给目标资源去处理,我们在源组件中,不要作出任何的响应处理</p>
</li>
<li><p>在forward方法调用之后,也不要在使用req和resp对象做其他操作了</p>
</li>
</ol>
<h3 id="测试代码-2"><a href="#测试代码-2" class="headerlink" title="测试代码"></a>测试代码</h3><p>servlet1 请求转发至 servlet2</p>
<p><strong>servlet1</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(urlPatterns = &quot;/servlet1.do&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Servlet1</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;servlet1 service invoked&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">money</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;money&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;money:&quot;</span>+money);</span><br><span class="line">        <span class="comment">// 设置响应类型和编码(include模式下)</span></span><br><span class="line">        <span class="comment">/*  resp.setCharacterEncoding(&quot;UTF-8&quot;);</span></span><br><span class="line"><span class="comment">        resp.setContentType(&quot;text/html;charset=UTF-8&quot;);*/</span></span><br><span class="line">        <span class="comment">// 增加响应内容</span></span><br><span class="line">        <span class="comment">//resp.getWriter().println(&quot;servlet1在转发之前增加的响应内容&quot;);</span></span><br><span class="line">        <span class="comment">// 请求转发给另一个组件</span></span><br><span class="line">        <span class="comment">// 获得一个请求转发器</span></span><br><span class="line">        <span class="comment">//RequestDispatcher requestDispatcher = req.getRequestDispatcher(&quot;servlet2.do&quot;);</span></span><br><span class="line">        <span class="comment">//RequestDispatcher requestDispatcher = req.getRequestDispatcher(&quot;aaa.html&quot;);</span></span><br><span class="line">        <span class="comment">//RequestDispatcher requestDispatcher = req.getRequestDispatcher(&quot;index.jsp&quot;);</span></span><br><span class="line">        <span class="comment">//RequestDispatcher requestDispatcher = req.getRequestDispatcher(&quot;WEB-INF/bbb.html&quot;);</span></span><br><span class="line">        <span class="type">RequestDispatcher</span> <span class="variable">requestDispatcher</span> <span class="operator">=</span> req.getRequestDispatcher(<span class="string">&quot;https://www.baidu.com&quot;</span>);</span><br><span class="line">        <span class="comment">// 由请求转发器作出转发动作</span></span><br><span class="line">        requestDispatcher.forward(req,resp);<span class="comment">// 托管给目标资源(forward多一些)</span></span><br><span class="line">        <span class="comment">//requestDispatcher.include(req,resp);  // 让目标资源完成部分工作</span></span><br><span class="line">        <span class="comment">// 继续增加响应信息 (include模式)</span></span><br><span class="line">        <span class="comment">//resp.getWriter().println(&quot;servlet1在转发之后增加的响应内容&quot;);</span></span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>Servlet2</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(urlPatterns = &quot;/servlet2.do&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Servlet2</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;servlet2 service invoked&quot;</span>);</span><br><span class="line">        <span class="comment">// 接收参数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">money</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;money&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;money:&quot;</span>+money);</span><br><span class="line">        <span class="comment">// 作出响应 (在forWord模式下)</span></span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">writer</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        writer.println(<span class="string">&quot;支付宝到账:&quot;</span>+money+<span class="string">&quot;元&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="include（了解）"><a href="#include（了解）" class="headerlink" title="include（了解）"></a>include（了解）</h3><p>在include转发模式下,设置响应可以在转发之前,也可以在转发之后</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*servlet1在转发之前增加的响应内容*/</span></span><br><span class="line"><span class="comment">// 设置响应类型和编码(include模式下)</span></span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">        <span class="comment">// 增加响应内容</span></span><br><span class="line">        resp.getWriter().println(<span class="string">&quot;servlet1在转发之前增加的响应内容&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获得一个请求转发器</span></span><br><span class="line">        <span class="type">RequestDispatcher</span> <span class="variable">requestDispatcher</span> <span class="operator">=</span> req.getRequestDispatcher(<span class="string">&quot;servlet2.do&quot;</span>);</span><br><span class="line"><span class="comment">// 让目标资源完成部分工作</span></span><br><span class="line">		requestDispatcher.include(req,resp);  </span><br><span class="line"></span><br><span class="line"><span class="comment">/*servlet1在转发之后增加的响应内容*/</span></span><br><span class="line"><span class="comment">// 继续增加响应信息 (include模式)</span></span><br><span class="line">		resp.getWriter().println(<span class="string">&quot;servlet1在转发之后增加的响应内容&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>但是不常用的</p>
<h2 id="9-sendRedirect-响应重定向"><a href="#9-sendRedirect-响应重定向" class="headerlink" title="9. sendRedirect 响应重定向"></a>9. sendRedirect 响应重定向</h2><p>响应重定向是通过HttpServletResponse对象sendRedirect(“路径”)的方式。实现是——服务器通知浏览器,让浏览器去自主请求其他资源的一种方式</p>
<img src="/2021/07/20/JavaEE/07/20/JavaEE/20210804171205-20220507093631361.png" class title="image-20210804171130006">

<h3 id="运作流程："><a href="#运作流程：" class="headerlink" title="运作流程："></a>运作流程：</h3><ol>
<li>用户在浏览器端输入特定URL，请求访问服务器端的某个Servlet。</li>
<li>服务器端的Servlet返回一个状态码为302的响应结果，该响应结果的含义为：让浏览器端再请求访问另一个Web资源，在响应结果中提供了另一个Web资源的URL。另一个Web资源有可能在同一个Web服务器上，也有可能不再同一个Web服务器上。</li>
<li>当浏览器端接收到这种响应结果后，再立即自动请求访问另一个Web资源。</li>
<li>浏览器端接收到另一个Web资源的响应结果。</li>
</ol>
<h3 id="测试代码-3"><a href="#测试代码-3" class="headerlink" title="测试代码:"></a>测试代码:</h3><p><strong>servlet3</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(urlPatterns = &quot;/servlet3.do&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Servlet3</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;servlet3 service invoked&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">money</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;money&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;money:&quot;</span>+money);</span><br><span class="line">        <span class="comment">// 响应重定向</span></span><br><span class="line">        resp.sendRedirect(<span class="string">&quot;servlet4.do?money=&quot;</span>+money);</span><br><span class="line">        <span class="comment">//resp.sendRedirect(&quot;WEB-INF/bbb.html&quot;);</span></span><br><span class="line">        <span class="comment">//resp.sendRedirect(&quot;https://www.baidu.com&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>servlet4</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(urlPatterns = &quot;/servlet4.do&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Servlet4</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;servlet4 service invoked&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">money</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;money&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;money:&quot;</span>+money);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h3><ol>
<li>重定向是服务器给浏览器重新指定请求方向 是一种<strong>浏览器行为</strong> 地址栏会发生变化</li>
<li>重定向时,请求对象和响应对象都会再次产生,请求中的参数是不会携带</li>
<li>重定向也可以帮助我们完成页面跳转</li>
<li>重定向不能帮助我们访问WEB-INF中的资源</li>
<li>重定向可以定向到外部资源</li>
</ol>
<h2 id="10-路径问题"><a href="#10-路径问题" class="headerlink" title="10. 路径问题"></a>10. 路径问题</h2><h3 id="前端路径"><a href="#前端路径" class="headerlink" title="前端路径"></a>前端路径</h3><p>项目结构</p>
<img src="/2021/07/20/JavaEE/20210804210749-20220507093631233.png" alt="image-20210804201746315" style="zoom:67%;">

<p>测试代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    base标签的作用是在相对路径之前自动补充base[href]中的值</span></span><br><span class="line"><span class="comment">    如果base标签不写,那么默认就是当前文件所在的路径</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">&quot;http://127.0.0.1:8080/testServlet4_war_exploded/&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;base href=&quot;http://127.0.0.1:8080/testServlet4_war_exploded/a/a2/&quot;&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">this is page a1</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    相对(基准)路径:以当前文件本身的位置去定位其他文件,相对自己的路径,以当前文件所在的位置为基准位置</span></span><br><span class="line"><span class="comment">    绝对(基准)路径:以一个固定的位置去定位其他文文件,以一个固定的路径作为定位文件的基准位置,和文件本身位置无关</span></span><br><span class="line"><span class="comment">    相对路径,不以/开头,就是相对路径  ..代表向上一层</span></span><br><span class="line"><span class="comment">    绝对路径,以/开头   在页面上 /代表从项目的部署目录开始找  从webapps中开始找</span></span><br><span class="line"><span class="comment">    页面的绝对路径要有项目名,除非我们的项目没有设置项目名</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;a2.html&quot;</span> <span class="attr">TARGET</span>=<span class="string">&quot;_self&quot;</span>&gt;</span>相对路径跳转至A2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;../../b/b2/b1.html&quot;</span> <span class="attr">TARGET</span>=<span class="string">&quot;_self&quot;</span>&gt;</span>相对路径跳转至b1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;a/a2/a2.html&quot;</span> <span class="attr">TARGET</span>=<span class="string">&quot;_self&quot;</span>&gt;</span>base相对路径跳转至A2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;b/b2/b1.html&quot;</span> <span class="attr">TARGET</span>=<span class="string">&quot;_self&quot;</span>&gt;</span>base相对路径跳转至b1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/testServlet4_war_exploded/a/a2/a2.html&quot;</span> <span class="attr">TARGET</span>=<span class="string">&quot;_self&quot;</span>&gt;</span>绝对路径跳转至A2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/testServlet4_war_exploded/b/b2/b1.html&quot;</span> <span class="attr">TARGET</span>=<span class="string">&quot;_self&quot;</span>&gt;</span>绝对路径跳转至b1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ol>
<li><p>以/开头的路径是绝对路径,不以/开头是相对路径</p>
</li>
<li><p>绝对路径/后面要写当前服务的上下文路径名</p>
</li>
<li><p>==../==代表向上一层的路径</p>
</li>
<li><p>==base标签==可以简化相对路径,当使用相对路径时,默认会在相对路径之前补充 base中的内容；如果没有定义base 默认就是当前文件所在的路径</p>
</li>
</ol>
<h2 id="11-会话管理"><a href="#11-会话管理" class="headerlink" title="11. 会话管理"></a>11. 会话管理</h2><h3 id="认识Cookie和Session"><a href="#认识Cookie和Session" class="headerlink" title="认识Cookie和Session"></a>认识Cookie和Session</h3><p>Cookie对象与HttpSession对象的作用是维护客户端浏览器与服务端的会话状态的两个对象。由于HTTP协议是一个无状态的协议，所以服务端并不会记录当前客户端浏览器的访问状态，但是在有些时候我们是需要服务端能够记录客户端浏览器的访问状态的，如获取当前客户端浏览器的访问服务端的次数时就需要会话状态的维持。在Servlet中提供了Cookie对象与HttpSession对象用于维护客户端与服务端的会话状态的维持。二者不同的是Cookie是通过客户端浏览器实现会话的维持，而HttpSession是通过服务端来实现会话状态的维持。</p>
<img src="/2021/07/20/JavaEE/20210805102003-20220507093631748.png" alt="image-20210805101816416" style="zoom: 50%;">

<img src="/2021/07/20/JavaEE/20210805102039-20220507093631952.png" alt="image-20210805102039111" style="zoom: 50%;">

<h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h3><p>Cookie是一种保存少量信息至浏览器的一种技术,第一请求时,服务器可以响应给浏览器一些Cookie信息,第二次请求,浏览器会携带之前的cookie发送给服务器,通过这种机制可以实现在浏览器端保留一些用户信息.为服务端获取用户状态获得依据</p>
<h4 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h4><ul>
<li><p>Cookie使用字符串存储数据</p>
</li>
<li><p>Cookie使用Key与Value结构存储数据</p>
</li>
<li><p>单个Cookie存储数据大小限制在4097个字节</p>
</li>
<li><p>Cookie存储的数据中不支持中文，Servlet4.0中支持</p>
</li>
<li><p>Cookie是与域名绑定所以不支持跨一级域名访问</p>
</li>
<li><p>Cookie对象保存在客户端浏览器内存上或系统磁盘中</p>
</li>
<li><p>Cookie分为持久化Cookie(保存在磁盘上)与状态Cookie(保存在内存上)</p>
</li>
<li><p>浏览器在保存同一域名所返回Cookie的数量是有限的。不同浏览器支持的数量不同，Chrome浏览器为50个</p>
</li>
<li><p>浏览器每次请求时都会把与当前访问的域名相关的Cookie在请求中提交到服务端。</p>
</li>
</ul>
<h4 id="创建对象和响应"><a href="#创建对象和响应" class="headerlink" title="创建对象和响应"></a>创建对象和响应</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Cookie</span> <span class="variable">cookie</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;key&quot;</span>,<span class="string">&quot;value&quot;</span>)</span><br><span class="line"><span class="comment">//通过new关键字创建Cookie对象</span></span><br><span class="line">response.addCookie(cookie)</span><br><span class="line"><span class="comment">//通过HttpServletResponse对象将Cookie写回给客户端浏览器。</span></span><br></pre></td></tr></table></figure>





<h4 id="数据的获取"><a href="#数据的获取" class="headerlink" title="数据的获取"></a>数据的获取</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//通过HttpServletRequest对象获取Cookie，返回Cookie数组。</span></span><br><span class="line">Cookie[] cookies = request.getCookies()</span><br></pre></td></tr></table></figure>





<h4 id="Cookie持久化和状态Cookie"><a href="#Cookie持久化和状态Cookie" class="headerlink" title="Cookie持久化和状态Cookie"></a>Cookie持久化和状态Cookie</h4><ul>
<li>==状态Cookie==：浏览器会缓存Cookie对象。浏览器关闭后Cookie对象销毁。</li>
<li>==持久化Cookie==：浏览器会对Cookie做持久化处理，基于文件形式保存在系统的指定目录中。在Windows10系统中为了安全问题不会显示Cookie中的内容。</li>
</ul>
<p>​       当Cookie对象创建后<strong>默认为状态Cookie</strong>。可以使用Cookie对象下的==cookie.setMaxAge(60)==方法设置失效时间，单位为秒。一旦设置了失效时间，那么该Cookie为持久化Cookie，浏览器会将Cookie对象持久化到磁盘中。当失效时间到达后文件删除。</p>
<h4 id="测试代码-4"><a href="#测试代码-4" class="headerlink" title="测试代码"></a>测试代码</h4><p><strong>通过响应对象 向浏览器响应cookie</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(urlPatterns = &quot;/servlet1.do&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Servlet1</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 通过响应对象,向浏览器响应一些Cookie</span></span><br><span class="line">        Cookie c1=<span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;10&quot;</span>);<span class="comment">// 状态Cookie 重启即清除</span></span><br><span class="line">        Cookie c2=<span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;gender&quot;</span>, <span class="string">&quot;男&quot;</span>);<span class="comment">//持久化Cookie 让浏览器保留1分钟</span></span><br><span class="line">        <span class="comment">//c2.setMaxAge(60);// 秒钟    持久化Cookie 让浏览器保留1分钟</span></span><br><span class="line">        resp.addCookie(c1);</span><br><span class="line">        resp.addCookie(c2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>获取请求中cookie</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(urlPatterns = &quot;/servlet2.do&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Servlet2</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 读取请求中的Cookie</span></span><br><span class="line">        Cookie[] cookies = req.getCookies();</span><br><span class="line">        <span class="comment">//cookies不为null</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">null</span> != cookies)&#123;</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                System.out.println(cookie.getName()+<span class="string">&quot;=&quot;</span>+cookie.getValue());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="案例：通过Cookie判断用户是否访问过当前Servlet"><a href="#案例：通过Cookie判断用户是否访问过当前Servlet" class="headerlink" title="案例：通过Cookie判断用户是否访问过当前Servlet"></a>案例：通过Cookie判断用户是否访问过当前Servlet</h4><p>需求：</p>
<p>​                                                                                                                                                                                      当客户端浏览器第一次访问Servlet时返回“您好，欢迎您第一次访问！”，第二次访问时返回“欢迎您回来！”</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(urlPatterns = &quot;/servlet3.do&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Servlet3</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 如果是第一访问当前Servlet.向浏览器响应一个cookie (&quot;servlet3&quot;,&quot;1&quot;)</span></span><br><span class="line">        <span class="comment">// 如果是多次访问,就再次数上+1</span></span><br><span class="line">        Cookie[] cookies = req.getCookies();</span><br><span class="line">        <span class="type">boolean</span>  <span class="variable">flag</span> <span class="operator">=</span><span class="literal">false</span> ;</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">null</span> !=cookies)&#123;</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">cookieName</span> <span class="operator">=</span> cookie.getName();</span><br><span class="line">                <span class="keyword">if</span>(cookieName.equals(<span class="string">&quot;servlet3&quot;</span>))&#123;</span><br><span class="line">                    <span class="comment">// 创建Cookie次数+1</span></span><br><span class="line">                    <span class="type">Integer</span> <span class="variable">value</span> <span class="operator">=</span> Integer.parseInt(cookie.getValue())+<span class="number">1</span>;</span><br><span class="line">                    Cookie c=<span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;servlet3&quot;</span>, String.valueOf(value));</span><br><span class="line">                    resp.addCookie(c);</span><br><span class="line">                    System.out.println(<span class="string">&quot;欢迎您第&quot;</span>+value+<span class="string">&quot;访问&quot;</span>);</span><br><span class="line">                    flag=<span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;欢迎您第一次访问&quot;</span>);</span><br><span class="line">            Cookie c=<span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;servlet3&quot;</span>, <span class="string">&quot;1&quot;</span>);</span><br><span class="line">            resp.addCookie(c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h3><h3 id="案例-判断用户是否登录"><a href="#案例-判断用户是否登录" class="headerlink" title="案例:判断用户是否登录"></a>案例:判断用户是否登录</h3><h4 id="需求"><a href="#需求" class="headerlink" title="需求:"></a>需求:</h4><p>实现登录一次即可,在一次会话内,可以反复多次访问WEB-INF/ welcome.html,如果没有登录过,跳转到登录页,登录成功后,可以访问</p>
<h4 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构:"></a>项目结构:</h4><img src="/2021/07/20/JavaEE/20210805142941-20220507093631639.png" alt="image-20210805142907533" style="zoom:67%;">

<h4 id="组件介绍："><a href="#组件介绍：" class="headerlink" title="组件介绍："></a>组件介绍：</h4><h5 id="login-html"><a href="#login-html" class="headerlink" title="login.html"></a>login.html</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span> <span class="attr">action</span>=<span class="string">&quot;loginServlet.do&quot;</span>&gt;</span></span><br><span class="line">    用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h5 id="main-html"><a href="#main-html" class="headerlink" title="main.html"></a>main.html</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   this is main page</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h5 id="LoginServlet"><a href="#LoginServlet" class="headerlink" title="LoginServlet"></a>LoginServlet</h5><p>用来校验登录的，登陆成功将用户信息存户HttpSession，否则返回到登录页。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(urlPatterns = &quot;/loginServlet.do&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 获取用户名和密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="comment">// 如果用户名和密码为 msb 1234</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;msb&quot;</span>.equals(username)  &amp;&amp; <span class="string">&quot;1234&quot;</span>.equals(password))&#123;</span><br><span class="line">            <span class="comment">// 将用户信息放在HTTPSession中</span></span><br><span class="line">            <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">User</span>(<span class="literal">null</span>, <span class="literal">null</span>, <span class="string">&quot;msb&quot;</span>, <span class="string">&quot;1234&quot;</span>);</span><br><span class="line">            <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">            session.setAttribute(<span class="string">&quot;user&quot;</span>, user);</span><br><span class="line">            <span class="comment">// 登录成功 跳转至 main.html</span></span><br><span class="line">            resp.sendRedirect(req.getContextPath()+<span class="string">&quot;/mainServlet.do&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 登录失败 回到login.html</span></span><br><span class="line">            resp.sendRedirect(req.getContextPath()+<span class="string">&quot;/login.html&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h5 id="MainServlet"><a href="#MainServlet" class="headerlink" title="MainServlet"></a>MainServlet</h5><p>用来向mian.html中跳转的，同时验证登录的，可以直接跳转，否则回到登录页。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(urlPatterns = &quot;/mainServlet.do&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//跳转至main.html</span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User)session.getAttribute(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">null</span> != user)&#123;</span><br><span class="line">            <span class="comment">// 判断如果登录过 允许跳转  HTTPSession中如果有登陆过的信息</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/WEB-INF/main.html&quot;</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 如果没有登录过 回到登录去登录  HTTPSession中如果有登陆过的信息</span></span><br><span class="line">            resp.sendRedirect(<span class="string">&quot;login.html&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h5 id="User"><a href="#User" class="headerlink" title="User"></a>User</h5><p>存储用户信息的实体类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer uid;</span><br><span class="line">    <span class="keyword">private</span> String realname;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String pasword;</span><br></pre></td></tr></table></figure>





<h1 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h1><h2 id="指令标签"><a href="#指令标签" class="headerlink" title="指令标签"></a>指令标签</h2><p>三种指令标签</p>
<table>
<thead>
<tr>
<th>指令</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>&lt;%@ page %&gt;</td>
<td>定义网页依赖属性，如脚本语言，error页面、缓存需求等</td>
</tr>
<tr>
<td>&lt;%@ include %&gt;</td>
<td>包含其他文件</td>
</tr>
<tr>
<td>&lt;%@ taglib%</td>
<td>引入标签库的定义</td>
</tr>
</tbody></table>
<h3 id="page标签"><a href="#page标签" class="headerlink" title="page标签"></a>page标签</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;%--告知浏览器以什么格式和编码解析 响应的数据--%&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span>  %&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%--设置JSP页面转换的语言--%&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%@ page language=<span class="string">&quot;java&quot;</span>%&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%--导包--%&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;com.msb.entity.User&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%--在转换成java代码时使用的编码 一般不用设置--%&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%@ page pageEncoding=<span class="string">&quot;UTF-8&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%--指定错误页 当页面发生错误时 指定跳转的页面--%&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%@ page errorPage=<span class="string">&quot;error500.JSP&quot;</span> %&gt;</span><br><span class="line">    &lt;%--指定当前页为异常提示页 当前页面可以接收异常对象 --%&gt;</span><br><span class="line"></span><br><span class="line">    &lt;%<span class="meta">@page</span> isErrorPage=<span class="string">&quot;true&quot;</span> %&gt;</span><br></pre></td></tr></table></figure>



<p>errorPage是一种处理错误提示也的功能除了JSP有的错误提示页功能</p>
<p>javaEE中自带其他的错位提示页处理功能，具体配置如下</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>500<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">location</span>&gt;</span>/error500.JSP<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>404<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">location</span>&gt;</span>/error404.JSP<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>当JSP中发生了异常时,如果JSP中配置的错误页和web.xml 中配置的错误页冲突了,JSP page指令的 errorPage优先级更高</p>
<img src="/2021/07/20/JavaEE/20210807110128-20220507093631490.png" alt="image-20210807110126899" style="zoom:67%;">



<h3 id="include标签"><a href="#include标签" class="headerlink" title="include标签"></a>include标签</h3><p>JSP可以通过Include指令来包含其他文件。被包含的文件可以是JSP文件、HTML文件或文本文件。包含的文件就好像是该JSP文件的一部分，会被同时编译执行。除了include指令标签可以实现引入以外，使用jsp:include也可以实现引入</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--静态引入使用的是 include 指令标签</span><br><span class="line"></span><br><span class="line">    被引入的JSP页面不会生成java代码 被引入的网页和当前页生成代码后形成了一个java文件--%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;head.JSP&quot;</span>%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--动态引入 JSP标签中的 include选项</span><br><span class="line"></span><br><span class="line">    被引入的JSP页面会生成独立的java代码 </span><br><span class="line"></span><br><span class="line">    在生成的java代码中 使用JSPRuntimeLibrary.include(request, response, <span class="string">&quot;head.JSP&quot;</span>, out, <span class="literal">false</span>);引入其他页面</span><br><span class="line"></span><br><span class="line">    --%&gt;</span><br><span class="line"></span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;head.JSP&quot;</span>/&gt;</span><br></pre></td></tr></table></figure>

<p>查看转译以后的java源代码文件中的区别</p>
<p>静态引入：@include被引入的网页和当前页生成代码后形成了一个java文件</p>
<p>动态引入：jsp:include被引入的JSP页面会生成独立的java代码</p>
<h3 id="taglib指令标签"><a href="#taglib指令标签" class="headerlink" title="taglib指令标签"></a>taglib指令标签</h3><p>JSP API允许用户自定义标签，一个自定义标签库就是自定义标签的集合。Taglib指令引入一个自定义标签集合的定义，包括库路径、自定义标签。</p>
<p>语法：</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ taglib   uri=<span class="string">&quot;uri&quot;</span> prefix=<span class="string">&quot;prefixOfTag&quot;</span> %&gt;</span><br></pre></td></tr></table></figure>



<h2 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h2><h3 id="九大对象"><a href="#九大对象" class="headerlink" title="九大对象"></a>九大对象</h3><p><strong>四大域对象</strong></p>
<ul>
<li><p>pageContext  page域     当前页面内可用</p>
</li>
<li><p>request       reqeust域  单次请求</p>
</li>
<li><p>session       session域   单次会话</p>
</li>
<li><p>application   application 域项目运行</p>
</li>
</ul>
<p><strong>响应对象</strong></p>
<ul>
<li>response </li>
</ul>
<p><strong>输出流对象</strong></p>
<ul>
<li>out 打印流</li>
</ul>
<p><strong>其他三个对象</strong></p>
<ul>
<li><p>servletConfig:由于JSP本身也是一个Servlet,所以容器也会给我们准备一个ServletConfig</p>
</li>
<li><p>page        就是他this对象 当前JSP对象本身  </p>
</li>
<li><p>exception   异常对象,在错误提示页上使用,当isErrorpage=true 才具有该对象</p>
</li>
</ul>
<h2 id="案例一：在浏览器上访问Emp表-动态地分等级"><a href="#案例一：在浏览器上访问Emp表-动态地分等级" class="headerlink" title="案例一：在浏览器上访问Emp表 动态地分等级"></a>案例一：在浏览器上访问Emp表 动态地分等级</h2><p>EmpDaoImpl.java</p>
<p>实现类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmpDaoImpl</span> <span class="keyword">implements</span> <span class="title class_">EmpDao</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String url=<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/mydb?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Shanghai&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> String username=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> String password=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Emp&gt; <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Emp&gt; list =<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span><span class="literal">null</span>;</span><br><span class="line">        PreparedStatement pstat=<span class="literal">null</span>;</span><br><span class="line">        ResultSet resultSet=<span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            connection = DriverManager.getConnection(url, username, password);</span><br><span class="line">            pstat = connection.prepareStatement(<span class="string">&quot;select * from emp&quot;</span>);</span><br><span class="line">            resultSet = pstat.executeQuery();</span><br><span class="line">            <span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line">                Integer empno=resultSet.getInt(<span class="string">&quot;empno&quot;</span>);</span><br><span class="line">                Integer deptno=resultSet.getInt(<span class="string">&quot;deptno&quot;</span>);</span><br><span class="line">                Integer mgr=resultSet.getInt(<span class="string">&quot;mgr&quot;</span>);</span><br><span class="line">                String ename=resultSet.getString(<span class="string">&quot;ename&quot;</span>);</span><br><span class="line">                String job=resultSet.getString(<span class="string">&quot;job&quot;</span>);</span><br><span class="line">                Double sal=resultSet.getDouble(<span class="string">&quot;sal&quot;</span>);</span><br><span class="line">                Double comm=resultSet.getDouble(<span class="string">&quot;comm&quot;</span>);</span><br><span class="line">                Date hiredate=resultSet.getDate(<span class="string">&quot;hiredate&quot;</span>);</span><br><span class="line">                <span class="type">Emp</span> <span class="variable">emp</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Emp</span>( empno,  ename,  job,  mgr,  hiredate,  sal,  comm,  deptno);</span><br><span class="line">                list.add(emp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span>!=resultSet)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    resultSet.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span>!=pstat)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    pstat.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">null</span>!=connection)&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    connection.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Emp.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">EmpDao</span> &#123;</span><br><span class="line">    List&lt;Emp&gt; <span class="title function_">findAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>EmpServlet</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/empServlet.do&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmpServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="comment">// dao对象</span></span><br><span class="line">    EmpDao empDao=<span class="keyword">new</span> <span class="title class_">EmpDaoImpl</span>();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 获取数据</span></span><br><span class="line">        List&lt;Emp&gt; list = empDao.findAll();</span><br><span class="line">        <span class="comment">// 将数据放入请求域</span></span><br><span class="line">        req.setAttribute(<span class="string">&quot;emps&quot;</span>, list);</span><br><span class="line">        <span class="comment">// 请求转发给JSP</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;showEmp.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>showEmp.jsp</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.List&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;com.msb.pojo.Emp&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        table&#123;</span><br><span class="line">            border: 3px solid blue;</span><br><span class="line">            width: <span class="number">80</span>%;</span><br><span class="line">            margin: 0px auto;</span><br><span class="line">        &#125;</span><br><span class="line">        td,th&#123;</span><br><span class="line">            border: 2px solid green;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;table cellspacing=<span class="string">&quot;0px&quot;</span> cellpadding=<span class="string">&quot;0px&quot;</span>&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;上级编号&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;职务&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;入职日期&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;薪资&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;补助&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;部门号&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;薪资等级&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;%</span><br><span class="line">            List&lt;Emp&gt; emps = (List&lt;Emp&gt;) request.getAttribute(<span class="string">&quot;emps&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (Emp emp : emps) &#123;</span><br><span class="line">        %&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;&lt;%=emp.getEmpno()%&gt;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;%=emp.getEname()%&gt;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;%=emp.getMgr()%&gt;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;%=emp.getJob()%&gt;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;%=emp.getHiredate()%&gt;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;%=emp.getSal()%&gt;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;%=emp.getComm()%&gt;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;%=emp.getDeptno()%&gt;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;%--out.print(<span class="string">&quot;&lt;td&gt;&quot;</span>)--%&gt;</span><br><span class="line">         &lt;%</span><br><span class="line">             <span class="type">Double</span> <span class="variable">sal</span> <span class="operator">=</span> emp.getSal();</span><br><span class="line">             <span class="keyword">if</span>(sal&lt;=<span class="number">500</span>)&#123;</span><br><span class="line">                 out.print(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">             &#125;<span class="keyword">else</span> <span class="keyword">if</span>( sal &lt;=<span class="number">1000</span>)&#123;</span><br><span class="line">                 out.print(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">             &#125;<span class="keyword">else</span> <span class="keyword">if</span>( sal &lt;=<span class="number">1500</span>)&#123;</span><br><span class="line">                 out.print(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">             &#125;<span class="keyword">else</span> <span class="keyword">if</span>( sal &lt;=<span class="number">2000</span>)&#123;</span><br><span class="line">                 out.print(<span class="string">&quot;D&quot;</span>);</span><br><span class="line">             &#125;<span class="keyword">else</span> <span class="keyword">if</span>( sal &lt;=<span class="number">3000</span>)&#123;</span><br><span class="line">                 out.print(<span class="string">&quot;E&quot;</span>);</span><br><span class="line">             &#125;<span class="keyword">else</span> <span class="keyword">if</span>( sal &lt;=<span class="number">4000</span>)&#123;</span><br><span class="line">                 out.print(<span class="string">&quot;F&quot;</span>);</span><br><span class="line">             &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                 out.print(<span class="string">&quot;G&quot;</span>);</span><br><span class="line">             &#125;</span><br><span class="line">         %&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;%</span><br><span class="line">            &#125;</span><br><span class="line">        %&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>



<h2 id="EL表达式"><a href="#EL表达式" class="headerlink" title="EL表达式"></a>EL表达式</h2><p>Expression Languaga</p>
<p>EL表达式中定义了一些可以帮助我们快捷从域对象中取出数据的写法,<strong>基本语法为</strong></p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">$&#123;域标志.数据名.属性名(可选)&#125;</span><br></pre></td></tr></table></figure>

<p><strong>四个域标志关键字分别为</strong></p>
<ul>
<li><p>requestScope         request域</p>
</li>
<li><p>sessionScope          session域</p>
</li>
<li><p>applicationScope   application域</p>
</li>
<li><p>pageScope             page域</p>
</li>
</ul>
<h3 id="EL表达式快捷取出域对象"><a href="#EL表达式快捷取出域对象" class="headerlink" title="EL表达式快捷取出域对象"></a>EL表达式快捷取出域对象</h3><ul>
<li><p>requestScope         request域</p>
</li>
<li><p>sessionScope          session域</p>
</li>
<li><p>applicationScope   application域</p>
</li>
<li><p>pageScope             page域</p>
</li>
</ul>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;com.msb.pojo.User&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;%--向pageContext域中放数据--%&gt;</span><br><span class="line">        &lt;%</span><br><span class="line">        pageContext.setAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;pageContextMessage&quot;</span>);</span><br><span class="line">        pageContext.setAttribute(<span class="string">&quot;userx&quot;</span>, <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1</span>,<span class="string">&quot;大黄&quot;</span>,<span class="string">&quot;abcdefg&quot;</span>));</span><br><span class="line">        %&gt;</span><br><span class="line">        &lt;%--</span><br><span class="line">    从域中取出数据</span><br><span class="line">    El表达式在获取对象属性值得时候,是通过对象的属性的get方法获取的</span><br><span class="line">    保证对象的要获取的属性必须有对应get方法才可以</span><br><span class="line">    EL表达式在使用时是不需要<span class="keyword">import</span>其他类的</span><br><span class="line">    El如果获取的是NULL值,是不展示任何信息的</span><br><span class="line">    --%&gt;</span><br><span class="line">        pageContext域中的数据:&lt;br/&gt;</span><br><span class="line">        msg:$&#123;pageScope.msg&#125;&lt;br/&gt;</span><br><span class="line">        username:$&#123;pageScope.userx.name&#125;&lt;br/&gt;</span><br><span class="line">        &lt;hr/&gt;</span><br><span class="line">        request域中的数据:&lt;br/&gt;</span><br><span class="line">        msg:$&#123;requestScope.msg&#125;&lt;br/&gt;</span><br><span class="line">        username:$&#123;requestScope.user.name&#125;&lt;br/&gt;</span><br><span class="line">        &lt;hr/&gt;</span><br><span class="line">        session域中的数据:&lt;br/&gt;</span><br><span class="line">        msg:$&#123;sessionScope.msg&#125;&lt;br/&gt;</span><br><span class="line">        username:$&#123;sessionScope.users[<span class="number">1</span>].name&#125;&lt;br/&gt;</span><br><span class="line">        &lt;hr/&gt;</span><br><span class="line">        application域中的数据:&lt;br/&gt;</span><br><span class="line">        msg:$&#123;applicationScope.msg&#125;&lt;br/&gt;</span><br><span class="line">        username:$&#123;applicationScope.userMap.a.name&#125;&lt;br/&gt;</span><br><span class="line">        &lt;hr/&gt;</span><br><span class="line">        &lt;%--EL表达式在取出数据的时候是可以省略域标志的</span><br><span class="line">    EL表达式会自动依次到四个域中去找数据</span><br><span class="line">    --%&gt;</span><br><span class="line">        PageContext username:$&#123;userx.name&#125;&lt;br/&gt;</span><br><span class="line">        Request username:$&#123;user.name&#125;&lt;br/&gt;</span><br><span class="line">        Session username:$&#123;users[<span class="number">1</span>].name&#125;&lt;br/&gt;</span><br><span class="line">        Application username:$&#123;userMap.a.name&#125;&lt;br/&gt;</span><br><span class="line">        &lt;hr/&gt;</span><br><span class="line">        &lt;%--</span><br><span class="line">    $&#123;数据的名字&#125;如果省略域标志,取数据的顺序如下</span><br><span class="line">    pageContext</span><br><span class="line">    request</span><br><span class="line">    session</span><br><span class="line">    application</span><br><span class="line">    --%&gt;</span><br><span class="line">        $&#123;msg&#125;</span><br><span class="line">        &lt;hr/&gt;</span><br><span class="line">        &lt;%--</span><br><span class="line">    移除域中的数据</span><br><span class="line">    --%&gt;</span><br><span class="line">        &lt;%</span><br><span class="line">        <span class="comment">//pageContext.removeAttribute(&quot;msg&quot;);// pageContext.removeAttribute()方法会移除四个域中的所有的同名的数据</span></span><br><span class="line">        <span class="comment">//request.removeAttribute(&quot;msg&quot;);</span></span><br><span class="line">        %&gt;</span><br><span class="line">        pagecontextMsg:$&#123;pageScope.msg&#125;&lt;br/&gt;</span><br><span class="line">        requestMsg:$&#123;requestScope.msg&#125;&lt;br/&gt;</span><br><span class="line">        sessionMsg:$&#123;sessionScope.msg&#125;&lt;br/&gt;</span><br><span class="line">        applicationMsg:$&#123;applicationScope.msg&#125;&lt;br/&gt;</span><br><span class="line">        &lt;hr/&gt;</span><br><span class="line">        &lt;%--</span><br><span class="line">    EL表达式获取请求中的参数</span><br><span class="line">    --%&gt;</span><br><span class="line">        username:$&#123;param.username&#125;&lt;br/&gt;</span><br><span class="line">        hobby:$&#123;paramValues.hobby[<span class="number">0</span>]&#125;</span><br><span class="line">        hobby:$&#123;paramValues.hobby[<span class="number">1</span>]&#125;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><ul>
<li><p>EL表达式定义在JSP页面上,在转译之后的java文件中,会被转化成java代码</p>
</li>
<li><p>EL表达式是一种后台技术,服务器上运行,不是在浏览器上运行,不能用于HTML页面</p>
</li>
<li><p>EL表达式底层是通过反射实现的,在获取对象属性值时是通过对象的get方法实现的</p>
</li>
</ul>
<h3 id="EL表达式运算符"><a href="#EL表达式运算符" class="headerlink" title="EL表达式运算符"></a>EL表达式运算符</h3><h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h4><p><strong>算数运算符</strong>: + - * / %</p>
<p><strong>比较运算符:</strong> </p>
<p>==  eq equals</p>
<p>&gt;gt greater then</p>
<p>&lt;     lt   lower then</p>
<p>&gt;=  ge  greater then or equals</p>
<p>&lt;=  le   lower then or equals</p>
<p>!=   ne   not equals</p>
<p><strong>逻辑运算符</strong>: || or    &amp;&amp; and </p>
<p><strong>三目运算符</strong>: ${条件 ?表达式1 : 表达式2}</p>
<p><strong>判空运算符</strong>: empty</p>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.List&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.ArrayList&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%--</span><br><span class="line">+两端如果有字符串,会尝试将字符串转换成数字之后进行加法运算</span><br><span class="line">/如果除以<span class="number">0</span> 结果为Infinity 而不是出现异常</span><br><span class="line">%如果和<span class="number">0</span>取余数,那么会出现异常</span><br><span class="line">--%&gt;</span><br><span class="line">    算数运算符：</span><br><span class="line">    &lt;hr/&gt;</span><br><span class="line">    $&#123;<span class="number">10</span> + <span class="number">10</span>&#125;&lt;br/&gt;</span><br><span class="line">    $&#123;<span class="string">&quot;10&quot;</span> + <span class="number">10</span>&#125;&lt;br/&gt;</span><br><span class="line">    $&#123;<span class="string">&quot;10&quot;</span> + <span class="string">&quot;10&quot;</span>&#125;&lt;br/&gt;</span><br><span class="line">    &lt;%--$&#123;<span class="string">&quot;10a&quot;</span> + <span class="number">10</span>&#125;&lt;br/&gt;--%&gt;</span><br><span class="line">    $&#123;<span class="number">10</span>/<span class="number">0</span>&#125;&lt;br/&gt;</span><br><span class="line">    &lt;%-- $&#123;<span class="number">10</span>%<span class="number">0</span>&#125;&lt;br/&gt;--%&gt;</span><br><span class="line">    关系运算符/比较运算符</span><br><span class="line">    &lt;%--</span><br><span class="line">    比较运算符推荐写成字母形式,不推荐使用 == &gt;=  &lt;=</span><br><span class="line">    --%&gt;</span><br><span class="line">    &lt;hr/&gt;</span><br><span class="line">    $&#123;<span class="number">10</span> == <span class="number">10</span>&#125;&lt;br/&gt;</span><br><span class="line">    $&#123;<span class="number">10</span> eq <span class="number">10</span>&#125;&lt;br/&gt;</span><br><span class="line">    $&#123;<span class="number">10</span> gt <span class="number">8</span>&#125;&lt;br/&gt;</span><br><span class="line">    逻辑运算符</span><br><span class="line">    &lt;hr/&gt;</span><br><span class="line">    $&#123; <span class="literal">true</span> || <span class="literal">false</span>&#125;&lt;br/&gt;</span><br><span class="line">    $&#123; <span class="literal">true</span> or <span class="literal">false</span>&#125;&lt;br/&gt;</span><br><span class="line">    $&#123; <span class="literal">true</span> &amp;&amp; <span class="literal">false</span>&#125;&lt;br/&gt;</span><br><span class="line">    $&#123; <span class="literal">true</span> and <span class="literal">false</span>&#125;&lt;br/&gt;</span><br><span class="line">    条件运算符/三目运算符</span><br><span class="line">    &lt;hr/&gt;</span><br><span class="line">    $&#123;(<span class="number">100</span>-<span class="number">1</span>)%<span class="number">3</span>==<span class="number">0</span>?<span class="number">10</span>+<span class="number">1</span>:<span class="number">10</span>-<span class="number">1</span>&#125;&lt;br/&gt;</span><br><span class="line">    判断空运算符</span><br><span class="line">    &lt;%--empty 为<span class="literal">null</span> 则为<span class="literal">true</span>--%&gt;</span><br><span class="line">    &lt;%  <span class="comment">//向域中放入数据</span></span><br><span class="line">        pageContext.setAttribute(<span class="string">&quot;a&quot;</span>,<span class="literal">null</span>);</span><br><span class="line">        pageContext.setAttribute(<span class="string">&quot;b&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="type">int</span>[] arr =&#123;&#125;;</span><br><span class="line">        pageContext.setAttribute(<span class="string">&quot;arr&quot;</span>,arr);</span><br><span class="line">        <span class="type">List</span> <span class="variable">list</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        pageContext.setAttribute(<span class="string">&quot;list&quot;</span>,list);</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;hr/&gt;</span><br><span class="line">    $&#123;empty a&#125;&lt;br/&gt;</span><br><span class="line">    $&#123;empty b&#125;&lt;br/&gt;&lt;%--字符串长度为<span class="number">0</span> 则认为是空--%&gt;</span><br><span class="line">    $&#123;empty arr&#125;&lt;br/&gt;&lt;%--数组长度为<span class="number">0</span> 认为不是空--%&gt;</span><br><span class="line">    $&#123;empty list&#125;&lt;br/&gt;&lt;%--集合长度为<span class="number">0</span> 认为是空--%&gt;</span><br><span class="line">    $&#123;list.size() eq <span class="number">0</span>&#125;&lt;br/&gt;&lt;%--集合长度为<span class="number">0</span> 认为是空--%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>



<h2 id="案例一优化：使用EL表达式优化查询员工信息的页面处理"><a href="#案例一优化：使用EL表达式优化查询员工信息的页面处理" class="headerlink" title="案例一优化：使用EL表达式优化查询员工信息的页面处理"></a>案例一优化：使用EL表达式优化查询员工信息的页面处理</h2><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.List&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;com.msb.pojo.Emp&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">        &lt;style&gt;</span><br><span class="line">            table&#123;</span><br><span class="line">                border: 3px solid blue;</span><br><span class="line">                width: <span class="number">80</span>%;</span><br><span class="line">                margin: 0px auto;</span><br><span class="line">            &#125;</span><br><span class="line">            td,th&#123;</span><br><span class="line">                border: 2px solid green;</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;/style&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;table cellspacing=<span class="string">&quot;0px&quot;</span> cellpadding=<span class="string">&quot;0px&quot;</span>&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;上级编号&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;职务&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;入职日期&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;薪资&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;补助&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;部门号&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;薪资等级&lt;/th&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;%</span><br><span class="line">            List&lt;Emp&gt; emps = (List&lt;Emp&gt;) request.getAttribute(<span class="string">&quot;emps&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (Emp emp : emps) &#123;</span><br><span class="line">                pageContext.setAttribute(<span class="string">&quot;emp&quot;</span>, emp);<span class="comment">//将员工对象放入PageContext 域</span></span><br><span class="line">                %&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;$&#123;emp.empno&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;emp.ename&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;emp.mgr&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;emp.job&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;emp.hiredate&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;emp.sal&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;emp.comm&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;emp.deptno&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;</span><br><span class="line">                    $&#123;emp.sal le <span class="number">500</span>?<span class="string">&quot;A&quot;</span>:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">                    $&#123;emp.sal gt <span class="number">500</span> and emp.sal le <span class="number">1000</span>?<span class="string">&quot;B&quot;</span>:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">                    $&#123;emp.sal gt <span class="number">1000</span> and emp.sal le <span class="number">1500</span>?<span class="string">&quot;C&quot;</span>:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">                    $&#123;emp.sal gt <span class="number">1500</span> and emp.sal le <span class="number">2000</span>?<span class="string">&quot;D&quot;</span>:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">                    $&#123;emp.sal gt <span class="number">2000</span> and emp.sal le <span class="number">3000</span>?<span class="string">&quot;E&quot;</span>:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">                    $&#123;emp.sal gt <span class="number">3000</span> and emp.sal le <span class="number">4000</span>?<span class="string">&quot;F&quot;</span>:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">                    $&#123;emp.sal gt <span class="number">4000</span>?<span class="string">&quot;G&quot;</span>:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;%</span><br><span class="line">            &#125;</span><br><span class="line">            %&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="JSTL"><a href="#JSTL" class="headerlink" title="JSTL"></a>JSTL</h2><p>JSTL（Java server pages standarded tag library，即JSP标准标签库）是由JCP（Java community Proces）所制定的标准规范，它主要提供给Java Web开发人员一个标准通用的标签库，并由Apache的Jakarta小组来维护。</p>
<p><strong>使用前提</strong></p>
<ol>
<li><p>需要导包 </p>
</li>
<li><p>页面中通过taglib指令引入标签库</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@   taglib uri=<span class="string">&quot;标签库的定位&quot;</span> prefix=<span class="string">&quot;前缀(简称)&quot;</span> %&gt;</span><br></pre></td></tr></table></figure>

<p>uri可以在对应的tld文件中找到</p>
</li>
</ol>
<h3 id="核心标签库"><a href="#核心标签库" class="headerlink" title="核心标签库"></a>核心标签库</h3><p>导入语句为</p>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span>%&gt;</span><br></pre></td></tr></table></figure>

<h4 id="操作对象的标签c-set-out-remove"><a href="#操作对象的标签c-set-out-remove" class="headerlink" title="操作对象的标签c:set/out/remove"></a>操作对象的标签c:set/out/remove</h4><ul>
<li>==&lt;c:set&gt;==         向域对象中放入数据  setAttribute</li>
<li>==&lt;c:out&gt;==        从域对象中取出数据  getAttribute</li>
<li>==&lt;c:remove&gt;== 从域对象中移除数据   removeAttribute</li>
</ul>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">    c:set</span><br><span class="line">        scope 指定放数据的域 可选值 page request session application</span><br><span class="line">        <span class="keyword">var</span>   数据的名称</span><br><span class="line">        value 数据</span><br><span class="line">    --%&gt;</span><br><span class="line">    &lt;c:set scope=<span class="string">&quot;page&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;msg&quot;</span> value=<span class="string">&quot;pageMessage&quot;</span>&gt;&lt;/c:set&gt;</span><br><span class="line">    &lt;c:set scope=<span class="string">&quot;request&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;msg&quot;</span> value=<span class="string">&quot;requestMessage&quot;</span>&gt;&lt;/c:set&gt;</span><br><span class="line">    &lt;c:set scope=<span class="string">&quot;session&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;msg&quot;</span> value=<span class="string">&quot;sessionMessage&quot;</span>&gt;&lt;/c:set&gt;</span><br><span class="line">    &lt;c:set scope=<span class="string">&quot;application&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;msg&quot;</span> value=<span class="string">&quot;applicationMessage&quot;</span>&gt;&lt;/c:set&gt;</span><br><span class="line">    &lt;%--移除指定域中的值--%&gt;</span><br><span class="line">   &lt;%-- &lt;c:remove <span class="keyword">var</span>=<span class="string">&quot;msg&quot;</span> scope=<span class="string">&quot;page&quot;</span>&gt;&lt;/c:remove&gt;</span><br><span class="line">    &lt;c:remove <span class="keyword">var</span>=<span class="string">&quot;msg&quot;</span> scope=<span class="string">&quot;request&quot;</span>&gt;&lt;/c:remove&gt;--%&gt;</span><br><span class="line">    &lt;c:remove <span class="keyword">var</span>=<span class="string">&quot;msg&quot;</span> scope=<span class="string">&quot;session&quot;</span>&gt;&lt;/c:remove&gt;</span><br><span class="line">    &lt;c:remove <span class="keyword">var</span>=<span class="string">&quot;msg&quot;</span> scope=<span class="string">&quot;application&quot;</span>&gt;&lt;/c:remove&gt;</span><br><span class="line">    &lt;%--通过EL表达式取出域中的值--%&gt;</span><br><span class="line">    &lt;hr/&gt;</span><br><span class="line">    $&#123;pageScope.msg&#125;&lt;br/&gt;</span><br><span class="line">    $&#123;requestScope.msg&#125;&lt;br/&gt;</span><br><span class="line">    $&#123;sessionScope.msg&#125;&lt;br/&gt;</span><br><span class="line">    $&#123;applicationScope.msg &#125;&lt;br/&gt;</span><br><span class="line">    &lt;hr/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;%--通过c:out标签获取域中的值--%&gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;$&#123;pageScope.msg&#125;&quot;</span> <span class="keyword">default</span>=<span class="string">&quot;page msg not found&quot;</span>/&gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;$&#123;requestScope.msg&#125;&quot;</span> <span class="keyword">default</span>=<span class="string">&quot;request msg not found&quot;</span>/&gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;$&#123;sessionScope.msg&#125;&quot;</span> <span class="keyword">default</span>=<span class="string">&quot;session msg not found&quot;</span>/&gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;$&#123;applicationScope.msg&#125;&quot;</span> <span class="keyword">default</span>=<span class="string">&quot;application msg not found&quot;</span>/&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="多条件分支标签c-if和c-choose"><a href="#多条件分支标签c-if和c-choose" class="headerlink" title="多条件分支标签c:if和c:choose"></a>多条件分支标签c:if和c:choose</h4><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">    随机生成一个分数  <span class="number">0</span>-<span class="number">100</span></span><br><span class="line">    &gt;=<span class="number">90</span> A</span><br><span class="line">    &gt;=<span class="number">80</span> B</span><br><span class="line">    &gt;=<span class="number">70</span> C</span><br><span class="line">    &gt;=<span class="number">60</span> D</span><br><span class="line">    &lt;<span class="number">60</span>  E</span><br><span class="line">    --%&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(<span class="number">101</span>);</span><br><span class="line">        pageContext.setAttribute(<span class="string">&quot;score&quot;</span>, score);</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;%--</span><br><span class="line">    test  判断条件</span><br><span class="line">    c:<span class="keyword">if</span>可以将test的结果放入指定的域中</span><br><span class="line">    scope 指定存放的域</span><br><span class="line">    <span class="keyword">var</span>   数据名</span><br><span class="line">    --%&gt;</span><br><span class="line">    分数:$&#123;score&#125;&lt;br/&gt; 等级:</span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;score ge 90&#125;&quot;</span> scope=<span class="string">&quot;page&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;f1&quot;</span>&gt;A&lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;score ge 80 and score lt 90&#125;&quot;</span> scope=<span class="string">&quot;page&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;f2&quot;</span>&gt;B&lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;score ge 70 and score lt 80&#125;&quot;</span> scope=<span class="string">&quot;page&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;f3&quot;</span>&gt;C&lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;score ge 60 and score lt 70&#125;&quot;</span> scope=<span class="string">&quot;page&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;f4&quot;</span>&gt;D&lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;score lt 60&#125;&quot;</span> scope=<span class="string">&quot;page&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;f5&quot;</span>&gt;E&lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">    &lt;hr/&gt;</span><br><span class="line">    $&#123;f1&#125;</span><br><span class="line">    $&#123;f2&#125;</span><br><span class="line">    $&#123;f3&#125;</span><br><span class="line">    $&#123;f4&#125;</span><br><span class="line">    $&#123;f5&#125;</span><br><span class="line">    &lt;hr/&gt;</span><br><span class="line">    &lt;%--输出分数是否及格--%&gt;</span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;score ge 60&#125;&quot;</span> scope=<span class="string">&quot;page&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;flag&quot;</span>&gt;及格&lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">    &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;!pageScope.flag&#125;&quot;</span>&gt;不及格&lt;/c:<span class="keyword">if</span>&gt;</span><br><span class="line">    &lt;hr/&gt;</span><br><span class="line">    &lt;c:choose&gt;</span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123;score ge 90&#125;&quot;</span>&gt;A&lt;/c:when&gt;</span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123;score ge 80&#125;&quot;</span>&gt;B&lt;/c:when&gt;</span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123;score ge 70&#125;&quot;</span>&gt;C&lt;/c:when&gt;</span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123;score ge 60&#125;&quot;</span>&gt;D&lt;/c:when&gt;</span><br><span class="line">        &lt;c:otherwise&gt;E&lt;/c:otherwise&gt;</span><br><span class="line">    &lt;/c:choose&gt;</span><br></pre></td></tr></table></figure>

<h4 id="迭代标签c-foreach"><a href="#迭代标签c-foreach" class="headerlink" title="迭代标签c:foreach"></a>迭代标签c:foreach</h4><h5 id="打印乘法表"><a href="#打印乘法表" class="headerlink" title="打印乘法表"></a>打印乘法表</h5><p>c:forEach中的<strong>属性</strong></p>
<ul>
<li>==var==: 迭代变量, 存放在pageContext作用域</li>
<li>==begin==: 迭代起始值</li>
<li>==end==: 迭代结束值</li>
<li>==step==: 迭代变量变化的步长</li>
</ul>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">    <span class="keyword">for</span> ( <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">1</span>;i&lt;=<span class="number">9</span> ;i+=<span class="number">2</span>)&#123;</span><br><span class="line">        pageContext.setAttribute(<span class="string">&quot;i&quot;</span>,i)</span><br><span class="line">    &#125;</span><br><span class="line">c:foreach 每次执时都会向page域中放入一个名为 i 值为当前值这样的一个操作</span><br><span class="line">    --%&gt;</span><br><span class="line">&lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;i&quot;</span> begin=<span class="string">&quot;1&quot;</span> end=<span class="string">&quot;9&quot;</span> step=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">    &lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;j&quot;</span> begin=<span class="string">&quot;1&quot;</span> end=<span class="string">&quot;$&#123;i&#125;&quot;</span> step=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">        $&#123;j&#125; * $&#123;i&#125; = $&#123;i*j&#125; &amp;nbsp;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">    &lt;br/&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure>

<h5 id="遍历对象数组"><a href="#遍历对象数组" class="headerlink" title="遍历对象数组"></a>遍历对象数组</h5><ul>
<li>==items==: 要遍历的集合, 需要使用EL表达式取值</li>
<li>==varStatus==: 迭代变量的状态</li>
<li>==index:== 索引, 从0开始</li>
<li>==count:== 计数, 从1开始</li>
<li>==first==: boolean, 表示是否是第一个</li>
<li>==last==: boolean, 表示是否是最后一个</li>
<li>==current==: 对象, 当前迭代的对象值</li>
</ul>
<figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%--&lt;%<span class="comment">//原来的遍历</span></span><br><span class="line">       List&lt;Emp&gt; emps = (List&lt;Emp&gt;) request.getAttribute(<span class="string">&quot;emps&quot;</span>);</span><br><span class="line">       <span class="keyword">for</span> (Emp emp : emps) &#123;</span><br><span class="line">           pageContext.setAttribute(<span class="string">&quot;emp&quot;</span>, emp);<span class="comment">//将员工对象放入PageContext 域</span></span><br><span class="line">       %&gt;</span><br><span class="line">       c:foreach</span><br><span class="line">       --%&gt;</span><br><span class="line">       &lt;c:forEach items=<span class="string">&quot;$&#123;emps&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;emp&quot;</span> varStatus=<span class="string">&quot;empStatus&quot;</span>&gt;</span><br></pre></td></tr></table></figure>



<h3 id="格式化标签库fmt"><a href="#格式化标签库fmt" class="headerlink" title="格式化标签库fmt"></a>格式化标签库fmt</h3><h4 id="导入标签"><a href="#导入标签" class="headerlink" title="导入标签"></a>导入标签</h4><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;fmt&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/fmt&quot;</span>%&gt;</span><br></pre></td></tr></table></figure>

<h4 id="lt-fmt-formatDate-gt-日期格式标签"><a href="#lt-fmt-formatDate-gt-日期格式标签" class="headerlink" title="&lt;fmt:formatDate&gt;日期格式标签"></a>&lt;fmt:formatDate&gt;日期格式标签</h4><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;td&gt;</span><br><span class="line">    &lt;fmt:formatDate value=<span class="string">&quot;$&#123;emp.hiredate&#125;&quot;</span> pattern=<span class="string">&quot;yyyy年MM月dd日 HH:mm:ss&quot;</span>/&gt;</span><br><span class="line">&lt;/td&gt;</span><br></pre></td></tr></table></figure>

<h4 id="数字格式化标签"><a href="#数字格式化标签" class="headerlink" title="数字格式化标签"></a>数字格式化标签</h4><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;td&gt;</span><br><span class="line">    &lt;%--</span><br><span class="line">    <span class="number">0</span> 代表必须有一位数字,如果对应的位置没有值怎么办?自动补充<span class="number">0</span></span><br><span class="line">    # 代表有一位数字,开头和结尾的所有的<span class="number">0</span>不保留</span><br><span class="line">    --%&gt;</span><br><span class="line">    &amp;yen;&lt;fmt:formatNumber value=<span class="string">&quot;$&#123;emp.sal&#125;&quot;</span> pattern=<span class="string">&quot;###,##0.00&quot;</span>/&gt;</span><br><span class="line">&lt;/td&gt;</span><br></pre></td></tr></table></figure>



<h2 id="showEmp-js页面最终优化"><a href="#showEmp-js页面最终优化" class="headerlink" title="showEmp.js页面最终优化"></a>showEmp.js页面最终优化</h2><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">&quot;fmt&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/fmt&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">        &lt;style&gt;</span><br><span class="line">            table&#123;</span><br><span class="line">                border: 3px solid blue;</span><br><span class="line">                width: <span class="number">80</span>%;</span><br><span class="line">                margin: 0px auto;</span><br><span class="line">            &#125;</span><br><span class="line">            td,th&#123;</span><br><span class="line">                border: 2px solid green;</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;/style&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;table cellspacing=<span class="string">&quot;0px&quot;</span> cellpadding=<span class="string">&quot;0px&quot;</span>&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;th&gt;序号&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;索引&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;isFirst&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;isLast&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;上级编号&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;职务&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;入职日期&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;薪资&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;补助&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;部门号&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;薪资等级&lt;/th&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;%-- &lt;%</span><br><span class="line">    List&lt;Emp&gt; emps = (List&lt;Emp&gt;) request.getAttribute(<span class="string">&quot;emps&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (Emp emp : emps) &#123;</span><br><span class="line">                pageContext.setAttribute(<span class="string">&quot;emp&quot;</span>,emp);<span class="comment">//将员工对象放入PageContext域</span></span><br><span class="line">                %&gt;</span><br><span class="line">            c:foreach</span><br><span class="line">            items 要遍历的数组/List  可以通过EL表达式取出集合之后给改属性赋值</span><br><span class="line">            <span class="keyword">var</span>   中间变量的名称</span><br><span class="line">            varStatus 记录每一个对象状态的设置</span><br><span class="line">            count 个数</span><br><span class="line">            index 索引</span><br><span class="line">            first 如果当前元素是迭代的第一个元素 <span class="literal">true</span> 否则为<span class="literal">false</span></span><br><span class="line">            last  如果当前元素是迭代的最后一个元素 <span class="literal">true</span> 否则为<span class="literal">false</span></span><br><span class="line">            current 当前迭代的元素本身</span><br><span class="line">            --%&gt;</span><br><span class="line">            &lt;c:forEach items=<span class="string">&quot;$&#123;emps&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;emp&quot;</span> varStatus=<span class="string">&quot;empStatus&quot;</span>&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;%--使用EL表达式来取出域对象里的对象属性值--%&gt;</span><br><span class="line">                    &lt;%-- &lt;td&gt;&lt;%=emp.getEmpno()%&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;%=emp.getEname()%&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;%=emp.getMgr()%&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;%=emp.getJob()%&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;%=emp.getHiredate()%&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;%=emp.getSal()%&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;%=emp.getComm()%&gt;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;%=emp.getDeptno()%&gt;&lt;/td&gt;--%&gt;</span><br><span class="line">            &lt;td&gt;$&#123;empStatus.count&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;empStatus.index&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;empStatus.first&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;empStatus.last&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;emp.empno&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;emp.ename&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;empStatus.current.ename&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;emp.mgr&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;emp.job&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;fmt:formatDate value=<span class="string">&quot;$&#123;emp.hiredate&#125;&quot;</span> pattern=<span class="string">&quot;yyyy年MM月dd日 HH:mm:ss&quot;</span>/&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;%--</span><br><span class="line">    <span class="number">0</span> 代表必须有一位数字,如果对应的位置没有值怎么办?自动补充<span class="number">0</span></span><br><span class="line">    # 代表有一位数字,开头和结尾的所有的<span class="number">0</span>不保留</span><br><span class="line">    --%&gt;</span><br><span class="line"></span><br><span class="line">                &amp;yen;&lt;fmt:formatNumber value=<span class="string">&quot;$&#123;emp.sal&#125;&quot;</span> pattern=<span class="string">&quot;###,##0.00&quot;</span>/&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;emp.comm&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;emp.deptno&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;%--out.print(<span class="string">&quot;&lt;td&gt;&quot;</span>)--%&gt;</span><br><span class="line">                &lt;%--&lt;%</span><br><span class="line">    	<span class="type">Double</span> <span class="variable">sal</span> <span class="operator">=</span> emp.getSal();</span><br><span class="line">                <span class="keyword">if</span>(sal&lt;=<span class="number">500</span>)&#123;</span><br><span class="line">                    out.print(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>( sal &lt;=<span class="number">1000</span>)&#123;</span><br><span class="line">                    out.print(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>( sal &lt;=<span class="number">1500</span>)&#123;</span><br><span class="line">                    out.print(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>( sal &lt;=<span class="number">2000</span>)&#123;</span><br><span class="line">                    out.print(<span class="string">&quot;D&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>( sal &lt;=<span class="number">3000</span>)&#123;</span><br><span class="line">                    out.print(<span class="string">&quot;E&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>( sal &lt;=<span class="number">4000</span>)&#123;</span><br><span class="line">                    out.print(<span class="string">&quot;F&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    out.print(<span class="string">&quot;G&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                %&gt;--%&gt;</span><br><span class="line">                &lt;%--使用EL算数表达式来判断等级</span><br><span class="line">    $&#123;emp.sal le <span class="number">500</span>?<span class="string">&quot;A&quot;</span>:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">                $&#123;emp.sal gt <span class="number">500</span> and emp.sal le <span class="number">1000</span>?<span class="string">&quot;B&quot;</span>:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">                $&#123;emp.sal gt <span class="number">1000</span> and emp.sal le <span class="number">1500</span>?<span class="string">&quot;C&quot;</span>:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">                $&#123;emp.sal gt <span class="number">1500</span> and emp.sal le <span class="number">2000</span>?<span class="string">&quot;D&quot;</span>:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">                $&#123;emp.sal gt <span class="number">2000</span> and emp.sal le <span class="number">3000</span>?<span class="string">&quot;E&quot;</span>:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">                $&#123;emp.sal gt <span class="number">3000</span> and emp.sal le <span class="number">4000</span>?<span class="string">&quot;F&quot;</span>:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">                $&#123;emp.sal gt <span class="number">4000</span>?<span class="string">&quot;G&quot;</span>:<span class="string">&quot;&quot;</span>&#125;--%&gt;</span><br><span class="line"></span><br><span class="line">                &lt;%--使用JSTL标签--%&gt;</span><br><span class="line">                &lt;c:choose&gt;</span><br><span class="line">                    &lt;c:when test=<span class="string">&quot;$&#123;emp.sal le 500&#125;&quot;</span>&gt;A&lt;/c:when&gt;</span><br><span class="line">                    &lt;c:when test=<span class="string">&quot;$&#123;emp.sal le 1000&#125;&quot;</span>&gt;B&lt;/c:when&gt;</span><br><span class="line">                    &lt;c:when test=<span class="string">&quot;$&#123;emp.sal le 1500&#125;&quot;</span>&gt;C&lt;/c:when&gt;</span><br><span class="line">                    &lt;c:when test=<span class="string">&quot;$&#123;emp.sal le 2000&#125;&quot;</span>&gt;D&lt;/c:when&gt;</span><br><span class="line">                    &lt;c:when test=<span class="string">&quot;$&#123;emp.sal le 3000&#125;&quot;</span>&gt;E&lt;/c:when&gt;</span><br><span class="line">                    &lt;c:when test=<span class="string">&quot;$&#123;emp.sal le 4000&#125;&quot;</span>&gt;F&lt;/c:when&gt;</span><br><span class="line">                    &lt;c:when test=<span class="string">&quot;$&#123;emp.sal gt 4000&#125;&quot;</span>&gt;G&lt;/c:when&gt;</span><br><span class="line">                &lt;/c:choose&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/c:forEach&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a>Filter</h1><h2 id="案例：通过过滤验证登录"><a href="#案例：通过过滤验证登录" class="headerlink" title="案例：通过过滤验证登录"></a>案例：通过过滤验证登录</h2><p>需求：通过过滤器控制，只有登陆之后可以反复进入welcome.jsp欢迎页，如果没有登录，提示用户进入登录页进行登陆操作。</p>
<img src="/2021/07/20/JavaEE/20210808090141-20220507093631591.png" alt="image-20210808090117141" style="zoom:50%;">

<h6 id="login-jsp"><a href="#login-jsp" class="headerlink" title="login.jsp"></a>login.jsp</h6><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;$Title%sSourceCode%lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;img src=<span class="string">&quot;static/img/logo.png&quot;</span>&gt;</span><br><span class="line">  please login ... ... &lt;br/&gt;</span><br><span class="line">  &lt;form action=<span class="string">&quot;loginController.do&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    用户名:&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;user&quot;</span>&gt; &lt;br/&gt;</span><br><span class="line">    密码:&lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;pwd&quot;</span>&gt;&lt;br/&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h6 id="welcome-jsp"><a href="#welcome-jsp" class="headerlink" title="welcome.jsp"></a>welcome.jsp</h6><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;img src=<span class="string">&quot;static/img/logo.png&quot;</span>&gt;</span><br><span class="line">欢迎$&#123;user.username&#125;登陆!!!</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="aaa-jsp"><a href="#aaa-jsp" class="headerlink" title="aaa.jsp"></a>aaa.jsp</h6><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"><span class="built_in">this</span> is page aaa</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>准备Controller代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(urlPatterns = &quot;/loginController.do&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginController</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 获取用户名和密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;pwd&quot;</span>);</span><br><span class="line">        System.out.println(username);</span><br><span class="line">        System.out.println(password);</span><br><span class="line">        <span class="comment">// 链接数据库校验登录</span></span><br><span class="line">        <span class="comment">// 登录成功,将用户信息放入Session域</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">User</span>(username,password);</span><br><span class="line">        req.getSession().setAttribute(<span class="string">&quot;user&quot;</span>, user);</span><br><span class="line">        <span class="comment">// 跳转到欢迎页</span></span><br><span class="line">        resp.sendRedirect(<span class="string">&quot;welcome.jsp&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>准备登录控制过滤器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebFilter(urlPatterns = &quot;/*&quot;)</span><span class="comment">// 任何资源都要进行过滤,</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Filter1_LoginFilter</span>  <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        HttpServletRequest req=(HttpServletRequest)servletRequest;</span><br><span class="line">        HttpServletResponse resp=(HttpServletResponse) servletResponse;</span><br><span class="line">        <span class="comment">//无论是否登录过,都要放行的资源   登录页  登录校验Controller 和一些静态资源</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">requestURI</span> <span class="operator">=</span> req.getRequestURI();</span><br><span class="line">        System.out.println(requestURI);</span><br><span class="line">        <span class="keyword">if</span>(requestURI.contains(<span class="string">&quot;login.jsp&quot;</span>)|| requestURI.contains(<span class="string">&quot;loginController.do&quot;</span>)|| requestURI.contains(<span class="string">&quot;/static/&quot;</span>))&#123;</span><br><span class="line">            <span class="comment">// 直接放行</span></span><br><span class="line">            filterChain.doFilter(req,resp);</span><br><span class="line">            <span class="comment">// 后续代码不再执行</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 需要登录之后才能访问的资源,如果没登录,重定向到login.jsp上,提示用户进行登录</span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">user</span> <span class="operator">=</span> session.getAttribute(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">null</span> != user)&#123;<span class="comment">// 如果登录过 放行</span></span><br><span class="line">            filterChain.doFilter(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">// 没有登录过,跳转至登录页</span></span><br><span class="line">            resp.sendRedirect(<span class="string">&quot;login.jsp&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="Listener"><a href="#Listener" class="headerlink" title="Listener"></a>Listener</h1><h2 id="案例：记录请求日志"><a href="#案例：记录请求日志" class="headerlink" title="案例：记录请求日志"></a>案例：记录请求日志</h2><h6 id="RequestLoginListener-java"><a href="#RequestLoginListener-java" class="headerlink" title="RequestLoginListener.java"></a>RequestLoginListener.java</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RequestLogListener</span> <span class="keyword">implements</span> <span class="title class_">ServletRequestListener</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> SimpleDateFormat simpleDateFormat=<span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestDestroyed</span><span class="params">(ServletRequestEvent sre)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">requestInitialized</span><span class="params">(ServletRequestEvent sre)</span> &#123;</span><br><span class="line">        <span class="comment">// 获得请求发出的IP</span></span><br><span class="line">        <span class="comment">// 获得请求的URL</span></span><br><span class="line">        <span class="comment">// 获得请求产生的时间</span></span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> (HttpServletRequest)sre.getServletRequest();</span><br><span class="line">        <span class="type">String</span> <span class="variable">remoteHost</span> <span class="operator">=</span> request.getRemoteHost();</span><br><span class="line">        <span class="type">String</span> <span class="variable">requestURL</span> <span class="operator">=</span> request.getRequestURL().toString();</span><br><span class="line">        <span class="type">String</span> <span class="variable">reqquestDate</span> <span class="operator">=</span> simpleDateFormat.format(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="comment">// 准备输出流</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">PrintWriter</span> <span class="variable">pw</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">PrintWriter</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;d:/msb.txt&quot;</span>),<span class="literal">true</span>));</span><br><span class="line">            pw.println(remoteHost+<span class="string">&quot; &quot;</span>+requestURL+<span class="string">&quot; &quot;</span>+reqquestDate );</span><br><span class="line">            pw.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="案例：显示在线人数"><a href="#案例：显示在线人数" class="headerlink" title="案例：显示在线人数"></a>案例：显示在线人数</h2><p><strong>需求</strong>：开启一次会话session 在线人数加一 销毁会话以后在线人数减一</p>
<p>使用count来计数，然后<strong>存在application域中</strong></p>
<h6 id="OnlineNumberListener"><a href="#OnlineNumberListener" class="headerlink" title="OnlineNumberListener:"></a>OnlineNumberListener:</h6><p>获取application域对象，存入数据count，如果一次session开启，++count；一次session关闭，–count</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OnlineNumberListener</span> <span class="keyword">implements</span> <span class="title class_">HttpSessionListener</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sessionCreated</span><span class="params">(HttpSessionEvent se)</span> &#123;</span><br><span class="line">        <span class="comment">//向application域中增加一个数字</span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> se.getSession();</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">application</span> <span class="operator">=</span> session.getServletContext();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">count</span> <span class="operator">=</span> application.getAttribute(<span class="string">&quot;count&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == count) &#123;</span><br><span class="line">            <span class="comment">//第一次放入数据</span></span><br><span class="line">            application.setAttribute(<span class="string">&quot;count&quot;</span>,<span class="number">1</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> (<span class="type">int</span>) count;</span><br><span class="line">            application.setAttribute(<span class="string">&quot;count&quot;</span>, ++c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sessionDestroyed</span><span class="params">(HttpSessionEvent se)</span> &#123;</span><br><span class="line">        <span class="comment">//向application域中减少一个数字</span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> se.getSession();</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">application</span> <span class="operator">=</span> session.getServletContext();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">count</span> <span class="operator">=</span> application.getAttribute(<span class="string">&quot;count&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">count1</span> <span class="operator">=</span> (<span class="type">int</span>) count;</span><br><span class="line">        application.setAttribute(<span class="string">&quot;count&quot;</span>,--count1);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="案例：重启免登录"><a href="#案例：重启免登录" class="headerlink" title="案例：重启免登录"></a>案例：重启免登录</h2><h3 id="Session序列化和反序列化"><a href="#Session序列化和反序列化" class="headerlink" title="Session序列化和反序列化"></a>Session序列化和反序列化</h3><p>1、序列化与反序列</p>
<p>把对象转化为字节序列的过程称为序列化（保存到硬盘，持久化）</p>
<p>把字节序列转化为对象的过程称为反序列化（存放于内存）</p>
<p> 2、序列化的用途</p>
<p>把对象的字节序列永久保存到硬盘上，通常放到一个文件中。</p>
<p>把网络传输的对象通过字节序列化，方便传输本节作业</p>
<p>3、实现步骤</p>
<p>想实现序列化和反序列化需要手动配置</p>
<img src="/2021/07/20/JavaEE/07/20/JavaEE/20210808154352-20220507093631697.png" class title="image-20210808154350410">

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Context</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Manager</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.session.PersistentManager&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Store</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.session.FileStore&quot;</span> <span class="attr">directory</span>=<span class="string">&quot;d:/session&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Manager</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">Context</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>==注意实体类必须实现serializable 接口==</p>
<h3 id="开发过程"><a href="#开发过程" class="headerlink" title="开发过程"></a>开发过程</h3><h4 id="1-准备实体类"><a href="#1-准备实体类" class="headerlink" title="1 准备实体类"></a>1 准备实体类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span>  <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="2-开发登录信息输入页面"><a href="#2-开发登录信息输入页面" class="headerlink" title="2 开发登录信息输入页面"></a>2 开发登录信息输入页面</h4><figure class="highlight jsp"><table><tr><td class="code"><pre><span class="line">&lt;form action=<span class="string">&quot;loginController.do&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">  用户名:&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;user&quot;</span>&gt; &lt;br/&gt;</span><br><span class="line">  密码:&lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;pwd&quot;</span>&gt;&lt;br/&gt;</span><br><span class="line">  &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure>



<h4 id="3开发登录信息验证Servlet"><a href="#3开发登录信息验证Servlet" class="headerlink" title="3开发登录信息验证Servlet"></a>3开发登录信息验证Servlet</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/loginController.do&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginController</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">pwd</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;pwd&quot;</span>);</span><br><span class="line">    <span class="comment">// user</span></span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">User</span>(username,pwd);</span><br><span class="line">    <span class="comment">// session</span></span><br><span class="line">    <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">    session.setAttribute(<span class="string">&quot;user&quot;</span>, user);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="4-开发校验当前是否已经登录的Controller"><a href="#4-开发校验当前是否已经登录的Controller" class="headerlink" title="4 开发校验当前是否已经登录的Controller"></a>4 开发校验当前是否已经登录的Controller</h4><p>loginCheckController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(urlPatterns = &quot;/loginCheckController.do&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginCheckController</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    <span class="comment">// 判断是否登录</span></span><br><span class="line">    <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">    <span class="type">Object</span> <span class="variable">user</span> <span class="operator">=</span> session.getAttribute(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">    <span class="type">Object</span> <span class="variable">listener</span> <span class="operator">=</span> session.getAttribute(<span class="string">&quot;listener&quot;</span>);<span class="comment">// 获得对应的监听器</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span><span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">null</span> != user)&#123;</span><br><span class="line">        message=<span class="string">&quot;您已经登录过&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        message=<span class="string">&quot;您还未登录&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    resp.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">    resp.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">    resp.getWriter().println(message);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>






<h4 id="5-测试"><a href="#5-测试" class="headerlink" title="5  测试"></a>5  测试</h4><p>先登录,然后请求loginCheckController.do 校验是否登录过,然后重启项目,再起请求loginCheckController.do 校验是否登录过,发现重启后,仍然是登录过的</p>
<h4 id="6-监听钝化和活化"><a href="#6-监听钝化和活化" class="headerlink" title="6 监听钝化和活化"></a>6 监听钝化和活化</h4><p><strong>MySessionActivationListener.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MySessionActivationListener</span> <span class="keyword">implements</span> <span class="title class_">HttpSessionActivationListener</span>, Serializable &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sessionWillPassivate</span><span class="params">(HttpSessionEvent se)</span> &#123;</span><br><span class="line">    System.out.println(se.getSession().hashCode()+<span class="string">&quot;即将钝化&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sessionDidActivate</span><span class="params">(HttpSessionEvent se)</span> &#123;</span><br><span class="line">    System.out.println(se.getSession().hashCode()+<span class="string">&quot;已经活化&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




<p><strong>LoginController登录时绑定监听器</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="meta">@WebServlet(&quot;/loginController.do&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginController</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;user&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">pwd</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;pwd&quot;</span>);</span><br><span class="line">        <span class="comment">// user</span></span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">User</span>(username,pwd);</span><br><span class="line">        <span class="comment">// session</span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">        session.setAttribute(<span class="string">&quot;user&quot;</span>, user);</span><br><span class="line">        <span class="comment">// 绑定监听器</span></span><br><span class="line">        session.setAttribute(<span class="string">&quot;listener&quot;</span>, <span class="keyword">new</span> <span class="title class_">MySessionActivationListener</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>重启项目 重复测试即可</p>
<img src="/2021/07/20/JavaEE/07/20/JavaEE/20210808161851-20220507093632140.png" class title="image-20210808161834961">

<img src="/2021/07/20/JavaEE/07/20/JavaEE/20210808161855-20220507093631903.png" class title="image-20210808161823274">



]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>git</title>
    <url>/2021/08/13/git/</url>
    <content><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>Git是一个免费的、开源的分布式版本控制系统，可以快速高效地处理从小型到大型的项目。</p>
<p>版本控制：版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统 。</p>
<h2 id="代码托管中心"><a href="#代码托管中心" class="headerlink" title="代码托管中心"></a>代码托管中心</h2><p>我们已经有了本地库，本地库可以帮我们进行版本控制，为什么还需要代码托管中心呢？<br>它的任务是帮我们维护远程库，下面说一下本地库和远程库的交互方式，也分为两种：</p>
<ol>
<li><p>团队内部协作</p>
<img src="/2021/08/13/git/20210716160327.png" alt="image-20210716160327295" style="zoom: 50%;"></li>
<li><p>跨团队协作</p>
<img src="/2021/08/13/git/20210716160355.png" alt="image-20210716160355825" style="zoom:50%;">

<p><a href="https://github.com/SoniaChan33/SoniaChan33.github.io">https://github.com/SoniaChan33/SoniaChan33.github.io</a></p>
</li>
</ol>
<h2 id="初始化本地仓库"><a href="#初始化本地仓库" class="headerlink" title="初始化本地仓库"></a>初始化本地仓库</h2><ul>
<li><p>创建一个文件夹</p>
<img src="/2021/08/13/git/20210716160820.png" alt="image-20210716160820389" style="zoom: 50%;"></li>
<li><p>打开Git终端：Git Bash Here</p>
</li>
<li><p>查看Git安装版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure></li>
<li><p>清屏</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">clear</span><br></pre></td></tr></table></figure></li>
<li><p>设置签名</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;TeaSea33&quot;</span><br><span class="line">git config --global user.email &quot;TeaSea33@outlook.com&quot;</span><br></pre></td></tr></table></figure></li>
<li><p>本地仓库的初始化操作(目录在本地仓库里)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>

<img src="/2021/08/13/git/20210716162158.png" alt="image-20210716162158453"></li>
<li><p>查看.git下的内容</p>
<img src="/2021/08/13/git/20210716162242.png" alt="image-20210716162242909" style="zoom: 50%;">

<p>注意事项： .git目录下的本地库相关的子目录和子文件不要删除，不要胡乱修改。</p>
</li>
</ul>
<h1 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a>Git常用命令</h1><h2 id="add和commit"><a href="#add和commit" class="headerlink" title="add和commit"></a>add和commit</h2><ul>
<li><p>先创建文件</p>
</li>
<li><p>将文件提交到暂存区</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add Demo2.txt</span><br></pre></td></tr></table></figure></li>
<li><p>将暂存区的内容提交到本地库</p>
<img src="/2021/08/13/git/20210716162745.png" alt="image-20210716162745742" style="zoom:67%;"></li>
<li><p>注意：</p>
<ol>
<li>不放在本地仓库中的文件，git是不进行管理</li>
<li>即使放在本地仓库的文件，git也不管理，必须通过add,commit命令操作才可以将内容提交到本地库。</li>
</ol>
</li>
</ul>
<h2 id="Status"><a href="#Status" class="headerlink" title="Status"></a>Status</h2><p>查看工作区和暂存区的状态</p>
<ul>
<li><p>创建一个文件，然后查看状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>

<img src="/2021/08/13/git/20210716163201.png" alt="image-20210716163201433" style="zoom:67%;"></li>
<li><p>然后将Demo2.txt通过git add命令提交到暂存区</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add &quot;Demo3.txt&quot;</span><br></pre></td></tr></table></figure></li>
<li><p>status查看状态</p>
<img src="/2021/08/13/git/20210716163336.png" alt="image-20210716163335957" style="zoom:67%;"></li>
<li><p>commit提交文件</p>
<img src="/2021/08/13/git/20210716163613.png" alt="image-20210716163613057" style="zoom:67%;"></li>
<li><p>修改文件 并查看状态</p>
<img src="/2021/08/13/git/20210716163744.png" alt="image-20210716163744634" style="zoom:67%;"></li>
<li><p>重新添加至暂存区 并查看状态</p>
<img src="/2021/08/13/git/20210716163903.png" alt="image-20210716163903519" style="zoom:67%;"></li>
<li><p>提交以后查看状态</p>
<img src="/2021/08/13/git/20210716164259.png" alt="image-20210716164259073" style="zoom:67%;">

<img src="/2021/08/13/git/20210716164315.png" alt="image-20210716164315251" style="zoom:67%;"></li>
</ul>
<h2 id="log"><a href="#log" class="headerlink" title="log"></a>log</h2><p>可以查看提交的日志，显示最近到最远的日志</p>
<h3 id="日志展示方式"><a href="#日志展示方式" class="headerlink" title="日志展示方式"></a>日志展示方式</h3><ol>
<li><p>```shell<br>git log </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">   &lt;img src=&quot;git/20210716165040.png&quot; alt=&quot;image-20210716164533294&quot; style=&quot;zoom:67%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">   ---&gt; 分页</span><br><span class="line"></span><br><span class="line">   当历史记录过多的时候使用**空格**翻页，**b**  回到上一页，到尾页显示END,</span><br><span class="line"></span><br><span class="line">   退出：**q**</span><br><span class="line"></span><br><span class="line">2. ```shell</span><br><span class="line">   git log --pretty=oneline</span><br></pre></td></tr></table></figure>

<img src="/2021/08/13/git/20210716165022.png" alt="image-20210716165022038" style="zoom:67%;"></li>
<li><p>```shell<br>git log –oneline</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">   &lt;img src=&quot;git/20210716165148.png&quot; alt=&quot;image-20210716165147993&quot; style=&quot;zoom:67%;&quot; /&gt;</span><br><span class="line"></span><br><span class="line">4. ```shell</span><br><span class="line">   git reflog</span><br></pre></td></tr></table></figure>

<p>多了信息：HEAD@{数字}</p>
<p>数字：指针回到当前这个历史版本需要多少步</p>
<img src="/2021/08/13/git/20210716165501.png" alt="image-20210716165500983" style="zoom:67%;"></li>
</ol>
<h2 id="reset"><a href="#reset" class="headerlink" title="reset"></a>reset</h2><p>前进或者后退历史版本</p>
<ul>
<li>先查看历史log状态</li>
</ul>
<img src="/2021/08/13/git/20210716172535.png" alt="image-20210716172535073" style="zoom:67%;">

<ul>
<li><p>将文件后退到版本1</p>
<img src="/2021/08/13/git/20210716173722.png" alt="image-20210716173722034" style="zoom:67%;"></li>
<li><p>再次查看</p>
<img src="/2021/08/13/git/20210716173804.png" alt="image-20210716173804875" style="zoom:67%;"></li>
</ul>
<h3 id="三个参数-hard-mixed-soft"><a href="#三个参数-hard-mixed-soft" class="headerlink" title="三个参数(hard\mixed\soft)"></a>三个参数(hard\mixed\soft)</h3><p><strong>git reset –[参数] [索引]</strong></p>
<ul>
<li><p>hard</p>
<p>本地库的指针移动的同时，重置暂存区，重置工作区</p>
<img src="/2021/08/13/git/20210716190012.png" alt="image-20210716190011958" style="zoom: 33%;"></li>
<li><p>mixed</p>
<p>本地库的指针移动的同时，重置暂存区，但是工作区不动</p>
<img src="/2021/08/13/git/20210716190039.png" alt="image-20210716190039546" style="zoom:33%;"></li>
<li><p>soft</p>
<p>本地库的指针移动的时候，暂存区，工作区都不动</p>
<img src="/2021/08/13/git/20210716190052.png" alt="image-20210716190052572" style="zoom:33%;"></li>
</ul>
<p><strong>用得最多的就是第一种hard参数</strong></p>
<h3 id="hard"><a href="#hard" class="headerlink" title="hard"></a>hard</h3><h4 id="1-找回本地库删除的文件"><a href="#1-找回本地库删除的文件" class="headerlink" title="1.找回本地库删除的文件"></a>1.找回本地库删除的文件</h4><ul>
<li><p>新建一个Test2.txt文件 并将它add到暂存区中</p>
<img src="/2021/08/13/git/20210716191040.png" alt="image-20210716191040843" style="zoom:67%;"></li>
<li><p>再通过commit提交到本地库</p>
<img src="/2021/08/13/git/20210716191249.png" alt="image-20210716191249904" style="zoom:67%;"></li>
<li><p>删除工作区中的Test2.txt 并将删除操作同步到暂存区</p>
<img src="/2021/08/13/git/20210716191505.png" alt="image-20210716191505941" style="zoom:67%;"></li>
<li><p>将删除操作同步到本地库</p>
<img src="/2021/08/13/git/20210716191516.png" alt="image-20210716191516088" style="zoom:67%;"></li>
<li><p>查看日志</p>
<img src="/2021/08/13/git/20210716191540.png" alt="image-20210716191540549" style="zoom:67%;"></li>
<li><p>找到本地库中删除的文件，实际上就是将历史版本切换到刚才添加文件的那个版本即可</p>
<img src="/2021/08/13/git/20210716191642.png" alt="image-20210716191642335" style="zoom:67%;"></li>
</ul>
<h4 id="2-找回暂存区删除的文件"><a href="#2-找回暂存区删除的文件" class="headerlink" title="2.找回暂存区删除的文件"></a>2.找回暂存区删除的文件</h4><ul>
<li><p>删除工作区数据</p>
<img src="/2021/08/13/git/20210716192257.png" alt="image-20210716192257627" style="zoom:67%;"></li>
<li><p>同步到缓存区</p>
<img src="/2021/08/13/git/20210716192305.png" alt="image-20210716192305650" style="zoom:67%;"></li>
<li><p>查看日志</p>
<img src="/2021/08/13/git/20210716192331.png" alt="image-20210716192331458" style="zoom:67%;"></li>
<li><p>找到当前指针 然后返回到该状态</p>
<img src="/2021/08/13/git/20210716192952.png" alt="image-20210716192952612" style="zoom:67%;">

<img src="/2021/08/13/git/20210716193047.png" alt="image-20210716193047918" style="zoom:67%;"></li>
</ul>
<h2 id="diff"><a href="#diff" class="headerlink" title="diff"></a>diff</h2><ol>
<li><p>比对<strong>工作区</strong>和<strong>暂存区</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git diff [文件名]</span><br></pre></td></tr></table></figure>

<ul>
<li>添加并提交一个内容为aaaa的Test3.txt    </li>
</ul>
<img src="/2021/08/13/git/20210716195249.png" alt="image-20210716195249530" style="zoom:67%;">

<ul>
<li>更改工作区的文件加入bbb，再用dif进行比对，发现不同</li>
</ul>
<img src="/2021/08/13/git/20210716195504.png" alt="image-20210716195504098" style="zoom:67%;">



<ul>
<li>如果修改了多个文件，多个文件的比对命令直接是git diff</li>
</ul>
<img src="/2021/08/13/git/20210716195715.png" alt="image-20210716195715409" style="zoom:67%;"></li>
<li><p>比对<strong>暂存区</strong>和<strong>本地库</strong> ：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git diff [历史版本] [文件]</span><br></pre></td></tr></table></figure>

<ul>
<li><p>文件添加不提交到本地库，此时暂存区就和工作区相同为aaaabbb</p>
</li>
<li><p>查看日志</p>
<img src="/2021/08/13/git/20210716202947.png" alt="image-20210716202947616" style="zoom:67%;">

<p>此刻的本地库还停留在之前第一次修改</p>
</li>
<li><p>比对暂存区和本地库中的HEAD当前指针状态</p>
<img src="/2021/08/13/git/20210716203057.png" alt="image-20210716203056977" style="zoom:67%;">

<p>发现不一样，说明没有提交的时候就是不一样的</p>
</li>
<li><p>HEAD部分可以改成其他历史版本的标号</p>
<img src="/2021/08/13/git/20210716203405.png" alt="image-20210716203405603" style="zoom:67%;"></li>
</ul>
</li>
</ol>
<h1 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h1><p>查看分支</p>
<img src="/2021/08/13/git/20210716205522.png" alt="image-20210716205522520" style="zoom:67%;">

<p>创建新分支</p>
<img src="/2021/08/13/git/20210716205639.png" alt="image-20210716205639017" style="zoom:67%;">

<p>切换分支</p>
<img src="/2021/08/13/git/20210716205742.png" alt="image-20210716205742388" style="zoom: 67%;">

<p>进入branch01分支，增加内容</p>
<img src="/2021/08/13/git/20210716210648.png" alt="image-20210716210648550" style="zoom: 67%;">

<img src="/2021/08/13/git/20210716210051.png" alt="image-20210716210051334" style="zoom:67%;">

<p>再次查看两个分支发现主分支没有改变</p>
<img src="/2021/08/13/git/20210716210157.png" alt="image-20210716210157353" style="zoom:67%;">

<p>查看文件</p>
<img src="/2021/08/13/git/20210716210515.png" alt="image-20210716210515711" style="zoom: 67%;">

<p>将branch01合并到主分支</p>
<img src="/2021/08/13/git/20210716211526.png" alt="image-20210716211526286" style="zoom: 67%;">

<p>因为在同一文件的同一位置修改了文件</p>
<img src="/2021/08/13/git/20210716211737.png" alt="image-20210716211737215" style="zoom:50%;">

<p>解决冲突：</p>
<p>人为决定，留下想要的就可以，然后再添加</p>
<img src="/2021/08/13/git/20210716212101.png" alt="image-20210716212101854" style="zoom:67%;">

<p>提交冲突，不能带文件名</p>
<img src="/2021/08/13/git/20210716212214.png" style="zoom:67%;">

<img src="/2021/08/13/git/20210716212214.png" alt="image-20210716212214847" style="zoom:67%;">





<h1 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h1><p>创建远程库</p>
<p>为远程库取别名</p>
<img src="/2021/08/13/git/20210717114246.png" alt="image-20210717114246916" style="zoom:67%;">

<h3 id="将本地库数据推送到远程库中"><a href="#将本地库数据推送到远程库中" class="headerlink" title="将本地库数据推送到远程库中"></a>将本地库数据推送到远程库中</h3><img src="/2021/08/13/git/20210717114612.png" alt="image-20210717114612323" style="zoom:67%;">

<img src="/2021/08/13/git/20210717114625.png" alt="image-20210717114625397" style="zoom:67%;">

<img src="/2021/08/13/git/20210717114728.png" alt="image-20210717114728691" style="zoom:67%;">

<p>查看远程库</p>
<img src="/2021/08/13/git/20210717114756.png" alt="image-20210717114756656" style="zoom:67%;">





<h1 id="SSH免密操作"><a href="#SSH免密操作" class="headerlink" title="SSH免密操作"></a>SSH免密操作</h1><ol>
<li><p>进入用户的主目录中：</p>
</li>
<li><p>执行命令，生成一个.ssh目录</p>
<img src="/2021/08/13/git/20210717204402.png" alt="image-20210717204402583" style="zoom: 67%;"></li>
<li><p>发现.ssh目录下有两个文件</p>
<img src="/2021/08/13/git/20210717204425.png" alt="image-20210717204425794" style="zoom:67%;"></li>
<li><p>第二个文件里面的密钥复制，去github下新建密钥</p>
</li>
<li><p>密钥生成：</p>
<img src="/2021/08/13/git/20210717144958.png" alt="image-20210717144958526" style="zoom:67%;"></li>
</ol>
<p>免密操作使每次需要push仓库的时候，都不用再输入密码434</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>JS</title>
    <url>/2021/06/16/JS/</url>
    <content><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>JS是运行在浏览器上的一种脚本语言</p>
<span id="more"></span>

<h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><h4 id="1-脚本语言"><a href="#1-脚本语言" class="headerlink" title="1.脚本语言"></a>1.脚本语言</h4><p>脚本语言是一种简单的程序，规模小,不需要编译,运行快,是由一些ASCII字符构成，可以使用任何一种文本编辑器编写。脚本语言是指在web浏览器内有解释器解释执行的编程语言，每次运行程序的时候，解释器会把程序代码翻译成可执行的格式。一些程序语言（如C、C++、Java等）都必须经过编译，将源代码编译成二进制的可执行文件之后才能运行，而脚本语言不需要事先编译，只要有一个与其相适应的解释器就可以执行。</p>
<h4 id="2-基于对象的语言"><a href="#2-基于对象的语言" class="headerlink" title="2.基于对象的语言"></a>2.基于对象的语言</h4><p>面向对象有三大特点（封装，继承，多态）缺一不可。通常”基于对象”是使用对象，但是无法利用现有的对象模板产生新的对象类型，也就是说”基于对象”没有继承的特点。没有了继承的概念也就无从谈论”多态”</p>
<h4 id="3-事件驱动"><a href="#3-事件驱动" class="headerlink" title="3.事件驱动"></a>3.事件驱动</h4><p>在网页中执行了某种操作的动作，被称为”事件”(Event)，比如按下鼠标、移动窗口、选择菜单等都可以视为事件。当事件发生后，可能会引起相应的事件响应。</p>
<h4 id="4-简单性"><a href="#4-简单性" class="headerlink" title="4.简单性"></a>4.简单性</h4><p>变量类型是采用弱类型，并未使用严格的数据类型。var a,b,c;  a=123;  b=”abc”; a=b; </p>
<h4 id="5-安全性"><a href="#5-安全性" class="headerlink" title="5.安全性"></a>5.安全性</h4><p>JavaScript不能访问本地的硬盘，不能将数据存入到服务器上，不能对网络文档进行修改和删除，只能通过浏览器实现信息浏览或动态交互</p>
<h4 id="6-跨平台性"><a href="#6-跨平台性" class="headerlink" title="6.跨平台性"></a>6.跨平台性</h4><p>JavaScript依赖于浏览器本身，与操作平台无关， 只要计算机安装了支持JavaScript的浏览器（装有JavaScript解释器），JavaScript程序就可以正确执行。</p>
<h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><p>各种浏览器支持JavaScript的程度是不一样的，支持和不完全支持JavaScript的 浏览器在浏览同一个带有JavaScript脚本的网页时，效果会有一定的差距，有时甚至会显示不出来。</p>
<h3 id="JS-和-java的区别"><a href="#JS-和-java的区别" class="headerlink" title="JS 和 java的区别"></a>JS 和 java的区别</h3><h4 id="区别1：公司不同，前身不同"><a href="#区别1：公司不同，前身不同" class="headerlink" title="区别1：公司不同，前身不同"></a>区别1：公司不同，前身不同</h4><p>JavaScript是Netscape公司的产品，是为了扩展Netscape Navigator功能而开发的一种可以嵌入Web页面中的基于对象和事件驱动的解释性语言，它的前身是Live Script；Java是SUN公司推出的新一代面向对象的程序设计语言，特别适合于Internet应用程序开发； Java的前身是Oak语言。</p>
<h4 id="区别2：基于对象和面向对象"><a href="#区别2：基于对象和面向对象" class="headerlink" title="区别2：基于对象和面向对象"></a>区别2：基于对象和面向对象</h4><p>JavaScript是脚本语言，是一种基于对象的语言。本身提供了非常丰富的内部对象供设计人员使用，但不支持继承和多态。Java是面向对象的，是一种真正的面向对象的语言，支持封装、继承和多态。</p>
<h4 id="区别3：变量类型强弱不同"><a href="#区别3：变量类型强弱不同" class="headerlink" title="区别3：变量类型强弱不同"></a>区别3：变量类型强弱不同</h4><p>Java采用强类型变量检查，即所有变量在编译之前必须声明为某一指定类型。如: int  x=1234;JavaScript中是弱类型变量。统一采用var声明，可赋各种数据类型值。</p>
<h4 id="区别4-运行的位置不同"><a href="#区别4-运行的位置不同" class="headerlink" title="区别4: 运行的位置不同"></a>区别4: 运行的位置不同</h4><p>Java运行与服务器端的,大型编程语言, JS运行于客户端(浏览器)一种小规模脚本语言</p>
<h4 id="HTML和CSS和JS这之间的关系"><a href="#HTML和CSS和JS这之间的关系" class="headerlink" title="HTML和CSS和JS这之间的关系"></a>HTML和CSS和JS这之间的关系</h4><p>HTML和CSS和JS都是前端的主要技术,三者各有分工.HTML可以用于制作网页的主体结构,CSS用于给网页做美化,JS用于在网页上添加动态效果</p>
<h2 id="引入方式"><a href="#引入方式" class="headerlink" title="引入方式"></a>引入方式</h2><h3 id="1-内嵌式引入"><a href="#1-内嵌式引入" class="headerlink" title="1.内嵌式引入"></a>1.内嵌式引入</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--内嵌式引入方式</span></span><br><span class="line"><span class="comment">1在head标签中，用一堆script标签嵌入JS</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/*定义一个函数（方法）*/</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">/*弹窗提示一点信息*/</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&quot;你好&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我呀 &quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun1()&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>效果</p>
<img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20210719102431728.png" alt="image-20210719102431728" style="zoom: 33%;">

 

<h3 id="2-链接式引入"><a href="#2-链接式引入" class="headerlink" title="2.链接式引入"></a>2.链接式引入</h3><p>将JS代码放入外部JS文件中,通过script标签引入，提高代码复用度，降低了代码维护的难度<br>        1 一个页面可以同时引入多个不同的JS文件<br>        2 script标签一点用于引入外部JS文件，就不能在中间定义内嵌式代码<br>        3 一个页面上可以用多个script标签 位置也不是非得放到head标签中    </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--链接式 引入外部JS文件</span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">		--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/myjs.js&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span>		</span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我呀&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun1()&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-URL网络路径"><a href="#3-URL网络路径" class="headerlink" title="3.URL网络路径"></a>3.URL网络路径</h3><p>略</p>
<h2 id="数据类型和运算符"><a href="#数据类型和运算符" class="headerlink" title="数据类型和运算符"></a>数据类型和运算符</h2><p>JS是弱类型的脚本语言，不明显，所有的变量对象数据类型的声明都是用var</p>
<h3 id="变量的声明和赋值"><a href="#变量的声明和赋值" class="headerlink" title="变量的声明和赋值"></a>变量的声明和赋值</h3><p>变量声明时不用确定具体的数据类型，在变量赋值时，确定变量的具体数据类型。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> i;</span><br><span class="line">i = <span class="number">10</span>;</span><br></pre></td></tr></table></figure>

<h3 id="1-数据类型"><a href="#1-数据类型" class="headerlink" title="1. 数据类型"></a>1. 数据类型</h3><ol>
<li><p>数值型：</p>
<p>number<strong>整数和浮点数</strong>统称为数值。例如85或3.1415926等。</p>
</li>
<li><p>字符串型：</p>
<p>String由0个,1个或多个字符组成的序列。在JavaScript中，用<strong>双引号或单引号</strong>括起来表示，如”您好”、’学习JavaScript’ 等。</p>
</li>
<li><p>逻辑（布尔）型：</p>
<p>boolean用<strong>true或false</strong>来表示。</p>
</li>
<li><p>空（null）值：</p>
<p>表示没有值，用于定义空的或不存在的引用。要注意，空值不等同于空字符串””或0。</p>
</li>
<li><p>未定义（undefined）值：</p>
<p>它也是一个保留字。表示变量虽然已经声明，但却没有赋值。</p>
</li>
<li><p>除了以上五种基本的数据类型之外，JavaScript还支持复合数据类型Object，复合数据类型包括<strong>对象和数组</strong>两种。 </p>
</li>
</ol>
<p>JS中的变量可以反复声明，后声明的变量会覆盖原来的变量</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> i = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> i = <span class="number">20</span>;</span><br><span class="line"><span class="title function_">alert</span>(i)</span><br></pre></td></tr></table></figure>

<p>typeof 查看变量类型</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> i = <span class="number">20</span>;</span><br><span class="line"><span class="title function_">alert</span>(<span class="keyword">typeof</span> i);</span><br></pre></td></tr></table></figure>

<p>当给一个变量赋值为null时，变量的类型就是object</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> i ;<span class="comment">/*默认为null*/</span></span><br><span class="line"><span class="keyword">var</span> i = <span class="literal">null</span></span><br><span class="line"><span class="title function_">alert</span>(<span class="keyword">typeof</span> i);<span class="comment">/*Object*/</span></span><br></pre></td></tr></table></figure>

<p>JS标识符的命名规则与java保持一致即可，不要用$，避免与JQuery冲突</p>
<h3 id="2-运算符"><a href="#2-运算符" class="headerlink" title="2.运算符"></a>2.运算符</h3><div align="center" style="zoom:67%;">
    <img src="C:/Users/Dell/AppData/Roaming/Typora/typora-user-images/image-20210719162049253.png">
</div>


<h4 id="和"><a href="#和" class="headerlink" title="/ 和 %"></a>/ 和 %</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">* 能除尽,则默认结果就是一个整数,不能除尽,结果默认就是浮点数</span></span><br><span class="line"><span class="comment">* 除零不会出现异常,而是出现 Infinity</span></span><br><span class="line"><span class="comment">* 和0取余数,出现NaN   not a number 不是一个数字</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">10</span>/<span class="number">3</span>);</span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">10</span>/<span class="number">0</span>);</span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">10</span>%<span class="number">3</span>);</span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">10</span>%<span class="number">0</span>);</span><br></pre></td></tr></table></figure>

<p>JS取余数运算对于浮点数仍然有效,如果和0取余数,结果是NaN(not a number)</p>
<h4 id><a href="#" class="headerlink" title="+"></a>+</h4><p>同时也是连接运算符,看两端的变量类型,如果都是number那么就是算数中的加法 如果有字符串,那么就是连接符号,如果是布尔类型和number相加,那么会将true转化为1 将false 转化为0</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* +号中 如果一段是字符串,就变成了文字拼接</span></span><br><span class="line"><span class="comment">* 数字和 boolean类型相加  true会转变成1  false会转变成0  再做数学运算</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">    <span class="keyword">var</span> i=<span class="number">1</span>;</span><br><span class="line">    <span class="title function_">alert</span>(i+<span class="number">1</span>);</span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">1</span>+<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">1</span>+<span class="literal">true</span>);</span><br></pre></td></tr></table></figure>

<h4 id="等值符"><a href="#等值符" class="headerlink" title="== (等值符)"></a>== (等值符)</h4><p>先比较类型,如果类型一致,再比较内容,如果类型不一致,会强制转换为number再比较内容</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* == 等值符</span></span><br><span class="line"><span class="comment">* 先比较类型,如果类型一致,则比较值是否相同</span></span><br><span class="line"><span class="comment">* 如果类型不一致,会将数据尝试转换number 再比较内容</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">    <span class="keyword">var</span> a =<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> b=<span class="string">&quot;1&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> c=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">var</span> d=<span class="string">&quot;true&quot;</span>;</span><br><span class="line">    <span class="title function_">alert</span>(a==b)<span class="comment">// t</span></span><br><span class="line">    <span class="title function_">alert</span>(a==c)<span class="comment">// t</span></span><br><span class="line">    <span class="title function_">alert</span>(a==d)<span class="comment">// f</span></span><br><span class="line">    <span class="title function_">alert</span>(b==c)<span class="comment">// t</span></span><br><span class="line">    <span class="title function_">alert</span>(b==d)<span class="comment">// f</span></span><br><span class="line">    <span class="title function_">alert</span>(c==d)<span class="comment">// f</span></span><br></pre></td></tr></table></figure>

<h4 id="等同符"><a href="#等同符" class="headerlink" title="===( 等同符)"></a>===( 等同符)</h4><p>数据类型不同 直接返回false如果类型相同 才会比较内容</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* === 等同符</span></span><br><span class="line"><span class="comment">* 如果数据类型不同,直接返回false  如果类型相同,才会继续比较内容</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line">    <span class="keyword">var</span> a =<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> b=<span class="string">&quot;1&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> c=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">var</span> d=<span class="string">&quot;true&quot;</span>;</span><br><span class="line">    <span class="title function_">alert</span>(a===b)<span class="comment">//f</span></span><br><span class="line">    <span class="title function_">alert</span>(a===c)<span class="comment">//f</span></span><br><span class="line">    <span class="title function_">alert</span>(a===d)<span class="comment">//f</span></span><br><span class="line">    <span class="title function_">alert</span>(b===c)<span class="comment">//f</span></span><br><span class="line">    <span class="title function_">alert</span>(b===d)<span class="comment">//f</span></span><br><span class="line">    <span class="title function_">alert</span>(c===d)<span class="comment">//f</span></span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;asdf&quot;</span>===<span class="string">&quot;asdf&quot;</span>)<span class="comment">//t</span></span><br></pre></td></tr></table></figure>

<h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><h3 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">                <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                        <span class="comment">/*</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">                         * 定义变量表示月份</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">                         * 根据月份输出该月的季节和应季活动</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">                         * */</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                        <span class="keyword">var</span> i=<span class="number">10</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                        <span class="keyword">if</span>(i ==<span class="number">12</span> || i ==<span class="number">1</span> || i==<span class="number">2</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="title function_">alert</span>(<span class="string">&quot;大约在冬季: 冬天吃火锅&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i &gt;= <span class="number">3</span> &amp;&amp; i&lt;=<span class="number">5</span> )&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="title function_">alert</span>(<span class="string">&quot;春天来了: 春天吃青菜&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i &gt;= <span class="number">6</span> &amp;&amp; i &lt;= <span class="number">8</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="title function_">alert</span>(<span class="string">&quot;夏天到了: 吃烧烤喝啤酒&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i &gt;= <span class="number">9</span> &amp;&amp; i &lt;=<span class="number">11</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="title function_">alert</span>(<span class="string">&quot;秋天到了: 贴秋膘&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                        &#125;<span class="keyword">else</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="title function_">alert</span>(<span class="string">&quot;月份有误&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                        <span class="keyword">switch</span>(i)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="keyword">case</span> <span class="number">3</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="keyword">case</span> <span class="number">4</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="keyword">case</span> <span class="number">5</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                        <span class="title function_">alert</span>(<span class="string">&quot;春眠不觉晓&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                        <span class="keyword">break</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="keyword">case</span> <span class="number">6</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="keyword">case</span> <span class="number">7</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="keyword">case</span> <span class="number">8</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                        <span class="title function_">alert</span>(<span class="string">&quot;夏天蚊子咬&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                        <span class="keyword">break</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="keyword">case</span> <span class="number">9</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="keyword">case</span> <span class="number">10</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="keyword">case</span> <span class="number">11</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                        <span class="title function_">alert</span>(<span class="string">&quot;秋天一身包&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                        <span class="keyword">break</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="keyword">case</span> <span class="number">1</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="keyword">case</span> <span class="number">2</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="keyword">case</span> <span class="number">12</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                        <span class="title function_">alert</span>(<span class="string">&quot;冬天蚊子死翘翘&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                        <span class="keyword">break</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                <span class="attr">default</span>:</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                                        <span class="title function_">alert</span>(<span class="string">&quot;月份有误&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> i=<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">while</span>(i&lt;=<span class="number">10</span>)&#123;</span><br><span class="line">              <span class="title function_">alert</span>(i)</span><br><span class="line">              i++;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">/*</span></span><br><span class="line"><span class="comment">       * 考试,直到分数过线为止</span></span><br><span class="line"><span class="comment">       * 求1-10整数和 1+10*(10/2) */</span></span><br><span class="line">      <span class="keyword">var</span> sum=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">var</span> j=<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">do</span>&#123;</span><br><span class="line">              sum+=j;</span><br><span class="line">              j++;</span><br><span class="line">      &#125;<span class="keyword">while</span>(j&lt;=<span class="number">10</span>);</span><br><span class="line">      <span class="title function_">alert</span>(sum)</span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> sum2=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">var</span> z=<span class="number">1</span>;z&lt;=<span class="number">10</span>;z++)&#123;</span><br><span class="line">              sum2+=z;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="title function_">alert</span>(sum2)</span><br></pre></td></tr></table></figure>

<p>九九乘法表</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">          <span class="variable language_">document</span>.<span class="title function_">write</span>(j+<span class="string">&quot;*&quot;</span>+i+<span class="string">&quot;=&quot;</span>+i*j+<span class="string">&quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;br/&gt;&quot;</span>)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<p>效果</p>
<img src="/2021/06/16/JS/20210719173226.png" alt="image-20210719173226037" style="zoom:50%;">

<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>​        类似于java中的方法,JS中也可以定义一些函数,java中的方法签名包含访问修饰符,返回值类型,方法名,参数列表,异常列表,但是JS中定义函数的语法相对简单很多,主要以function作为函数关键字,具备函数名和参数列表,但是没有访问修饰符也没有返回值类型关键字和异常列表。</p>
<h3 id="三种语法"><a href="#三种语法" class="headerlink" title="三种语法"></a>三种语法</h3><ol>
<li><p>function 函数名(参数列表){js代码}</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span><br><span class="line">       <span class="title function_">alert</span>(<span class="string">&quot;你好&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>var 函数名=function(参数列表){JS代码}</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fun2=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">       <span class="title function_">alert</span>(<span class="string">&quot;你很好&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>var 函数名=new Function(‘js代码’)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fun3=<span class="keyword">new</span> <span class="title class_">Function</span>(<span class="string">&#x27;alert(&quot;你非常好&quot;);&#x27;</span>);</span><br></pre></td></tr></table></figure></li>
</ol>
<p>调用方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 调用方法</span></span><br><span class="line"><span class="title function_">fun1</span>();</span><br><span class="line"><span class="title function_">fun2</span>();</span><br><span class="line"><span class="title function_">fun3</span>();</span><br></pre></td></tr></table></figure>



<h3 id="函数参数和返回值"><a href="#函数参数和返回值" class="headerlink" title="函数参数和返回值"></a>函数参数和返回值</h3><p>1.传入的实参可以和形参个数不同</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params">a,b,c</span>)&#123;</span><br><span class="line">				<span class="title function_">alert</span>(<span class="string">&quot;a:&quot;</span>+a)</span><br><span class="line">				<span class="title function_">alert</span>(<span class="string">&quot;b:&quot;</span>+b)</span><br><span class="line">				<span class="title function_">alert</span>(<span class="string">&quot;c:&quot;</span>+c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fun1</span>(<span class="number">10</span>,<span class="string">&quot;hello js&quot;</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="comment">// 少传参数 OK</span></span><br><span class="line"><span class="title function_">fun1</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"><span class="comment">// 多传参数 OK 多出来的参数相当于没传</span></span><br><span class="line"><span class="title function_">fun1</span>(<span class="number">10</span>,<span class="string">&quot;hello js&quot;</span>,<span class="literal">false</span>,<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">		&lt;/script&gt;</span><br><span class="line">	&lt;/head&gt;</span><br><span class="line">	<span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>2.函数如果有返回值，直接return即可</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">                <span class="keyword">var</span> c=a*b;</span><br><span class="line">                <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> x =<span class="title function_">fun2</span>(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line"><span class="title function_">alert</span>(x)</span><br></pre></td></tr></table></figure>

<p>3.可以将方法作为参数传进去</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 方法本身作为参数(了解)</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">funa</span>(<span class="params"> i ,j</span>)&#123;</span><br><span class="line">		<span class="keyword">return</span> i+j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">funb</span>(<span class="params">a</span>)&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="title function_">a</span>(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> sum =<span class="title function_">funb</span>(funa)</span><br><span class="line"><span class="title function_">alert</span>(sum)</span><br></pre></td></tr></table></figure>



<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="1-创建数组"><a href="#1-创建数组" class="headerlink" title="1. 创建数组"></a>1. 创建数组</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*第一种——创建空数组*/</span></span><br><span class="line">			<span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line">			arr[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">			<span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br><span class="line"><span class="comment">/*第二种——创建定长数组*/</span></span><br><span class="line">			<span class="keyword">var</span> arr2= <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">5</span>);</span><br><span class="line">			arr2[<span class="number">0</span>]=<span class="string">&quot;x&quot;</span>;</span><br><span class="line">			arr2[<span class="number">4</span>]=<span class="literal">true</span>;</span><br><span class="line">			<span class="variable language_">console</span>.<span class="title function_">log</span>(arr2);</span><br><span class="line"><span class="comment">/*第三种——创建时直接指定元素值*/</span></span><br><span class="line">			<span class="keyword">var</span> arr3=<span class="keyword">new</span> <span class="title class_">Array</span>(<span class="string">&#x27;aaa&#x27;</span>,<span class="number">10</span>,<span class="number">20.3</span>,<span class="literal">true</span>);</span><br><span class="line">			<span class="variable language_">console</span>.<span class="title function_">log</span>(arr3)</span><br><span class="line"><span class="comment">/*第四种——相当于第三种语法的简写*/</span></span><br><span class="line">			<span class="keyword">var</span> arr3=[<span class="string">&#x27;aaa&#x27;</span>,<span class="number">10</span>,<span class="number">20.3</span>,<span class="literal">true</span>];</span><br><span class="line">			<span class="variable language_">console</span>.<span class="title function_">log</span>(arr3)</span><br></pre></td></tr></table></figure>

<h3 id="2-数组元素和长度"><a href="#2-数组元素和长度" class="headerlink" title="2. 数组元素和长度"></a>2. 数组元素和长度</h3><ul>
<li>可以通过修改length属性来改变数组长度</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr=[<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>];</span><br><span class="line">arr.<span class="property">length</span>=<span class="number">5</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr)</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/06/16/JS/20210719202759.png" class title="image-20210719202759057">

<ul>
<li>可以通过索引改变数组长度</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">arr[<span class="number">9</span>]=<span class="number">99</span>;	</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr);</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/06/16/JS/20210719203014.png" class title="image-20210719203014658">

<h3 id="3-数组遍历"><a href="#3-数组遍历" class="headerlink" title="3. 数组遍历"></a>3. 数组遍历</h3><ul>
<li>普通for循环</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.<span class="property">length</span>;i++)&#123;</span><br><span class="line">                                <span class="variable language_">console</span>.<span class="title function_">log</span>(arr[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>foreach循环遍历数组</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* JS 中foreach写法为  for( var i in 数组)</span></span><br><span class="line"><span class="comment">* i 不是元素  是索引</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> arr)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(arr[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-数组常用方法"><a href="#4-数组常用方法" class="headerlink" title="4.数组常用方法"></a>4.数组常用方法</h3><ul>
<li><p>查询元素索引</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">  </span><br></pre></td></tr></table></figure></li>
<li><p>concat()</p>
<p>合并两个数组</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr2 = [<span class="number">3</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">7</span>];</span><br><span class="line"><span class="keyword">var</span> arr3 = [<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>];</span><br><span class="line"><span class="keyword">var</span> arr4 = arr2.<span class="title function_">concat</span>(arr3);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr4);</span><br></pre></td></tr></table></figure>



<img src="/2021/06/16/JS/20210720090920.png" alt="image-20210720090919483" style="zoom:50%;">

<p>合并三个数组</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr5 = [<span class="number">3</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">7</span>];</span><br><span class="line"><span class="keyword">var</span> arr6 = [<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>];</span><br><span class="line"><span class="keyword">var</span> arr7 = [<span class="number">4</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>];</span><br><span class="line"><span class="keyword">var</span> arr8 = arr5.<span class="title function_">concat</span>(arr6,arr7);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr8);</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210720091128.png" alt="image-20210720091128798" style="zoom:50%;"></li>
<li><p>join():合并字符串</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fruits=[<span class="string">&#x27;Banana&#x27;</span>,<span class="string">&#x27;Orange&#x27;</span>,<span class="string">&#x27;Apple&#x27;</span>,<span class="string">&#x27;Mango&#x27;</span>]</span><br><span class="line"><span class="keyword">var</span> fs = fruits.<span class="title function_">join</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fs);</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/06/16/JS/20210720091607.png" class title="image-20210720091607132"></li>
<li><p>pop():移除最后一个元素</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fruit = fruits.<span class="title function_">pop</span>();</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210720091849.png" alt="image-20210720091849872" style="zoom:50%;"></li>
<li><p>push():想结尾增加元素</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">fruits.<span class="title function_">push</span>(<span class="string">&quot;Grape&quot;</span>);</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210720092116.png" alt="image-20210720092116089" style="zoom:50%;"></li>
<li><p>reverse():反转数组</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">fruits.<span class="title function_">reverse</span>();</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210720092352.png" alt="image-20210720092352074" style="zoom:50%;"></li>
<li><p>shift():删除数组第一个元素</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> ss = fruits.<span class="title function_">shift</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fruits);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ss);</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210720092610.png" alt="image-20210720092610092" style="zoom:50%;"></li>
<li><p>unshift():向第一个位置添加元素</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">fruits.<span class="title function_">unshift</span>(<span class="string">&quot;火龙果&quot;</span>);</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210720092807.png" style="zoom:50%;"></li>
<li><p>slice():截取子数组</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> citrus =fruits.<span class="title function_">slice</span>(<span class="number">1</span>,<span class="number">3</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(citrus)</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210720093003.png" alt="image-20210720093003811" style="zoom:50%;"></li>
<li><p>splice()</p>
<p>删除数组中的某些元素 （传入索引和删除元素的个数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> num=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>];</span><br><span class="line">num.<span class="title function_">splice</span>(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210720093244.png" alt="image-20210720093244580" style="zoom:50%;">

<p>如果第二个参数为0，则变为在指定索引位置增加元素</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">num.<span class="title function_">splice</span>(<span class="number">2</span>,<span class="number">0</span>,<span class="number">100</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210720094411.png" alt="image-20210720094411730" style="zoom:50%;"></li>
<li><p>sort(): 排序</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//按照字母升序排列</span></span><br><span class="line"><span class="keyword">var</span> fruits = [<span class="string">&quot;Banana&quot;</span>, <span class="string">&quot;Orange&quot;</span>, <span class="string">&quot;Apple&quot;</span>, <span class="string">&quot;Mango&quot;</span>];</span><br><span class="line">fruits.<span class="title function_">sort</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fruits)</span><br><span class="line"><span class="comment">//数字的排序：</span></span><br><span class="line"><span class="keyword">var</span> numbers=[<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>];</span><br><span class="line"><span class="comment">//a-b 升序 b-a 降序</span></span><br><span class="line">numbers.<span class="title function_">sort</span>(<span class="keyword">function</span>(<span class="params">a,b</span>)&#123;<span class="keyword">return</span> b-a&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(numbers)</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="JS对象"><a href="#JS对象" class="headerlink" title="JS对象"></a>JS对象</h2><p>JavaS0cript 中的所有事物都是对象：字符串、数值、数组、函数…   此外，JavaScript 允许自定义对象</p>
<p>JS基于对象的脚本语言 ,有类和对象,但是没有封装,继承,多态,Java script 中有一些浏览器直接识别并使用的对象,常见的对象有Array（前面的数组也是一个对象）,String对象,Math对象,Number对象,Date对象等等. </p>
<h3 id="常用对象"><a href="#常用对象" class="headerlink" title="常用对象"></a>常用对象</h3><h4 id="String"><a href="#String" class="headerlink" title="String"></a>String</h4><h5 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h5><table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.runoob.com/jsref/jsref-constructor-string.html">constructor</a></td>
<td>对创建该对象的函数的引用</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-length-string.html">length</a></td>
<td>字符串的长度</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-prototype-string.html">prototype</a></td>
<td>允许您向对象添加属性和方法</td>
</tr>
</tbody></table>
<h5 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h5><table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.runoob.com/jsref/jsref-charat.html">charAt()</a></td>
<td>返回在指定位置的字符。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-charcodeat.html">charCodeAt()</a></td>
<td>返回在指定的位置的字符的 Unicode 编码。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-concat-string.html">concat()</a></td>
<td>连接两个或更多字符串，并返回新的字符串。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-fromcharcode.html">fromCharCode()</a></td>
<td>将 Unicode 编码转为字符。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-indexof.html">indexOf()</a></td>
<td>返回某个指定的字符串值在字符串中首次出现的位置。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-string-includes.html">includes()</a></td>
<td>查找字符串中是否包含指定的子字符串。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-lastindexof.html">lastIndexOf()</a></td>
<td>从后向前搜索字符串，并从起始位置（0）开始计算返回字符串最后出现的位置。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-match.html">match()</a></td>
<td>查找找到一个或多个正则表达式的匹配。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-repeat.html"> repeat()</a></td>
<td>复制字符串指定次数，并将它们连接在一起返回。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-replace.html">replace()</a></td>
<td>在字符串中查找匹配的子串，并替换与正则表达式匹配的子串。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-replaceall.html">replaceAll()</a></td>
<td>在字符串中查找匹配的子串，并替换与正则表达式匹配的所有子串。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-search.html">search()</a></td>
<td>查找与正则表达式相匹配的值。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-slice-string.html">slice()</a></td>
<td>提取字符串的片断，并在新的字符串中返回被提取的部分。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-split.html">split()</a></td>
<td>把字符串分割为字符串数组。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-startswith.html">startsWith()</a></td>
<td>查看字符串是否以指定的子字符串开头。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-substr.html">substr()</a></td>
<td>从起始索引号提取字符串中指定数目的字符。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-substring.html">substring()</a></td>
<td>提取字符串中两个指定的索引号之间的字符。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-tolowercase.html">toLowerCase()</a></td>
<td>把字符串转换为小写。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-touppercase.html">toUpperCase()</a></td>
<td>把字符串转换为大写。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-trim.html">trim()</a></td>
<td>去除字符串两边的空白</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-tolocalelowercase.html"> toLocaleLowerCase()</a></td>
<td>根据本地主机的语言环境把字符串转换为小写。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-tolocaleuppercase.html"> toLocaleUpperCase()</a></td>
<td>根据本地主机的语言环境把字符串转换为大写。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-valueof-string.html">valueOf()</a></td>
<td>返回某个字符串对象的原始值。</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/jsref-tostring.html"> toString()</a></td>
<td>返回一个字符串。</td>
</tr>
</tbody></table>
<ul>
<li><p>charAt()根据索引获取字符</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str =<span class="string">&quot;hello js&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> c =str.<span class="title function_">charAt</span>(<span class="number">6</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(c);</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/06/16/JS/20210724163037.png" class title="image-20210724163032497"></li>
<li><p>concat()：拼接字符串</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">&quot;hi&quot;</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="string">&quot;good&quot;</span></span><br><span class="line"><span class="keyword">var</span> c = <span class="string">&quot;China&quot;</span></span><br><span class="line"><span class="keyword">var</span> d = c.<span class="title function_">concat</span>(a,b)</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/06/16/JS/20210724163150.png" class title="image-20210724163146111"></li>
<li><p>repeat():重复</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> e = <span class="string">&#x27;absf&#x27;</span></span><br><span class="line"><span class="keyword">var</span> f = e.<span class="title function_">repeat</span>(<span class="number">3</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(f)</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/06/16/JS/20210724163235.png" class title="image-20210724163232328"></li>
<li><p>substr() substring():截取字符串</p>
<ul>
<li>从m开始截取n个字符</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> g = <span class="string">&quot;hello&quot;</span></span><br><span class="line"><span class="keyword">var</span> h = g.<span class="title function_">substr</span>(<span class="number">1</span>,<span class="number">5</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(h)</span><br></pre></td></tr></table></figure>

<ul>
<li>从m开始从n结束:包头不包尾</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> i = g.<span class="title function_">substring</span>(<span class="number">1</span>,<span class="number">7</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210724165033.png" alt="image-20210724164332270" style="zoom: 67%;"></li>
<li><p>length 属性：获取长度</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(g.<span class="property">length</span>)</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210724165806.png" style="zoom: 67%;"></li>
<li><p>可以将字符串内容解析成JS代码并运行</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> testStr=<span class="string">&quot;var x=10&quot;</span></span><br><span class="line"><span class="built_in">eval</span>(testStr)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(x)</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210724171327.png" alt="image-20210724171304740" style="zoom:67%;"></li>
</ul>
<h4 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h4><h5 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h5><table>
<thead>
<tr>
<th align="center">属性</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-constructor-number.html">constructor</a></td>
<td align="center">返回对创建此对象的 Number 函数的引用。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-max-value.html">MAX_VALUE</a></td>
<td align="center">可表示的最大的数。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-min-value.html">MIN_VALUE</a></td>
<td align="center">可表示的最小的数。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-negative-infinity.html">NEGATIVE_INFINITY</a></td>
<td align="center">负无穷大，溢出时返回该值。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-number-nan.html">NaN</a></td>
<td align="center">非数字值。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-positive-infinity.html">POSITIVE_INFINITY</a></td>
<td align="center">正无穷大，溢出时返回该值。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-prototype-num.html">prototype</a></td>
<td align="center">允许您可以向对象添加属性和方法。</td>
</tr>
</tbody></table>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="property">MAX_VALUE</span>)<span class="comment">//最大值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="property">MIN_VALUE</span>)<span class="comment">//最小值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="property">MAX_SAFE_INTEGER</span>)<span class="comment">//负无穷</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="property">MIN_SAFE_INTEGER</span>)</span><br></pre></td></tr></table></figure>



<h5 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h5><table>
<thead>
<tr>
<th align="center">方法</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-isfinite-number.html"> isFinite </a></td>
<td align="center">检测指定参数是否为无穷大。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-toexponential.html">toExponential(x)</a></td>
<td align="center">把对象的值转换为指数计数法。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-tofixed.html">toFixed(x)</a></td>
<td align="center">把数字转换为字符串，结果的小数点后有指定位数的数字。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-toprecision.html">toPrecision(x)</a></td>
<td align="center">把数字格式化为指定的长度。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-tostring-number.html">toString()</a></td>
<td align="center">把数字转换为字符串，使用指定的基数。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-valueof-number.html">valueOf()</a></td>
<td align="center">返回一个 Number 对象的基本数字值。</td>
</tr>
</tbody></table>
<ul>
<li><p>parseFloat():将字符串转换成浮点数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="built_in">parseFloat</span>(<span class="string">&quot;10.123&quot;</span>)+<span class="number">20</span>);</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/Users\Dell\AppData\Roaming\Typora\typora-user-images\image-20210724174135538.png" alt="image-20210724174135538" style="zoom:67%;"></li>
<li><p>parseInt():将字符串转换成整型数字</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="built_in">parseInt</span>(<span class="string">&quot;30&quot;</span>)+<span class="number">20</span>);</span><br></pre></td></tr></table></figure></li>
<li><p>相关判断方法：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> i = <span class="number">10</span>%<span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> j = <span class="number">10</span>/<span class="number">0</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(j)</span><br><span class="line"><span class="comment">// is not a number 是不是NAN</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="title function_">isNAN</span>(i))<span class="comment">//true</span></span><br><span class="line"><span class="comment">//isFinite()：判断数字是不是无限</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="built_in">isFinite</span>(j))<span class="comment">//false</span></span><br><span class="line"><span class="comment">//isSafeInteger()：判断数字是不是一个安全的范围的方法</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="title function_">isSafeInteger</span>(<span class="title class_">Number</span>.<span class="property">MAX_VALUE</span>))<span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="title function_">isSafeInteger</span>(<span class="title class_">Number</span>.<span class="property">MAX_SAFE_INTEGER</span>))<span class="comment">//false</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h4><p>其他详情 <a href="https://www.runoob.com/jsref/jsref-obj-math.html">https://www.runoob.com/jsref/jsref-obj-math.html</a></p>
<ul>
<li><p>常用方法和属性</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="number">3.64</span>))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="number">3.14</span>))<span class="comment">// 向上取整</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">ceil</span>(<span class="number">3.01</span>))<span class="comment">// 向下取整</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5.6</span>))<span class="comment">//最大值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5.6</span>))<span class="comment">//最小值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>())<span class="comment">//随机数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">sqrt</span>(<span class="number">16</span>))<span class="comment">//开平方</span></span><br><span class="line"><span class="comment">// 属性PI</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="property">PI</span>)</span><br></pre></td></tr></table></figure></li>
<li><p>生成给定范围内的随机数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> start =<span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> end =<span class="number">16</span>;</span><br><span class="line"><span class="keyword">var</span> result =<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*(end-start+<span class="number">1</span>)+start);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h4><p>Date对象用于处理日期和时间</p>
<ul>
<li>创建Date对象的四种方法</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="title class_">Date</span>(milliseconds);</span><br><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="title class_">Date</span>(dateString);</span><br><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="title class_">Date</span>(year, month, day, hours, minutes, seconds, milliseconds);</span><br></pre></td></tr></table></figure>

<h5 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a>属性</h5><table>
<thead>
<tr>
<th align="center">属性</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-constructor-date.html">constructor</a></td>
<td align="center">返回对创建此对象的 Date 函数的引用。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-prototype-date.html">prototype</a></td>
<td align="center">使您有能力向对象添加属性和方法。</td>
</tr>
</tbody></table>
<h5 id="方法-2"><a href="#方法-2" class="headerlink" title="方法"></a>方法</h5><table>
<thead>
<tr>
<th align="center">方法</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-getdate.html">getDate()</a></td>
<td align="center">从 Date 对象返回一个月中的某一天 (1 ~ 31)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-getday.html">getDay()</a></td>
<td align="center">从 Date 对象返回一周中的某一天 (0 ~ 6)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-getfullyear.html">getFullYear()</a></td>
<td align="center">从 Date 对象以四位数字返回年份。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-gethours.html">getHours()</a></td>
<td align="center">返回 Date 对象的小时 (0 ~ 23)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-getmilliseconds.html">getMilliseconds()</a></td>
<td align="center">返回 Date 对象的毫秒(0 ~ 999)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-getminutes.html">getMinutes()</a></td>
<td align="center">返回 Date 对象的分钟 (0 ~ 59)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-getmonth.html">getMonth()</a></td>
<td align="center">从 Date 对象返回月份 (0 ~ 11)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-getseconds.html">getSeconds()</a></td>
<td align="center">返回 Date 对象的秒数 (0 ~ 59)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-gettime.html">getTime()</a></td>
<td align="center">返回 1970 年 1 月 1 日至今的毫秒数。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-gettimezoneoffset.html">getTimezoneOffset()</a></td>
<td align="center">返回本地时间与格林威治标准时间 (GMT) 的分钟差。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-getutcdate.html">getUTCDate()</a></td>
<td align="center">根据世界时从 Date 对象返回月中的一天 (1 ~ 31)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-getutcday.html">getUTCDay()</a></td>
<td align="center">根据世界时从 Date 对象返回周中的一天 (0 ~ 6)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-getutcfullyear.html">getUTCFullYear()</a></td>
<td align="center">根据世界时从 Date 对象返回四位数的年份。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-getutchours.html">getUTCHours()</a></td>
<td align="center">根据世界时返回 Date 对象的小时 (0 ~ 23)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-getutcmilliseconds.html">getUTCMilliseconds()</a></td>
<td align="center">根据世界时返回 Date 对象的毫秒(0 ~ 999)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-getutcminutes.html">getUTCMinutes()</a></td>
<td align="center">根据世界时返回 Date 对象的分钟 (0 ~ 59)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-getutcmonth.html">getUTCMonth()</a></td>
<td align="center">根据世界时从 Date 对象返回月份 (0 ~ 11)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-getutcseconds.html">getUTCSeconds()</a></td>
<td align="center">根据世界时返回 Date 对象的秒钟 (0 ~ 59)。</td>
</tr>
<tr>
<td align="center">getYear()</td>
<td align="center">已废弃。 请使用 getFullYear() 方法代替。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-parse.html">parse()</a></td>
<td align="center">返回1970年1月1日午夜到指定日期（字符串）的毫秒数。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-setdate.html">setDate()</a></td>
<td align="center">设置 Date 对象中月的某一天 (1 ~ 31)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-setfullyear.html">setFullYear()</a></td>
<td align="center">设置 Date 对象中的年份（四位数字）。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-sethours.html">setHours()</a></td>
<td align="center">设置 Date 对象中的小时 (0 ~ 23)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-setmilliseconds.html">setMilliseconds()</a></td>
<td align="center">设置 Date 对象中的毫秒 (0 ~ 999)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-setminutes.html">setMinutes()</a></td>
<td align="center">设置 Date 对象中的分钟 (0 ~ 59)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-setmonth.html">setMonth()</a></td>
<td align="center">设置 Date 对象中月份 (0 ~ 11)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-setseconds.html">setSeconds()</a></td>
<td align="center">设置 Date 对象中的秒钟 (0 ~ 59)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-settime.html">setTime()</a></td>
<td align="center">setTime() 方法以毫秒设置 Date 对象。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-setutcdate.html">setUTCDate()</a></td>
<td align="center">根据世界时设置 Date 对象中月份的一天 (1 ~ 31)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-setutcfullyear.html">setUTCFullYear()</a></td>
<td align="center">根据世界时设置 Date 对象中的年份（四位数字）。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-setutchours.html">setUTCHours()</a></td>
<td align="center">根据世界时设置 Date 对象中的小时 (0 ~ 23)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-setutcmilliseconds.html">setUTCMilliseconds()</a></td>
<td align="center">根据世界时设置 Date 对象中的毫秒 (0 ~ 999)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-setutcminutes.html">setUTCMinutes()</a></td>
<td align="center">根据世界时设置 Date 对象中的分钟 (0 ~ 59)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-setutcmonth.html">setUTCMonth()</a></td>
<td align="center">根据世界时设置 Date 对象中的月份 (0 ~ 11)。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-setutcseconds.html">setUTCSeconds()</a></td>
<td align="center">setUTCSeconds() 方法用于根据世界时 (UTC) 设置指定时间的秒字段。</td>
</tr>
<tr>
<td align="center">setYear()</td>
<td align="center">已废弃。请使用 setFullYear() 方法代替。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-todatestring.html">toDateString()</a></td>
<td align="center">把 Date 对象的日期部分转换为字符串。</td>
</tr>
<tr>
<td align="center">toGMTString()</td>
<td align="center">已废弃。请使用 toUTCString() 方法代替。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-toisostring.html">toISOString()</a></td>
<td align="center">使用 ISO 标准返回字符串的日期格式。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-tojson.html">toJSON()</a></td>
<td align="center">以 JSON 数据格式返回日期字符串。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-tolocaledatestring.html">toLocaleDateString()</a></td>
<td align="center">根据本地时间格式，把 Date 对象的日期部分转换为字符串。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-tolocaletimestring.html">toLocaleTimeString()</a></td>
<td align="center">根据本地时间格式，把 Date 对象的时间部分转换为字符串。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-tolocalestring.html">toLocaleString()</a></td>
<td align="center">根据本地时间格式，把 Date 对象转换为字符串。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-tostring-date.html">toString()</a></td>
<td align="center">把 Date 对象转换为字符串。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-totimestring.html">toTimeString()</a></td>
<td align="center">把 Date 对象的时间部分转换为字符串。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-toutcstring.html">toUTCString()</a></td>
<td align="center">根据世界时，把 Date 对象转换为字符串。 实例： <code>var today = new Date(); var UTCstring = today.toUTCString();</code></td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-utc.html">UTC()</a></td>
<td align="center">根据世界时返回 1970 年 1 月 1 日 到指定日期的毫秒数。</td>
</tr>
<tr>
<td align="center"><a href="https://www.runoob.com/jsref/jsref-valueof-date.html">valueOf()</a></td>
<td align="center">返回 Date 对象的原始值。</td>
</tr>
</tbody></table>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><p>创建Date对象：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 在程序中 西方的月份编号从0开始</span></span><br><span class="line"><span class="comment">* 1 2 3 4 5 6 </span></span><br><span class="line"><span class="comment">* 0 1 2 3 4 5</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">var</span> today = <span class="keyword">new</span> <span class="title class_">Date</span>()</span><br><span class="line"><span class="keyword">var</span> d1 = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&quot;October 13, 1975 11:13:00&quot;</span>)</span><br><span class="line"><span class="keyword">var</span> d2 = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="number">79</span>,<span class="number">5</span>,<span class="number">24</span>)</span><br><span class="line"><span class="keyword">var</span> d3 = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="number">79</span>,<span class="number">5</span>,<span class="number">24</span>,<span class="number">11</span>,<span class="number">33</span>,<span class="number">0</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(d1);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(d2);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(d3);</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210725090203.png" alt="image-20210725090203847" style="zoom:67%;"></li>
<li><p>获得Date对象属性</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> d4 = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="number">2048</span>,<span class="number">0</span>,<span class="number">13</span>,<span class="number">16</span>,<span class="number">51</span>,<span class="number">20</span>,<span class="number">123</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(d4)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(d4.<span class="title function_">getYear</span>())<span class="comment">//和1900的年份差</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(d4.<span class="title function_">getFullYear</span>())<span class="comment">//完整的年份</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(d4.<span class="title function_">getMonth</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(d4.<span class="title function_">getDate</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(d4.<span class="title function_">getHours</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(d4.<span class="title function_">getMinutes</span>())</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(d4.<span class="title function_">getMilliseconds</span>())<span class="comment">//毫秒</span></span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210725091429.png" alt="image-20210725091404875" style="zoom:67%;"></li>
<li><p>判断日期大小</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> d5 = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="number">2048</span>,<span class="number">0</span>,<span class="number">13</span>,<span class="number">16</span>,<span class="number">51</span>,<span class="number">20</span>,<span class="number">456</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(d4&lt;d5)</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210725091516.png" alt="image-20210725091516565" style="zoom:67%;"></li>
<li><p>自定义日期格式</p>
<p>format格式化方法可以放在js文件中，不用重复复制</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*date对象的格式化方法*/</span></span><br><span class="line"><span class="comment">/*修改Date原型,添加一个format格式化的方法*/</span></span><br><span class="line"><span class="title class_">Date</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">format</span> = <span class="keyword">function</span>(<span class="params">fmt</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> o = &#123;</span><br><span class="line">        <span class="string">&quot;M+&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getMonth</span>()+<span class="number">1</span>,                 <span class="comment">//月份</span></span><br><span class="line">        <span class="string">&quot;d+&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getDate</span>(),                    <span class="comment">//日</span></span><br><span class="line">        <span class="string">&quot;h+&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getHours</span>(),                   <span class="comment">//小时</span></span><br><span class="line">        <span class="string">&quot;m+&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getMinutes</span>(),                 <span class="comment">//分</span></span><br><span class="line">        <span class="string">&quot;s+&quot;</span> : <span class="variable language_">this</span>.<span class="title function_">getSeconds</span>(),                 <span class="comment">//秒</span></span><br><span class="line">        <span class="string">&quot;q+&quot;</span> : <span class="title class_">Math</span>.<span class="title function_">floor</span>((<span class="variable language_">this</span>.<span class="title function_">getMonth</span>()+<span class="number">3</span>)/<span class="number">3</span>), <span class="comment">//季度</span></span><br><span class="line">        <span class="string">&quot;S&quot;</span>  : <span class="variable language_">this</span>.<span class="title function_">getMilliseconds</span>()             <span class="comment">//毫秒</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="regexp">/(y+)/</span>.<span class="title function_">test</span>(fmt))&#123;</span><br><span class="line">        fmt=fmt.<span class="title function_">replace</span>(<span class="title class_">RegExp</span>.<span class="property">$1</span>, (<span class="variable language_">this</span>.<span class="title function_">getFullYear</span>()+<span class="string">&quot;&quot;</span>).<span class="title function_">substr</span>(<span class="number">4</span> - <span class="title class_">RegExp</span>.<span class="property">$1</span>.<span class="property">length</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> o)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&quot;(&quot;</span>+ k +<span class="string">&quot;)&quot;</span>).<span class="title function_">test</span>(fmt))&#123;</span><br><span class="line">            fmt = fmt.<span class="title function_">replace</span>(</span><br><span class="line">                <span class="title class_">RegExp</span>.<span class="property">$1</span>, (<span class="title class_">RegExp</span>.<span class="property">$1</span>.<span class="property">length</span>==<span class="number">1</span>) ? (o[k]) : ((<span class="string">&quot;00&quot;</span>+ o[k]).<span class="title function_">substr</span>((<span class="string">&quot;&quot;</span>+ o[k]).<span class="property">length</span>)));  </span><br><span class="line">        &#125;       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fmt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fmt=d4.<span class="title function_">format</span>(<span class="string">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fmt)</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210725094240.png" alt="image-20210725094240035" style="zoom:67%;"></li>
</ul>
<h3 id="自定义对象"><a href="#自定义对象" class="headerlink" title="自定义对象"></a>自定义对象</h3><p>JS除了一些常用方法和类以外,允许我们自己定义对象,在JS中自定义对象有三种可用的语法格式,分别为:</p>
<h4 id="1-调用系统的构造函数创建对象"><a href="#1-调用系统的构造函数创建对象" class="headerlink" title="1. 调用系统的构造函数创建对象"></a>1. 调用系统的构造函数创建对象</h4><ul>
<li><p>实例化对象</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*实例化对象*/</span></span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br></pre></td></tr></table></figure></li>
<li><p>给对象添加属性和方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*给对象添加属性*/</span></span><br><span class="line">obj.<span class="property">name</span>=<span class="string">&quot;陈慧珊&quot;</span></span><br><span class="line">obj.<span class="property">sex</span>=<span class="string">&quot;女&quot;</span></span><br><span class="line">obj.<span class="property">age</span>=<span class="number">20</span>;</span><br></pre></td></tr></table></figure></li>
<li><p>查看对象属性</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*给对象添加属性*/</span></span><br><span class="line">obj.<span class="property">name</span>=<span class="string">&quot;陈慧珊&quot;</span></span><br><span class="line">obj.<span class="property">sex</span>=<span class="string">&quot;女&quot;</span></span><br><span class="line">obj.<span class="property">age</span>=<span class="number">20</span>;</span><br></pre></td></tr></table></figure></li>
<li><p>调用对象方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*给对象添加方法*/</span></span><br><span class="line">obj.<span class="property">miss</span>=<span class="keyword">function</span>(<span class="params">ex</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>+<span class="string">&quot;一直都放不下&quot;</span>+ex)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>查看属性，调用方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*查看对象属性*/</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">name</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">sex</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">age</span>)</span><br><span class="line"><span class="comment">/*调用方法*/</span></span><br><span class="line">obj.<span class="title function_">miss</span>(<span class="string">&quot;谭颖&quot;</span>)</span><br></pre></td></tr></table></figure>

<p><img src="/2021/06/16/JS/Users\Dell\AppData\Roaming\Typora\typora-user-images\image-20210725102555551.png" alt="image-20210725102555551"></p>
</li>
</ul>
<h4 id="2-自定义构造方法创建对象"><a href="#2-自定义构造方法创建对象" class="headerlink" title="2. 自定义构造方法创建对象"></a>2. 自定义构造方法创建对象</h4><ul>
<li><p>准备一个构造方法：</p>
<p>可以声明属性还可以声明方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name,sex</span>)&#123;</span><br><span class="line">				<span class="variable language_">this</span>.<span class="property">name</span>=name;</span><br><span class="line">				<span class="variable language_">this</span>.<span class="property">sex</span>=sex;</span><br><span class="line">				<span class="variable language_">this</span>.<span class="property">miss</span>=<span class="keyword">function</span>(<span class="params">ex</span>)&#123;</span><br><span class="line">					<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>+<span class="string">&quot;一直都放不下&quot;</span>+ex)</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>调用构造方法创建对象</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var obj = new Person(&quot;陈慧珊&quot;,&quot;女&quot;)</span><br></pre></td></tr></table></figure></li>
<li><p>查看对象属性调用对象方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*查看对象属性*/</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">name</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">sex</span>)</span><br><span class="line"><span class="comment">/*调用方法*/</span></span><br><span class="line">obj.<span class="title function_">miss</span>(<span class="string">&quot;谭颖&quot;</span>)</span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210725103304.png" alt="image-20210725103304379" style="zoom:67%;"></li>
</ul>
<h4 id="3-字面量的方式创建对象"><a href="#3-字面量的方式创建对象" class="headerlink" title="3. 字面量的方式创建对象"></a>3. 字面量的方式创建对象</h4><ul>
<li><p>使用JSON方式</p>
<p>var 对象名={属性名：属性值，属性名：属性值，……，方法名：方法声明：方法名：方法声明，……}</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*使用JSON方式*/</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&quot;陈慧珊&quot;</span>,</span><br><span class="line">    <span class="attr">sex</span>:<span class="string">&quot;女&quot;</span>,</span><br><span class="line">    <span class="attr">miss</span>:<span class="keyword">function</span>(<span class="params">ex</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>+<span class="string">&quot;一直都放不下&quot;</span>+ex)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>查看属性 调用方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*查看参数 调用方法*/</span></span><br><span class="line">			<span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">name</span>)</span><br><span class="line">			<span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">sex</span>)</span><br><span class="line">			obj.<span class="title function_">miss</span>(<span class="string">&quot;谭颖&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210725104108.png" alt="image-20210725103839535" style="zoom:67%;"></li>
</ul>
<h3 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h3><h4 id="构造器与原型的关系"><a href="#构造器与原型的关系" class="headerlink" title="构造器与原型的关系"></a>构造器与原型的关系</h4><p>当我们用构造方法创建一个类时,在内存会预先调用构造方法创建一个对象,这对象我们称之为原型对象,构造方法对象中有一个prototype属性指向该对象,原型对象中有一个constructor属性指向构造方法.获得一个类的原型对象可以通过类名.prototype的方式获得.</p>
<img src="/2021/06/16/JS/20210725170256.png" alt="image-20210725170234031" style="zoom:67%;">

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 准备一个构造方法 </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">pname,page</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">pname</span>=pname;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">page</span>=page;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">eat</span>=<span class="keyword">function</span>(<span class="params">food</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">page</span>+<span class="string">&quot;岁的&quot;</span>+<span class="variable language_">this</span>.<span class="property">pname</span>+<span class="string">&quot;正在吃&quot;</span>+food);</span><br><span class="line">    &#125;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Person</span>)<span class="comment">// Constructor对象  构造方法对象</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>)</span><br></pre></td></tr></table></figure>

<p>控制台打印Person构造器和其原型对象</p>
<img src="/2021/06/16/JS/06/16/JS/20210725161823.png" class title="image-20210725161823746">

<h4 id="当前类对象与原型的关系"><a href="#当前类对象与原型的关系" class="headerlink" title="当前类对象与原型的关系"></a>当前类对象与原型的关系</h4><p>当前类的每一个对象内部有一个 _ proto _的一个属性,指向他们的原型, 当我们用对象获取属性和调用方法时,如果当前对象中没有,那么会去他们所对应的原型对象中去找.</p>
<img src="/2021/06/16/JS/20210725153638.png" alt="image-20210725153615736" style="zoom:50%;">

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*为Person所有对象增加属性和方法*/</span></span><br><span class="line"><span class="comment">//通过给Person的原型增加属性</span></span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">ex</span>=<span class="string">&quot;ty&quot;</span></span><br><span class="line"><span class="comment">//通过给Person的原型增加方法</span></span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">emotion</span>=<span class="keyword">function</span>(<span class="params">emo</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">pname</span>+emo+<span class="string">&quot;极了&quot;</span>+<span class="variable language_">this</span>.<span class="property">ex</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;chs&quot;</span>,<span class="number">10</span>);</span><br><span class="line">p1.<span class="title function_">emotion</span>(<span class="string">&quot;讨厌&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p2 = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;陈慧珊&quot;</span>,<span class="number">10</span>);</span><br><span class="line">p2.<span class="title function_">emotion</span>(<span class="string">&quot;恨&quot;</span>);</span><br></pre></td></tr></table></figure>

<h4 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h4><p>一个类的原型是一个Object类的对象,也就是说,原型也有一个_proto_属性,指向Object的原型对象,那么也就是说 Person prototype中没有的属性和方法会继续向Object  prototype去找,也就是说,我们在Object原型中添加的属性和方法,我们在person1和person2中也可以使用.那么这种连续的 _proto_属性指向就形成了原型链</p>
<p><strong>也就是给Object的原型对象添加的属性和方法，所有的对象都可以用</strong></p>
<img src="/2021/06/16/JS/20210725170443.png" alt="image-20210725170443721" style="zoom:67%;">

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 准备一个构造方法 </span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">pname,page</span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">pname</span>=pname;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">page</span>=page;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">eat</span>=<span class="keyword">function</span>(<span class="params">food</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">page</span>+<span class="string">&quot;岁的&quot;</span>+<span class="variable language_">this</span>.<span class="property">pname</span>+<span class="string">&quot;正在吃&quot;</span>+food);</span><br><span class="line">    &#125;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给所有的对象增加属性和方法</span></span><br><span class="line"><span class="comment">//给最终原型增加属性</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">gender</span>=<span class="string">&quot;男&quot;</span>;</span><br><span class="line"><span class="comment">//给Person的原型增加一个方法</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sleep</span>=<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">page</span>+<span class="string">&quot;岁的&quot;</span>+<span class="variable language_">this</span>.<span class="property">gender</span>+<span class="string">&quot;孩儿&quot;</span>+<span class="variable language_">this</span>.<span class="property">pname</span>+<span class="string">&quot;正在睡觉&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p1=<span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;张三&quot;</span>,<span class="number">10</span>);</span><br><span class="line">p1.<span class="title function_">eat</span>(<span class="string">&quot;蛋挞&quot;</span>)</span><br><span class="line">p1.<span class="title function_">sleep</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p2=<span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;李四&quot;</span>,<span class="number">8</span>);</span><br><span class="line">p2.<span class="title function_">eat</span>(<span class="string">&quot;牛角面包&quot;</span>)</span><br><span class="line">p2.<span class="title function_">sleep</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p1);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p2);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><h4 id="鼠标事件"><a href="#鼠标事件" class="headerlink" title="鼠标事件"></a>鼠标事件</h4><table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
<th>DOM</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.runoob.com/jsref/event-onclick.html">onclick</a></td>
<td>当用户点击某个对象时调用的事件句柄。</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-oncontextmenu.html">oncontextmenu</a></td>
<td>在用户点击鼠标右键打开上下文菜单时触发</td>
<td></td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-ondblclick.html">ondblclick</a></td>
<td>当用户双击某个对象时调用的事件句柄。</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-onmousedown.html">onmousedown</a></td>
<td>鼠标按钮被按下。</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-onmouseenter.html">onmouseenter</a></td>
<td>当鼠标指针移动到元素上时触发。</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-onmouseleave.html">onmouseleave</a></td>
<td>当鼠标指针移出元素时触发</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-onmousemove.html">onmousemove</a></td>
<td>鼠标被移动。</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-onmouseover.html">onmouseover</a></td>
<td>鼠标移到某元素之上。</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-onmouseout.html">onmouseout</a></td>
<td>鼠标从某元素移开。</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-onmouseup.html">onmouseup</a></td>
<td>鼠标按键被松开。</td>
<td>2</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.d1</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: greenyellow;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;双击666&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;鼠标按下&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun3</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;鼠标抬起&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun4</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;鼠标进入&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun5</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;鼠标离开&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun6</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;鼠标移动&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;d1&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">ondblclick</span>=<span class="string">&quot;fun1()&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">onmousedown</span>=<span class="string">&quot;fun2()&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">onmouseup</span>=<span class="string">&quot;fun3()&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">onmouseenter</span>=<span class="string">&quot;fun4()&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">onmouseleave</span>=<span class="string">&quot;fun5()&quot;</span> </span></span><br><span class="line"><span class="tag">             <span class="attr">onmousemove</span>=<span class="string">&quot;fun6()&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210725200123.png" alt="image-20210725200123159" style="zoom:67%;">

<h4 id="按键事件"><a href="#按键事件" class="headerlink" title="按键事件"></a>按键事件</h4><table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
<th>DOM</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.runoob.com/jsref/event-onkeydown.html">onkeydown</a></td>
<td>某个键盘按键被按下。</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-onkeypress.html">onkeypress</a></td>
<td>某个键盘按键被按下并松开。</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-onkeyup.html">onkeyup</a></td>
<td>某个键盘按键被松开。</td>
<td>2</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;按钮按下&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;按钮抬起&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun3</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;按钮按下并抬起&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">onkeydown</span>=<span class="string">&quot;fun1()&quot;</span> <span class="attr">onkeyup</span>=<span class="string">&quot;fun2()&quot;</span> <span class="attr">onkeypress</span>=<span class="string">&quot;fun3()&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210725201436.png" alt="image-20210725201436412" style="zoom: 50%;">

<h4 id="表单事件"><a href="#表单事件" class="headerlink" title="表单事件"></a>表单事件</h4><table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
<th>DOM</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.runoob.com/jsref/event-onblur.html">onblur</a></td>
<td>元素失去焦点时触发</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-onchange.html">onchange</a></td>
<td>该事件在表单元素的内容改变时触发( <input>, <keygen>, <select>, 和 </select><textarea>)</textarea></td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-onfocus.html">onfocus</a></td>
<td>元素获取焦点时触发</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-onfocusin.html">onfocusin</a></td>
<td>元素即将获取焦点时触发</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-onfocusout.html">onfocusout</a></td>
<td>元素即将失去焦点时触发</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-oninput.html">oninput</a></td>
<td>元素获取用户输入时触发</td>
<td>3</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-onreset.html">onreset</a></td>
<td>表单重置时触发</td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-onsearch.html">onsearch</a></td>
<td>用户向搜索域输入文本时触发 (  &lt;input=”search”&gt;)</td>
<td></td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-onselect.html">onselect</a></td>
<td>用户选取文本时触发 ( <input> 和 <textarea>)</textarea></td>
<td>2</td>
</tr>
<tr>
<td><a href="https://www.runoob.com/jsref/event-onsubmit.html">onsubmit</a></td>
<td>表单提交时触发</td>
<td>2</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;获得焦点&quot;</span>);&#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;失去焦点&quot;</span>);&#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun3</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;正在输入&quot;</span>);&#125;<span class="comment">// 只要输入了,就会触发</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun4</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;内容改变&quot;</span>);&#125;<span class="comment">// 内部信息发生变化的同时,要失去焦点</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun5</span>(<span class="params">sel</span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;内容发生改变了&quot;</span>+sel.<span class="property">value</span>)&#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun6</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&quot;发生了提交事件&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 做了一些运算之后 动态决定表单能否提交</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="literal">false</span> ;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun7</span>(<span class="params"></span>)&#123; </span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;发生了重置事件&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>  <span class="attr">action</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> <span class="attr">onsubmit</span>=<span class="string">&quot;return fun6()&quot;</span> <span class="attr">onreset</span>=<span class="string">&quot;return fun7()&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">onfocus</span>=<span class="string">&quot;fun1()&quot;</span> <span class="attr">onblur</span>=<span class="string">&quot;fun2()&quot;</span> <span class="attr">oninput</span>=<span class="string">&quot;fun3()&quot;</span> <span class="attr">onchange</span>=<span class="string">&quot;fun4()&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;city&quot;</span> <span class="attr">onchange</span>=<span class="string">&quot;fun5(this)&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>&gt;</span>-请选择城市-<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>重庆<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交数据&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;重置数据&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="页面加载事件"><a href="#页面加载事件" class="headerlink" title="页面加载事件"></a>页面加载事件</h4><p>==onload标签==可以让页面加载完了自动执行相应函数</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">testFun</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> in1=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;i1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> v1=in1.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(v1)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">&quot;testFun()&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;测试文字&quot;</span> <span class="attr">id</span>=<span class="string">&quot;i1&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="BOM编程"><a href="#BOM编程" class="headerlink" title="BOM编程"></a>BOM编程</h2><h3 id="BOM与DOM的概念和联系"><a href="#BOM与DOM的概念和联系" class="headerlink" title="BOM与DOM的概念和联系"></a>BOM与DOM的概念和联系</h3><p><strong>Browser Object Model 浏览器对象模型</strong></p>
<ul>
<li><p>BOM有一系列对象组成，是访问、控制、修改浏览器的属性的方法</p>
</li>
<li><p>BOM没有统一的标准(每种客户端都可以自定标准)。</p>
</li>
<li><p>BOM的顶层是==window对象==</p>
</li>
</ul>
<p><strong>Document Object Model 文档对象模型</strong></p>
<ul>
<li><p>DOM用于XHTML、XML文档的应用程序接口(API)。</p>
</li>
<li><p>DOM提供一种结构化的文档描述方式，从而使HTML内容使用结构化的方式显示。</p>
</li>
<li><p>DOM由一系列对象组成，是访问、检索、修改XHTML文档内容与结构的标准方法。</p>
</li>
<li><p>DOM标准是由w3c制定与维护。DOM是跨平台与跨语言的。</p>
</li>
<li><p>DOM的顶层是==document对象==</p>
</li>
</ul>
<p>​                                            &lt;下图红色框内是DOM控制，绿色框内是BOM控制&gt;</p>
<img src="/2021/06/16/JS/20210726103714.png" alt="image-20210726103713434" style="zoom:67%;">

<p><strong>联系</strong></p>
<img src="/2021/06/16/JS/20210726103848.png" alt="image-20210726103847508" style="zoom:67%;">

<p>也可以说DOM也是归BOM管的.</p>
<p><strong>BOM</strong>编程就是把整个浏览器抽象成一个对象(window),这个对象中有很多的属性和方法,访问这些属性或者调用这些方法就可以控制浏览器作出…<strong>行为</strong></p>
<p><strong>DOM</strong>编程就是把浏览器当前页面对应的文档抽象成一个对象(document),这个对象中有很多关于操作文档的一些属性和方法,访问这些属性和方法的时候,我们就可以通过代码动态控制<strong>页面上显示的内容</strong></p>
<p><strong>BOM 是为了操作浏览器出现的 API，window 是其根对象。</strong></p>
<p><strong>DOM 是为了操作文档出现的 API，document 是其根对象。</strong></p>
<h3 id="window对象及常用方法"><a href="#window对象及常用方法" class="headerlink" title="window对象及常用方法"></a>window对象及常用方法</h3><h4 id="三种弹窗方式"><a href="#三种弹窗方式" class="headerlink" title="三种弹窗方式"></a>三种弹窗方式</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                                 * 如果是使用window对象调用的方法和访问的属性 那么window对象都可以省略不写</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                                 * </span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                                 * */</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">window</span>.<span class="title function_">alert</span>(<span class="string">&quot;你好呀&quot;</span>);<span class="comment">//普通信息提示框</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> con =<span class="variable language_">window</span>.<span class="title function_">confirm</span>(<span class="string">&quot;确定要删除***女友吗?&quot;</span>);<span class="comment">// 确认框</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(con);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> message =<span class="variable language_">window</span>.<span class="title function_">prompt</span>(<span class="string">&quot;请输入3号女友的名字&quot;</span>,<span class="string">&quot;例如:小刚&quot;</span>);<span class="comment">// 信息输入框</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(message)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;测试按钮&quot;</span>  <span class="attr">onclick</span>=<span class="string">&quot;fun1()&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210726141452.png" alt="image-20210726141452790" style="zoom:67%;">

<img src="/2021/06/16/JS/20210726141503.png" alt="image-20210726141503747" style="zoom:67%;">

<img src="/2021/06/16/JS/20210726141526.png" alt="image-20210726141526426" style="zoom:67%;">

<h4 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/*持续打印的控制器*/</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//定义一个存储因为每次点击而生成的intervalID</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> intervalIDS=<span class="keyword">new</span> <span class="title class_">Array</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/*循环执行的定时器任务*/</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">startInterval</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//定时器setInterval()&#123;执行的动作，时间&#125;</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> intervalID = <span class="variable language_">window</span>.<span class="built_in">setInterval</span>(</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">var</span> today=<span class="keyword">new</span> <span class="title class_">Date</span>();</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">var</span> hours = today.<span class="title function_">getHours</span>();</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">var</span> minutes=today.<span class="title function_">getMinutes</span>();</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">var</span> seconds=today.<span class="title function_">getSeconds</span>();</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">var</span> str= hours+<span class="string">&quot;点&quot;</span>+minutes+<span class="string">&quot;分&quot;</span>+seconds+<span class="string">&quot;秒&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">var</span> ta = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;timeArea&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                        ta.<span class="property">value</span>=str;</span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="number">1000</span><span class="comment">//1s</span></span></span><br><span class="line"><span class="language-javascript">                );</span></span><br><span class="line"><span class="language-javascript">                intervalIDS.<span class="title function_">push</span>(intervalID);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/*设置循环停止*/</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">endInterval</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//删除定时器任务</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">while</span>(intervalIDS.<span class="property">length</span>&gt;<span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//删除数组第一个元素</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">window</span>.<span class="built_in">clearInterval</span>(intervalIDS.<span class="title function_">shift</span>())</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;timeArea&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;开始计时&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;startInterval()&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;停止计时&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;endInterval()&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<img src="/2021/06/16/JS/20210726152748.png" alt="image-20210726152747997" style="zoom:67%;">

<h4 id="open和close"><a href="#open和close" class="headerlink" title="open和close"></a>open和close</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&quot;https://www.baidu.com&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">window</span>.<span class="title function_">close</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;打开百度&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun1()&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;关闭页面&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun2()&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="window属性"><a href="#window属性" class="headerlink" title="window属性"></a>window属性</h4><h5 id="location"><a href="#location" class="headerlink" title="location"></a>location</h5><p>location对象,是window对象的一个属性,代表浏览器上URL地址栏,使用location对象可以操作地址栏</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(location.<span class="property">host</span>);<span class="comment">// 服务器的IP+端口号</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(location.<span class="property">hostname</span>);<span class="comment">// IP </span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(location.<span class="property">port</span>);<span class="comment">// 端口号</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(location.<span class="property">href</span>);<span class="comment">// 地址栏中具体的文字</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                location.<span class="property">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;测试location&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun1()&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="history"><a href="#history" class="headerlink" title="history"></a>history</h5><p>history对象是window对象的一个属性,代表浏览器访问历史记录,通过history的操作我们可以实现翻阅浏览器历史网页</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">window</span>.<span class="property">history</span>.<span class="title function_">forward</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                history.<span class="title function_">back</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun3</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                history.<span class="title function_">go</span>(<span class="number">2</span>); <span class="comment">// 正整数 向前跳转 * 页  负整数 向后跳转*页</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;a.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_self&quot;</span>&gt;</span>pageA<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;向前&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun1()&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;向后&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun2()&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;go&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun3()&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="screen和navigator"><a href="#screen和navigator" class="headerlink" title="screen和navigator"></a>screen和navigator</h5><p>screen代表屏幕,navigator代表浏览器软件本身,通过这两个对象可以获得屏幕和浏览器软件的一些信息</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="variable language_">window</span>.<span class="property">screen</span>.<span class="property">width</span>)</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="variable language_">window</span>.<span class="property">screen</span>.<span class="property">height</span>)</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">info</span>(navigator.<span class="property">userAgent</span>)</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">info</span>(navigator.<span class="property">appName</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">&quot;fun1()&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="DOM编程"><a href="#DOM编程" class="headerlink" title="DOM编程"></a>DOM编程</h2><h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h3><p>DOM编程就是使用<strong>document对象</strong>的API完成对网页HTML文档进行动态修改,以实现网页数据和样式动态变化效果的编程.</p>
<p><a href="#BOM%E4%B8%8EDOM%E7%9A%84%E6%A6%82%E5%BF%B5%E5%92%8C%E8%81%94%E7%B3%BB">和BOM的联系</a></p>
<h4 id="document"><a href="#document" class="headerlink" title="document"></a>document</h4><p>document对象代表整个html文档，可用来访问页面中的所有元素，是最复杂的一个dom对象，可以说是学习好dom编程的关键所在。</p>
<h4 id="document对象"><a href="#document对象" class="headerlink" title="document对象"></a>document对象</h4><p>document对象是window对象的一个成员属性，通过window.document来访问，当然也可以直接使用document,根据HTML代码结构特点,document对象本身是一种树形结构的文档对象。</p>
<p><strong>如何获取？</strong></p>
<p>document对象是window对象的一个成员属性，通过<strong>window.document</strong>来访问，当然也可以直接使用document,根据HTML代码结构特点,document对象本身是一种树形结构的文档对象。</p>
<h4 id="-1"><a href="#-1" class="headerlink" title></a></h4><p><img src="/2021/06/16/JS/Users\Dell\AppData\Roaming\Typora\typora-user-images\image-20210727201824114.png" alt="image-20210727201824114"></p>
<h4 id="结点对象：Node"><a href="#结点对象：Node" class="headerlink" title="结点对象：Node"></a>结点对象：Node</h4><p>在 HTML DOM (Document Object Model) 中, 所有的都是  <strong>节点</strong></p>
<p>它有三个子类</p>
<ul>
<li><p>元素节点：Element 如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;链接地址&quot;</span>&gt;</span>我的链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>属性节点 Attribute 如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">href=&quot;链接地址&quot;</span><br></pre></td></tr></table></figure></li>
<li><p>文本节点 Text 如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我的链接</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="document的操作"><a href="#document的操作" class="headerlink" title="document的操作"></a>document的操作</h4><ol>
<li><p>查询元素（获取元素,进而操作元素,或者元素的属性,文本）</p>
</li>
<li><p>操作文本</p>
</li>
<li><p>操作属性</p>
</li>
<li><p>操作元素</p>
</li>
<li><p>操作CSS样式（一个特殊的属性style）</p>
</li>
</ol>
<h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>页面分析<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        x</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;d1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px;height: 100px; border: 1px solid red;&quot;</span>&gt;</span></span><br><span class="line">            1a</span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            2b</span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>thank you<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            3c</span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>thank you very much<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            4d</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        y</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>树形结构图</strong></p>
<img src="/2021/06/16/JS/06/16/JS/20210727201506.png" class title="image-20210727201503749">



<h3 id="获取节点"><a href="#获取节点" class="headerlink" title="获取节点"></a>获取节点</h3><ul>
<li>id值获取</li>
<li>class属性值获取</li>
<li>标签名获取</li>
<li>name属性值获取</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 获得document对象</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> element1 =<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;d1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(element1);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                element1.<span class="property">innerText</span>=<span class="string">&quot;这是我的div&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params">className</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> elements =<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(className);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(elements)</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">0</span>;i&lt;elements.<span class="property">length</span>;i++)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(elements[i])</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun3</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> elements =<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;input&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(elements);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">0</span>;i&lt;elements.<span class="property">length</span>;i++)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(elements[i])</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun4</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> elements=<span class="variable language_">document</span>.<span class="title function_">getElementsByName</span>(<span class="string">&quot;hobby&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(elements);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span>(<span class="keyword">var</span> i =<span class="number">0</span>;i&lt;elements.<span class="property">length</span>;i++)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(elements[i])</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;d1&#x27;</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span>这是第一个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;d2&#x27;</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span>这是第二个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;d3&#x27;</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span>&gt;</span>这是第三个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&#x27;i1&#x27;</span> <span class="attr">class</span>=<span class="string">&quot;a&quot;</span> <span class="attr">name</span>=<span class="string">&#x27;name1&#x27;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;d4&#x27;</span> <span class="attr">class</span>=<span class="string">&quot;b&quot;</span> <span class="attr">name</span>=<span class="string">&#x27;name1&#x27;</span>&gt;</span>这是第四个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;d5&#x27;</span> <span class="attr">class</span>=<span class="string">&quot;b&quot;</span>&gt;</span>这是第五个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        爱好:</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> /&gt;</span>篮球</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;2&quot;</span> /&gt;</span>足球</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;3&quot;</span> /&gt;</span>羽毛球</span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;id值获取&quot;</span> <span class="attr">onclick</span>=<span class="string">&#x27;fun1()&#x27;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;class属性值获取&quot;</span> <span class="attr">onclick</span>=<span class="string">&#x27;fun2(&quot;b&quot;)&#x27;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;标签名获取&quot;</span> <span class="attr">onclick</span>=<span class="string">&#x27;fun3()&#x27;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;name属性值获取&quot;</span> <span class="attr">onclick</span>=<span class="string">&#x27;fun4()&#x27;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="修改操作"><a href="#修改操作" class="headerlink" title="修改操作"></a>修改操作</h3><h4 id="修改节点属性"><a href="#修改节点属性" class="headerlink" title="修改节点属性"></a>修改节点属性</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;你好呀&quot;</span> <span class="attr">id</span>=<span class="string">&quot;in1&quot;</span> /&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;变&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun1()&quot;</span>  /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>



<ul>
<li><p>语法一：获得  节点.属性名    修改  节点.属性名 =属性值</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 语法1     </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(node.<span class="property">type</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(node.<span class="property">value</span>);</span><br><span class="line"><span class="comment">//改变属性值</span></span><br><span class="line">node.<span class="property">type</span>=<span class="string">&quot;button&quot;</span>;</span><br><span class="line">node.<span class="property">value</span>=<span class="string">&quot;你好我也好&quot;</span>;</span><br></pre></td></tr></table></figure></li>
<li><p>语法二：getAttribute   setAttribute</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 语法2  getAttribute   setAttribute</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(node.<span class="title function_">getAttribute</span>(<span class="string">&quot;type&quot;</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(node.<span class="title function_">getAttribute</span>(<span class="string">&quot;value&quot;</span>));</span><br><span class="line">node.<span class="title function_">setAttribute</span>(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;button&quot;</span>);</span><br><span class="line">node.<span class="title function_">setAttribute</span>(<span class="string">&quot;value&quot;</span>,<span class="string">&quot;大家好&quot;</span>);</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="修改节点样式"><a href="#修改节点样式" class="headerlink" title="修改节点样式"></a>修改节点样式</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#div1</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.a</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: lightblue;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span> &gt;</span></span><br><span class="line">            你好呀</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;测试&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun1()&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><p>节点.style.样式名=样式值</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 节点.style.样式名=样式值</span></span><br><span class="line"><span class="keyword">var</span> element =<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;div1&quot;</span>);</span><br><span class="line">element.<span class="property">style</span>.<span class="property">width</span>=<span class="string">&quot;200px&quot;</span>;</span><br><span class="line">element.<span class="property">style</span>.<span class="property">height</span>=<span class="string">&quot;200px&quot;</span>;</span><br><span class="line">element.<span class="property">style</span>.<span class="property">border</span>=<span class="string">&quot;10px solid green&quot;</span>;</span><br></pre></td></tr></table></figure></li>
<li><p>css样式在更多的时候是以class选择器的形式作用到元素上<br>可以通过修改class属性,影响div的样式</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.a</span>&#123;</span></span><br><span class="line"><span class="language-css">                 <span class="attribute">background-color</span>: lightblue;</span></span><br><span class="line"><span class="language-css">                 <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">                 <span class="attribute">font-size</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="language-css">             &#125;</span></span><br><span class="line"><span class="language-css"> </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line">element.<span class="title function_">setAttribute</span>(<span class="string">&quot;class&quot;</span>,<span class="string">&quot;a&quot;</span>)</span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="修改标签文本"><a href="#修改标签文本" class="headerlink" title="修改标签文本"></a>修改标签文本</h4><ul>
<li><p>innerHtml 操作双标签中间的HTML</p>
</li>
<li><p>innerText  操作双标签中间的 Text</p>
</li>
<li><p>value      操作表单标签值</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> element1=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;d1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                                 * innerText  不包含HTML结构</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                                 * innerHTML  包含HTML结构</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                                 * */</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;innerText&gt;&gt;&gt;&quot;</span>+element1.<span class="property">innerText</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;innerHTML&gt;&gt;&gt;&quot;</span>+element1.<span class="property">innerHTML</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> element2=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;i1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(element2.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> element1=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;d1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//element1.innerText=&quot;&lt;h1&gt;一刻也不能分割&lt;/h1&gt;&quot;</span></span></span><br><span class="line"><span class="language-javascript">                element1.<span class="property">innerHTML</span>=<span class="string">&quot;&lt;h1&gt;一刻也不能分割&lt;/h1&gt;&quot;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> element2=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;i1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                element2.<span class="property">value</span>=<span class="string">&quot;无论我走到哪里&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;d1&#x27;</span>&gt;</span></span><br><span class="line">            a</span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            b</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;我和我的祖国&quot;</span> <span class="attr">id</span>=<span class="string">&#x27;i1&#x27;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;获取内容&quot;</span>  <span class="attr">onclick</span>=<span class="string">&quot;fun1()&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;修改内容&quot;</span>  <span class="attr">onclick</span>=<span class="string">&quot;fun2()&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="增加删除节点"><a href="#增加删除节点" class="headerlink" title="增加删除节点"></a>增加删除节点</h4><p>删除节点需要的知识</p>
<p>行间距和创建标签</p>
<p>创建标签输入内筒以后进行进一步的创建w</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#d1</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">80%</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> div1=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;d1&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 通过JS创建标签</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> in1=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;input&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                in1.<span class="title function_">setAttribute</span>(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;text&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                in1.<span class="title function_">setAttribute</span>(<span class="string">&quot;value&quot;</span>,<span class="string">&quot;请输入内容&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> in2=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;input&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                in2.<span class="title function_">setAttribute</span>(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;password&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                in2.<span class="title function_">setAttribute</span>(<span class="string">&quot;value&quot;</span>,<span class="string">&quot;123456789&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> in3=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;input&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                in3.<span class="title function_">setAttribute</span>(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;button&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                in3.<span class="title function_">setAttribute</span>(<span class="string">&quot;value&quot;</span>,<span class="string">&quot;删除&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> br=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;br&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                in3.<span class="property">onclick</span>=<span class="keyword">function</span> (<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    div1.<span class="title function_">removeChild</span>(in1)</span></span><br><span class="line"><span class="language-javascript">                    div1.<span class="title function_">removeChild</span>(in2)</span></span><br><span class="line"><span class="language-javascript">                    div1.<span class="title function_">removeChild</span>(in3)</span></span><br><span class="line"><span class="language-javascript">                    div1.<span class="title function_">removeChild</span>(br)</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                div1.<span class="title function_">appendChild</span>(in1);</span></span><br><span class="line"><span class="language-javascript">                div1.<span class="title function_">appendChild</span>(in2);</span></span><br><span class="line"><span class="language-javascript">                div1.<span class="title function_">appendChild</span>(in3);</span></span><br><span class="line"><span class="language-javascript">                div1.<span class="title function_">appendChild</span>(br);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;d1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;增加&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun1()&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><p>Do You Love Me??</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> outerDiv =<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;outerDiv&quot;</span>); </span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 1000</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> left =<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">1000</span>)</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 500</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> top =<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">500</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                outerDiv.<span class="property">style</span>.<span class="property">marginTop</span>=top+<span class="string">&quot;px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">                outerDiv.<span class="property">style</span>.<span class="property">marginLeft</span>=left+<span class="string">&quot;px&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span>  <span class="title function_">fun2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&quot;love you too&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#outerDiv</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border</span>: <span class="number">1px</span> solid gold;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: gray;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin-top</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin-left</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#outerDiv</span> <span class="selector-tag">input</span>&#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">margin</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;outerDiv&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>do you love me?<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;是&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;fun2()&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;否&quot;</span> <span class="attr">onmouseover</span>=<span class="string">&quot;fun1()&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL</title>
    <url>/2021/05/07/MySQL/</url>
    <content><![CDATA[<h1 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h1><h2 id="1-数据库基本概念"><a href="#1-数据库基本概念" class="headerlink" title="1.数据库基本概念"></a>1.数据库基本概念</h2><h3 id="1-1-数据"><a href="#1-1-数据" class="headerlink" title="1.1 数据"></a>1.1 数据</h3><p>所谓数据（Data）是指对客观事物进行描述并可以鉴别的符号，这些符号是可识别的、抽象的。它不仅仅指狭义上的数字，而是有多种表现形式：字母、文字、文本、图形、音频、视频等。现在计算机存储和处理的数据范围十分广泛，而描述这些数据的符号也变得越来越复杂了。</p>
<h3 id="1-2-数据库"><a href="#1-2-数据库" class="headerlink" title="1.2 数据库"></a>1.2 数据库</h3><p>数据库（Database，DB）指的是以一定格式存放、能够实现多个用户共享、与应用程序彼此独立的数据集合。</p>
<span id="more"></span>

<h3 id="1-3-数据库管理系统"><a href="#1-3-数据库管理系统" class="headerlink" title="1.3 数据库管理系统"></a>1.3 数据库管理系统</h3><p>数据库管理系统（Database Management System，DBMS）是用来定义和管理数据的软件。如何科学的组织和存储数据，如何高效的获取和维护数据，如何保证数据的安全性和完整性，这些都需要靠数据库管理系统完成。目前，比较流行的数据库管理系统有：Oracle、MySQL、SQL Server、DB2等。</p>
<h3 id="1-4数据库应用程序"><a href="#1-4数据库应用程序" class="headerlink" title="1.4数据库应用程序"></a>1.4数据库应用程序</h3><p>数据库应用程序（Database Application System，DBAS）是在数据库管理系统基础上，使用数据库管理系统的语法，开发的直接面对最终用户的应用程序，如学生管理系统、人事管理系统、图书管理系统等。</p>
<h3 id="1-5-数据库管理员"><a href="#1-5-数据库管理员" class="headerlink" title="1.5 数据库管理员"></a>1.5 数据库管理员</h3><p>数据库管理员（Database Administrator，DBA）是指对数据库管理系统进行操作的人员，其主要负责数据库的运营和维护。</p>
<h3 id="1-6-最终用户"><a href="#1-6-最终用户" class="headerlink" title="1.6 最终用户"></a>1.6 最终用户</h3><p>最终用户（User）指的是数据库应用程序的使用者。用户面向的是数据库应用程序（通过应用程序操作数据），并不会直接与数据库打交道。</p>
<h3 id="1-7-数据库系统"><a href="#1-7-数据库系统" class="headerlink" title="1.7 数据库系统"></a>1.7 数据库系统</h3><p>数据库系统（Database System，DBS）一般是由数据库、数据库管理系统、数据库应用程序、数据库管理员和最终用户构成。其中DBMS是数据库系统的基础和核心</p>
<h2 id="2-数据库表列类型"><a href="#2-数据库表列类型" class="headerlink" title="2. 数据库表列类型"></a>2. 数据库表列类型</h2><h3 id="2-1-整数类型"><a href="#2-1-整数类型" class="headerlink" title="2.1 整数类型"></a>2.1 整数类型</h3><img src="/2021/05/07/MySQL/20210630201735.png" alt="image-20210630201735014" style="zoom:67%;">

<ol>
<li><p>MySQL支持选择在该类型关键字后面的括号内指定整数值的<strong>显示宽度</strong>(例如，INT(4))。显示宽度并不限制可以在列内保存的值的范围，也不限制超过列的指定宽度的值的显示</p>
</li>
<li><p>主键自增：不使用序列，通过<strong>auto_increment</strong>，要求是<strong>整数类型</strong></p>
</li>
<li><p>支持选择在该类型关键字后面的括号内指定整数值的显示宽度</p>
</li>
</ol>
<img src="/2021/05/07/MySQL/20210630201859.png" alt="image-20210630201859642" style="zoom:67%;">







<h1 id="表的完整性约束"><a href="#表的完整性约束" class="headerlink" title="表的完整性约束"></a>表的完整性约束</h1><h2 id="1-非外键约束"><a href="#1-非外键约束" class="headerlink" title="1. 非外键约束"></a>1. 非外键约束</h2><table>
<thead>
<tr>
<th><strong>约束条件</strong></th>
<th><strong>约束描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>PRIMARY KEY</td>
<td>主键约束，约束字段的值可唯一地标识对应的记录</td>
</tr>
<tr>
<td>NOT NULL</td>
<td>非空约束，约束字段的值不能为空</td>
</tr>
<tr>
<td>UNIQUE</td>
<td>唯一约束，约束字段的值是唯一的</td>
</tr>
<tr>
<td>CHECK</td>
<td>检查约束，限制某个字段的取值范围</td>
</tr>
<tr>
<td>DEFAULT</td>
<td>默认值约束，约束字段的默认值</td>
</tr>
<tr>
<td>AUTO_INCREMENT</td>
<td>自动增加约束，约束字段的值自动递增</td>
</tr>
<tr>
<td>FOREIGN KEY</td>
<td>外键约束，约束表与表之间的关系</td>
</tr>
</tbody></table>
<h5 id="实例一：建立一张用来存储学生信息的表"><a href="#实例一：建立一张用来存储学生信息的表" class="headerlink" title="实例一：建立一张用来存储学生信息的表"></a><strong>实例一</strong>：建立一张用来存储学生信息的表</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">建立一张用来存储学生信息的表</span><br><span class="line">字段包含学号、姓名、性别，年龄、入学日期、班级，email等信息</span><br><span class="line">约束：</span><br><span class="line">建立一张用来存储学生信息的表</span><br><span class="line">字段包含学号、姓名、性别，年龄、入学日期、班级，email等信息</span><br><span class="line">【1】学号是主键 = 不能为空 +  唯一 ，主键的作用：可以通过主键查到唯一的一条记录【2】如果主键是整数类型，那么需要自增</span><br><span class="line">【3】姓名不能为空</span><br><span class="line">【4】Email唯一</span><br><span class="line">【5】性别默认值是男</span><br><span class="line">【6】性别只能是男女</span><br><span class="line">【7】年龄只能在18-50之间</span><br><span class="line">*/</span><br><span class="line">-- 创建数据库表：</span><br><span class="line">create table t_student(</span><br><span class="line">        sno int(6) primary key auto_increment, -- 主键自增</span><br><span class="line">        sname varchar(5) not null, </span><br><span class="line">        sex char(1) default &#x27;男&#x27; check(sex=&#x27;男&#x27; || sex=&#x27;女&#x27;),</span><br><span class="line">        age int(3) check(age&gt;=18 and age&lt;=50),</span><br><span class="line">        enterdate date,</span><br><span class="line">        classname varchar(10),</span><br><span class="line">        email varchar(15) unique -- 唯一</span><br><span class="line">);</span><br><span class="line">-- 查看数据：</span><br><span class="line">select * from t_student;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<img src="/2021/05/07/MySQL/20210701085258.png" alt="image-20210701085258650" style="zoom:67%;">

<ul>
<li><p>添加数据：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 添加数据：</span><br><span class="line">--  1048 - Column &#x27;sname&#x27; cannot be null 不能为null</span><br><span class="line">-- 3819 - Check constraint &#x27;t_student_chk_1&#x27; is violated. 违反检查约束</span><br><span class="line">insert into t_student values (1,&#x27;张三&#x27;,&#x27;男&#x27;,21,&#x27;2023-9-1&#x27;,&#x27;java01班&#x27;,&#x27;zs@126.com&#x27;);</span><br><span class="line">-- 1062 - Duplicate entry &#x27;1&#x27; for key &#x27;t_student.PRIMARY&#x27; 主键重复</span><br><span class="line">-- &gt; 1062 - Duplicate entry &#x27;ls@126.com&#x27; for key &#x27;t_student.email&#x27; 违反唯一约束</span><br><span class="line">insert into t_student values (2,&#x27;李四&#x27;,&#x27;男&#x27;,21,&#x27;2023-9-1&#x27;,&#x27;java01班&#x27;,&#x27;ls@126.com&#x27;);</span><br><span class="line">insert into t_student values (3,&#x27;露露&#x27;,&#x27;男&#x27;,21,&#x27;2023-9-1&#x27;,&#x27;java01班&#x27;,&#x27;ls@126.com&#x27;);</span><br><span class="line">-- 如果主键没有设定值，或者用null.default都可以完成主键自增的效果</span><br><span class="line">insert into t_student (sname,enterdate) values (&#x27;菲菲&#x27;,&#x27;2029-4-5&#x27;);</span><br><span class="line">insert into t_student values (null,&#x27;小明&#x27;,&#x27;男&#x27;,21,&#x27;2023-9-1&#x27;,&#x27;java01班&#x27;,&#x27;xm@126.com&#x27;);</span><br><span class="line">insert into t_student values (default,&#x27;小刚&#x27;,&#x27;男&#x27;,21,&#x27;2023-9-1&#x27;,&#x27;java01班&#x27;,&#x27;xg@126.com&#x27;);</span><br><span class="line">-- 如果sql报错，可能主键就浪费了，后续插入的主键是不连号的，我们主键也不要求连号的</span><br><span class="line">insert into t_student values (null,&#x27;小明&#x27;,&#x27;男&#x27;,21,&#x27;2023-9-1&#x27;,&#x27;java01班&#x27;,&#x27;oo@126.com&#x27;);</span><br></pre></td></tr></table></figure>

<p><strong>常见错误：</strong></p>
<p>  –》 1048 - Column ‘sname’ cannot be null <strong>不能为null</strong></p>
<p>  –》 819 - Check constraint ‘t_student_chk_1’ is violated. <strong>违反检查约束</strong></p>
<p>  – 》1062 - Duplicate（重复的） entry ‘1’ for key ‘t_student.PRIMARY’ <strong>主键重复</strong></p>
<p>  – 》1062 - Duplicate entry ‘<a href="mailto:&#x6c;&#x73;&#x40;&#49;&#50;&#54;&#x2e;&#x63;&#111;&#109;">&#x6c;&#x73;&#x40;&#49;&#50;&#54;&#x2e;&#x63;&#111;&#109;</a>‘ for key ‘t_student.email’ <strong>违反唯一约束</strong></p>
<ul>
<li>使用自增的时候用<strong>null和default</strong>都是可以</li>
<li>如果sql报错，可能<strong>主键</strong>就浪费了，后续插入的主键是不连号的，主键也不要求连号的</li>
</ul>
</li>
</ul>
<h4 id="列级约束和表级约束"><a href="#列级约束和表级约束" class="headerlink" title="- 列级约束和表级约束"></a>- 列级约束和表级约束</h4><p>(1)   <strong>表级约束</strong>：可以约束表中任意一个或多个字段。与列定义相互独立，不包含在列定义中；与定义用‘，’分隔；必须指出要约束的列的名称；</p>
<p>(2)   <strong>列级约束</strong>：包含在列定义中，直接跟在该列的其它定义之后 ，用空格分隔；不必指定列名；</p>
<h5 id="实例二"><a href="#实例二" class="headerlink" title="实例二"></a>实例二</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 删除表：</span><br><span class="line">drop table t_student;</span><br><span class="line">-- 创建数据库表：</span><br><span class="line">create table t_student(</span><br><span class="line">        sno int(6) auto_increment, </span><br><span class="line">        sname varchar(5) not null, </span><br><span class="line">        sex char(1) default &#x27;男&#x27;,</span><br><span class="line">        age int(3),</span><br><span class="line">        enterdate date,</span><br><span class="line">        classname varchar(10),</span><br><span class="line">        email varchar(15),</span><br><span class="line">    -- 表级约束：</span><br><span class="line">        constraint pk_stu primary key (sno),  -- pk_stu 主键约束的名字</span><br><span class="line">        constraint ck_stu_sex check (sex = &#x27;男&#x27; || sex = &#x27;女&#x27;),</span><br><span class="line">        constraint ck_stu_age check (age &gt;= 18 and age &lt;= 50),</span><br><span class="line">        constraint uq_stu_email unique (email)</span><br><span class="line">);</span><br><span class="line">-- 添加数据：</span><br><span class="line">insert into t_student values (1,&#x27;张三&#x27;,&#x27;男&#x27;,21,&#x27;2023-9-1&#x27;,&#x27;java01班&#x27;,&#x27;zs@126.com&#x27;);</span><br><span class="line">-- &gt; 3819 - Check constraint &#x27;ck_stu_sex&#x27; is violated.</span><br><span class="line">-- &gt; 3819 - Check constraint &#x27;ck_stu_age&#x27; is violated.</span><br><span class="line">-- &gt; 1062 - Duplicate entry &#x27;zs@126.com&#x27; for key &#x27;t_student.uq_stu_email&#x27;</span><br><span class="line">insert into t_student values (3,&#x27;李四&#x27;,&#x27;男&#x27;,21,&#x27;2023-9-1&#x27;,&#x27;java01班&#x27;,&#x27;zs@126.com&#x27;);</span><br><span class="line">-- 查看数据：</span><br><span class="line">select * from t_student;</span><br></pre></td></tr></table></figure>

<h4 id="创建表之后添加约束"><a href="#创建表之后添加约束" class="headerlink" title="- 创建表之后添加约束"></a>- 创建表之后添加约束</h4><h5 id="实例三"><a href="#实例三" class="headerlink" title="实例三"></a>实例三</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 删除表：</span><br><span class="line">drop table t_student;</span><br><span class="line">-- 创建数据库表：</span><br><span class="line">create table t_student(</span><br><span class="line">        sno int(6), </span><br><span class="line">        sname varchar(5) not null, </span><br><span class="line">        sex char(1) default &#x27;男&#x27;,</span><br><span class="line">        age int(3),</span><br><span class="line">        enterdate date,</span><br><span class="line">        classname varchar(10),</span><br><span class="line">        email varchar(15)</span><br><span class="line">);</span><br><span class="line">-- &gt; 1075 - Incorrect table definition; there can be only one auto column and it must be defined as a key</span><br><span class="line">-- 错误的解决办法：就是auto_increment去掉</span><br><span class="line">-- 在创建表以后添加约束：</span><br><span class="line">alter table t_student add constraint pk_stu primary key (sno) ; -- 主键约束</span><br><span class="line">alter table t_student modify sno int(6) auto_increment; -- 修改自增条件</span><br><span class="line">alter table t_student add constraint ck_stu_sex check (sex = &#x27;男&#x27; || sex = &#x27;女&#x27;);</span><br><span class="line">alter table t_student add constraint ck_stu_age check (age &gt;= 18 and age &lt;= 50);</span><br><span class="line">alter table t_student add constraint uq_stu_email unique (email);</span><br><span class="line">-- 查看表结构：</span><br><span class="line">desc t_student;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>验证约束添加成功：</p>
<img src="/2021/05/07/MySQL/20210701105406.png" alt="image-20210701105405972" style="zoom:67%;">



<h2 id="2-外键约束"><a href="#2-外键约束" class="headerlink" title="2. 外键约束"></a>2. 外键约束</h2><ul>
<li>外键约束（FOREIGN KEY，缩写FK）是用来实现数据库表的参照完整性的。<strong>外键约束可以使两张表紧密的结合起来，特别是针对修改或者删除的级联操作时，会保证数据的完整性。</strong></li>
<li>外键是指表中某个字段的值依赖于另一张表中某个字段的值，而被依赖的字段必须具有主键约束或者唯一约束。被依赖的表我们通常称之为父表或者主表，设置外键约束的表称为子表或者从表。</li>
<li>只有<strong>表级约束</strong>没有列级约束</li>
</ul>
<h5 id="实例四"><a href="#实例四" class="headerlink" title="实例四"></a>实例四</h5><p>主表（父表）：班级表  -  班级编号 - 主键</p>
<p> 从表（子表）：学生表 - 班级编号 - 外键</p>
<ol>
<li><p>创建父表—班级表：</p>
</li>
<li><ul>
<li><p>cno(主键、自增)；cname（不为空）；room；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 先删除表，先删除从表再删除父表</span><br><span class="line">drop table t_student;</span><br><span class="line">drop table t_class;</span><br><span class="line">-- 先创建父表：班级表：</span><br><span class="line">create table t_class(</span><br><span class="line">        cno int(4) primary key auto_increment,</span><br><span class="line">        cname varchar(10) not null,</span><br><span class="line">        room char(4)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>创建从表—学生表：</p>
<ul>
<li><p>sno(主键、自增)；sname（不为空）；classno（取值参考t_class表中的cno字段，不要求字段名字完全重复，但是类型长度定义 尽量要求相同。);</p>
</li>
<li><p><strong>添加外键约束</strong>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 添加学生表，添加外键约束：</span><br><span class="line">create table t_student(</span><br><span class="line">        sno int(6) primary key auto_increment, </span><br><span class="line">        sname varchar(5) not null, </span><br><span class="line">        classno int(4),-- 取值参考t_class表中的cno字段，不要求字段名字完全重复，但是类型长度定义 尽量要求相同。</span><br><span class="line">    -- 外键约束：</span><br><span class="line">        constraint fk_stu_classno foreign key (classno) references t_class (cno)</span><br><span class="line">    </span><br><span class="line">);</span><br></pre></td></tr></table></figure></li>
</ul>
<ul>
<li><p><strong>删除外键约束</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 删除外键约束</span><br><span class="line">alter table EMP</span><br><span class="line">	drop foreign key FK_DEPTNO</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>添加数据：</p>
</li>
<li><p>可以一次性添加多条记录：</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 可以一次性添加多条记录：</span><br><span class="line">insert into t_class values (null,&#x27;java001&#x27;,&#x27;r803&#x27;),(null,&#x27;java002&#x27;,&#x27;r416&#x27;),(null,&#x27;大数据001&#x27;,&#x27;r103&#x27;);</span><br><span class="line">insert into t_student values (null,&#x27;张三&#x27;,1),(null,&#x27;李四&#x27;,1),(null,&#x27;王五&#x27;,2),(null,&#x27;朱六&#x27;,3);</span><br></pre></td></tr></table></figure></li>
<li><p>查询班级表：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查看班级表和学生表：</span><br><span class="line">select * from t_class;</span><br><span class="line">select * from t_student;</span><br></pre></td></tr></table></figure></li>
<li><p><strong>添加外键的效果</strong>：</p>
<ul>
<li>删除班级会出错</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 尝试删除班级</span><br><span class="line">delete from t_class where cno = 1;</span><br></pre></td></tr></table></figure>

<img src="/2021/05/07/MySQL/20210701111051.png" alt="image-20210701111051536" style="zoom:67%;"></li>
</ol>
<h4 id="外键策略："><a href="#外键策略：" class="headerlink" title="外键策略："></a><strong>外键策略：</strong></h4><p>直接删除班级会错误，有时候必须删，可以加入外键策略</p>
<h6 id="策略一：no-action-不允许操作"><a href="#策略一：no-action-不允许操作" class="headerlink" title="策略一：no action 不允许操作"></a>策略一：no action 不允许操作</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 策略1：no action 不允许操作</span><br><span class="line">-- 通过操作sql来完成：</span><br><span class="line">-- 先把班级2的学生对应的班级 改为null </span><br><span class="line">update t_student set classno = null where classno = 2;</span><br><span class="line">-- 然后再删除班级2   </span><br><span class="line">delete from t_class where cno = 2;</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<img src="/2021/05/07/MySQL/20210701112307.png" alt="image-20210701112307207" style="zoom:67%;">

<img src="/2021/05/07/MySQL/20210701112344.png" alt="image-20210701112344539" style="zoom: 50%;">

<h6 id="策略二：使用cascade级联操作"><a href="#策略二：使用cascade级联操作" class="headerlink" title="策略二：使用cascade级联操作"></a>策略二：使用cascade级联操作</h6><p>操作主表的时候影响从表的外键</p>
<ul>
<li><p>先删除外键约束</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 策略2：cascade 级联操作：操作主表的时候影响从表的外键信息：</span><br><span class="line">alter table t_student drop foreign key fk_stu_classno;</span><br></pre></td></tr></table></figure></li>
<li><p>重新添加外键约束（增加一个级联操作）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 重新添加外键约束：</span><br><span class="line">alter table t_student add constraint fk_stu_classno foreign key (classno) references t_class (cno) on update cascade on delete cascade;</span><br></pre></td></tr></table></figure></li>
<li><p>试着更新和删除操作：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 试试更新：</span><br><span class="line">update t_class set cno = 5 where cno = 3;</span><br><span class="line">-- 试试删除：</span><br><span class="line">delete from t_class where cno = 5;</span><br></pre></td></tr></table></figure>

<p>结果</p>
<img src="/2021/05/07/MySQL/20210701113031.png" alt="image-20210701113031631" style="zoom:50%;"></li>
</ul>
<h6 id="策略三：set-null-置空操作"><a href="#策略三：set-null-置空操作" class="headerlink" title="策略三：set null     置空操作"></a>策略三：set null     置空操作</h6><ul>
<li><p>先删除之前的外键约束</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 先删除之前的外键约束：</span><br><span class="line">alter table t_student drop foreign key fk_stu_classno;</span><br></pre></td></tr></table></figure></li>
<li><p>重新添加外键约束</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 重新添加外键约束：</span><br><span class="line">alter table t_student add constraint fk_stu_classno foreign key (classno) references t_class (cno) on update set null on delete set null;</span><br></pre></td></tr></table></figure></li>
<li><p>试着更新操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 更新</span><br><span class="line">update t_class set cno = 5 whwere con = 1;</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<img src="/2021/05/07/MySQL/20210701142452.png" alt="image-20210701142451962" style="zoom:67%;">

<img src="/2021/05/07/MySQL/20210701142510.png" alt="image-20210701142510409" style="zoom: 50%;"></li>
</ul>
<p>注：策略2 级联操作  和  策略2 的  删除操作  可以混着使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table t_student add constraint fk_stu_classno foreign key (classno) references t_class (cno) on update cascade on delete set null ;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>应用场合：</p>
<p>– （1）朋友圈删除，点赞。留言都删除  –  级联操作<br>– （2）解散班级，对应的学生 置为班级为null就可以了，– set null</p>
<h1 id="DQL查询操作"><a href="#DQL查询操作" class="headerlink" title="DQL查询操作*"></a>DQL查询操作*</h1><h2 id="1-常见表的准备"><a href="#1-常见表的准备" class="headerlink" title="1. 常见表的准备"></a>1. 常见表的准备</h2><h3 id="部门表-dept"><a href="#部门表-dept" class="headerlink" title="部门表(dept)"></a>部门表(dept)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table DEPT(  </span><br><span class="line">  DEPTNO int(2) not null,  </span><br><span class="line">  DNAME  VARCHAR(14),  </span><br><span class="line">  LOC    VARCHAR(13)  </span><br><span class="line">);  </span><br><span class="line">alter table DEPT </span><br><span class="line">  add constraint PK_DEPT primary key (DEPTNO); </span><br></pre></td></tr></table></figure>

<h3 id="员工表（emp"><a href="#员工表（emp" class="headerlink" title="员工表（emp)"></a>员工表（emp)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table EMP  </span><br><span class="line">(  </span><br><span class="line">  EMPNO    int(4) primary key,  </span><br><span class="line">  ENAME    VARCHAR(10),  </span><br><span class="line">  JOB      VARCHAR(9),  </span><br><span class="line">  MGR      int(4),  </span><br><span class="line">  HIREDATE DATE,  </span><br><span class="line">  SAL      double(7,2),  </span><br><span class="line">  COMM     double(7,2),  </span><br><span class="line">  DEPTNO   int(2)  </span><br><span class="line">);  </span><br><span class="line">alter table EMP  </span><br><span class="line">  add constraint FK_DEPTNO foreign key (DEPTNO)  </span><br><span class="line">  references DEPT (DEPTNO);  </span><br></pre></td></tr></table></figure>

<h3 id="薪资登记表-salgrade"><a href="#薪资登记表-salgrade" class="headerlink" title="薪资登记表(salgrade)"></a>薪资登记表(salgrade)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table SALGRADE  </span><br><span class="line">(  </span><br><span class="line">  GRADE int primary key,  </span><br><span class="line">  LOSAL double(7,2),  </span><br><span class="line">  HISAL double(7,2)  </span><br><span class="line">);  </span><br></pre></td></tr></table></figure>

<h3 id="奖金表-bonus"><a href="#奖金表-bonus" class="headerlink" title="奖金表(bonus)"></a>奖金表(bonus)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table BONUS  </span><br><span class="line">(  </span><br><span class="line">  ENAME VARCHAR(10),  </span><br><span class="line">  JOB   VARCHAR(9),  </span><br><span class="line">  SAL   double(7,2),  </span><br><span class="line">  COMM  double(7,2)  </span><br><span class="line">);  </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- DEPT</span><br><span class="line">insert into DEPT (DEPTNO, DNAME, LOC)  </span><br><span class="line">values (10, &#x27;ACCOUNTING&#x27;, &#x27;NEW YORK&#x27;);  </span><br><span class="line">insert into DEPT (DEPTNO, DNAME, LOC)  </span><br><span class="line">values (20, &#x27;RESEARCH&#x27;, &#x27;DALLAS&#x27;);  </span><br><span class="line">insert into DEPT (DEPTNO, DNAME, LOC)  </span><br><span class="line">values (30, &#x27;SALES&#x27;, &#x27;CHICAGO&#x27;);  </span><br><span class="line">insert into DEPT (DEPTNO, DNAME, LOC)  </span><br><span class="line">values (40, &#x27;OPERATIONS&#x27;, &#x27;BOSTON&#x27;);  </span><br><span class="line">-- EMP</span><br><span class="line">insert into EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)  </span><br><span class="line">values (7369, &#x27;SMITH&#x27;, &#x27;CLERK&#x27;, 7902, &#x27;1980-12-17&#x27;, 800, null, 20);  </span><br><span class="line">insert into EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)  </span><br><span class="line">values (7499, &#x27;ALLEN&#x27;, &#x27;SALESMAN&#x27;, 7698, &#x27;1981-02-20&#x27;, 1600, 300, 30);  </span><br><span class="line">insert into EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)  </span><br><span class="line">values (7521, &#x27;WARD&#x27;, &#x27;SALESMAN&#x27;, 7698, &#x27;1981-02-22&#x27;, 1250, 500, 30);  </span><br><span class="line">insert into EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)  </span><br><span class="line">values (7566, &#x27;JONES&#x27;, &#x27;MANAGER&#x27;, 7839, &#x27;1981-04-02&#x27;, 2975, null, 20);  </span><br><span class="line">insert into EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)  </span><br><span class="line">values (7654, &#x27;MARTIN&#x27;, &#x27;SALESMAN&#x27;, 7698, &#x27;1981-09-28&#x27;, 1250, 1400, 30);  </span><br><span class="line">insert into EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)  </span><br><span class="line">values (7698, &#x27;BLAKE&#x27;, &#x27;MANAGER&#x27;, 7839, &#x27;1981-05-01&#x27;, 2850, null, 30);  </span><br><span class="line">insert into EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)  </span><br><span class="line">values (7782, &#x27;CLARK&#x27;, &#x27;MANAGER&#x27;, 7839, &#x27;1981-06-09&#x27;, 2450, null, 10);  </span><br><span class="line">insert into EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)  </span><br><span class="line">values (7788, &#x27;SCOTT&#x27;, &#x27;ANALYST&#x27;, 7566, &#x27;1987-04-19&#x27;, 3000, null, 20);  </span><br><span class="line">insert into EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)  </span><br><span class="line">values (7839, &#x27;KING&#x27;, &#x27;PRESIDENT&#x27;, null, &#x27;1981-11-17&#x27;, 5000, null, 10);  </span><br><span class="line">insert into EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)  </span><br><span class="line">values (7844, &#x27;TURNER&#x27;, &#x27;SALESMAN&#x27;, 7698, &#x27;1981-09-08&#x27;, 1500, 0, 30);  </span><br><span class="line">insert into EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)  </span><br><span class="line">values (7876, &#x27;ADAMS&#x27;, &#x27;CLERK&#x27;, 7788, &#x27;1987-05-23&#x27;, 1100, null, 20);  </span><br><span class="line">insert into EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)  </span><br><span class="line">values (7900, &#x27;JAMES&#x27;, &#x27;CLERK&#x27;, 7698, &#x27;1981-12-03&#x27;, 950, null, 30);  </span><br><span class="line">insert into EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)  </span><br><span class="line">values (7902, &#x27;FORD&#x27;, &#x27;ANALYST&#x27;, 7566, &#x27;1981-12-03&#x27;, 3000, null, 20);  </span><br><span class="line">insert into EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)  </span><br><span class="line">values (7934, &#x27;MILLER&#x27;, &#x27;CLERK&#x27;, 7782, &#x27;1982-01-23&#x27;, 1300, null, 10);  </span><br><span class="line">-- SALGRADE</span><br><span class="line">insert into SALGRADE (GRADE, LOSAL, HISAL)  </span><br><span class="line">values (1, 700, 1200);  </span><br><span class="line">insert into SALGRADE (GRADE, LOSAL, HISAL)  </span><br><span class="line">values (2, 1201, 1400);  </span><br><span class="line">insert into SALGRADE (GRADE, LOSAL, HISAL)  </span><br><span class="line">values (3, 1401, 2000);  </span><br><span class="line">insert into SALGRADE (GRADE, LOSAL, HISAL)  </span><br><span class="line">values (4, 2001, 3000);  </span><br><span class="line">insert into SALGRADE (GRADE, LOSAL, HISAL)  </span><br><span class="line">values (5, 3001, 9999);  </span><br><span class="line"></span><br><span class="line">-- 查看表：</span><br><span class="line">select * from dept; </span><br><span class="line">-- 部门表：dept:department 部分 ，loc - location 位置</span><br><span class="line">select * from emp;</span><br><span class="line">-- 员工表：emp:employee 员工   ,mgr :manager上级领导编号，hiredate 入职日期  firedate 解雇日期 ，common：补助</span><br><span class="line">-- deptno 外键 参考  dept - deptno字段</span><br><span class="line">-- mgr 外键  参考  自身表emp - empno  产生了自关联</span><br><span class="line">select * from salgrade;</span><br><span class="line">-- losal - lowsal</span><br><span class="line">-- hisal - highsal</span><br><span class="line">select * from bonus;</span><br></pre></td></tr></table></figure>

<h3 id="结果-表格形式"><a href="#结果-表格形式" class="headerlink" title="结果(表格形式)"></a>结果(表格形式)</h3><img src="/2021/05/07/MySQL/20210701143713.png" alt="image-20210701143713377" style="zoom:67%;">

<img src="/2021/05/07/MySQL/20210701143726.png" alt="image-20210701143726512" style="zoom:67%;">

<img src="/2021/05/07/MySQL/20210701143737.png" alt="image-20210701143737874" style="zoom:67%;">

<img src="/2021/05/07/MySQL/20210701143749.png" alt="image-20210701143749663" style="zoom:67%;">

<h2 id="2-单表查询"><a href="#2-单表查询" class="headerlink" title="2.  单表查询"></a>2.  单表查询</h2><h3 id="2-1-简单的SQL查询"><a href="#2-1-简单的SQL查询" class="headerlink" title="2.1 简单的SQL查询"></a>2.1 简单的SQL查询</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 对emp表查询：</span><br><span class="line">select * from emp; -- *代表所有数据</span><br><span class="line">-- 显示部分列：</span><br><span class="line">select empno,ename,sal from emp;</span><br><span class="line">-- 显示部分行：where子句</span><br><span class="line">select * from emp where sal &gt; 2000;</span><br><span class="line">-- 显示部分列，部分行：</span><br><span class="line">select empno,ename,job,mgr from emp where sal &gt; 2000;</span><br><span class="line">-- 起别名：</span><br><span class="line">select empno 员工编号,ename 姓名,sal 工资 from emp; -- as 省略，&#x27;&#x27;或者&quot;&quot;省略了</span><br><span class="line">-- as alias 别名</span><br><span class="line">select empno as 员工编号,ename as 姓名,sal as 工资 from emp;</span><br><span class="line">select empno as &#x27;员工编号&#x27;,ename as &quot;姓名&quot;,sal as 工资 from emp;</span><br><span class="line">-- &gt; 1064 - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;编号,ename as &quot;姓 名&quot;,sal as 工资 from emp&#x27; at line 1</span><br><span class="line">-- 错误原因：在别名中有特殊符号的时候，&#x27;&#x27;或者&quot;&quot;不可以省略不写</span><br><span class="line">select empno as 员工 编号,ename as &quot;姓 名&quot;,sal as 工资 from emp;</span><br><span class="line">-- 算术运算符：</span><br><span class="line">select empno,ename,sal,sal+1000 as &#x27;涨薪后&#x27;,deptno from emp where sal &lt; 2500;</span><br><span class="line">select empno,ename,sal,comm,sal+comm from emp;  -- ？？？后面再说</span><br><span class="line">-- 去重操作：</span><br><span class="line">select job from emp;</span><br><span class="line">select distinct job from emp;</span><br><span class="line">select job,deptno from emp;</span><br><span class="line">select distinct job,deptno from emp; -- 对后面的所有列组合 去重 ，而不是单独的某一列去重</span><br><span class="line">-- 排序：</span><br><span class="line">select * from emp order by sal; -- 默认情况下是按照升序排列的</span><br><span class="line">select * from emp order by sal asc; -- asc 升序，可以默认不写</span><br><span class="line">select * from emp order by sal desc; -- desc 降序</span><br><span class="line">select * from emp order by sal asc ,deptno desc; -- 在工资升序的情况下，deptno按照降序排列</span><br></pre></td></tr></table></figure>



<h3 id="2-2-where子句"><a href="#2-2-where子句" class="headerlink" title="2.2 where子句"></a>2.2 where子句</h3><p>将过滤条件放在where子句的后面，可以筛选/过滤出我们想要的符合条件的数据</p>
<ul>
<li><p>加关系运算符</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- where 子句 + 关系运算符</span><br><span class="line">select * from emp where deptno = 10;</span><br><span class="line">select * from emp where deptno &gt; 10;</span><br><span class="line">select * from emp where deptno &gt;= 10;</span><br><span class="line">select * from emp where deptno &lt; 10;</span><br><span class="line">select * from emp where deptno &lt;= 10;</span><br><span class="line">select * from emp where deptno &lt;&gt; 10;</span><br><span class="line">select * from emp where deptno != 10;</span><br><span class="line">select * from emp where job = &#x27;CLERK&#x27;; </span><br><span class="line">select * from emp where job = &#x27;clerk&#x27;; -- 默认情况下不区分大小写 </span><br><span class="line">select * from emp where binary job = &#x27;clerk&#x27;; -- binary区分大小写</span><br><span class="line">select * from emp where hiredate &lt; &#x27;1981-12-25&#x27;;</span><br></pre></td></tr></table></figure></li>
<li><p>加逻辑运算符</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- where 子句 + 逻辑运算符：and </span><br><span class="line">select * from emp where sal &gt; 1500 and sal &lt; 3000;  -- (1500,3000)</span><br><span class="line">select * from emp where sal &gt; 1500 &amp;&amp; sal &lt; 3000; </span><br><span class="line">select * from emp where sal &gt; 1500 and sal &lt; 3000 order by sal;</span><br><span class="line">select * from emp where sal between 1500 and 3000; -- [1500,3000]</span><br><span class="line">-- where 子句 + 逻辑运算符：or</span><br><span class="line">select * from emp where deptno = 10 or deptno = 20;</span><br><span class="line">select * from emp where deptno = 10 || deptno = 20;</span><br><span class="line">select * from emp where deptno in (10,20);</span><br><span class="line">select * from emp where job in (&#x27;MANAGER&#x27;,&#x27;CLERK&#x27;,&#x27;ANALYST&#x27;);</span><br></pre></td></tr></table></figure></li>
<li><p>加模糊查询</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- where子句 + 模糊查询：</span><br><span class="line">-- 查询名字中带A的员工  -- %代表任意多个字符 0,1,2，.....</span><br><span class="line">select * from emp where ename like &#x27;%A%&#x27; ;</span><br><span class="line">-- -任意一个字符</span><br><span class="line">select * from emp where ename like &#x27;__A%&#x27; ;</span><br></pre></td></tr></table></figure></li>
<li><p>关于null的判断</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 关于null的判断：</span><br><span class="line">select * from emp where comm is null;</span><br><span class="line">select * from emp where comm is not null;</span><br></pre></td></tr></table></figure></li>
<li><p>小括号的使用：因为不同运算符的优先级别不同，加括号为了可读性</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 小括号的使用  ：因为不同的运算符的优先级别不同，加括号为了可读性</span><br><span class="line">select * from emp where job = &#x27;SALESMAN&#x27; or job = &#x27;CLERK&#x27; and sal &gt;=1500; -- 先and再or  and &gt; or</span><br><span class="line">select * from emp where job = &#x27;SALESMAN&#x27; or (job = &#x27;CLERK&#x27; and sal &gt;=1500); </span><br><span class="line">select * from emp where (job = &#x27;SALESMAN&#x27; or job = &#x27;CLERK&#x27;) and sal &gt;=1500;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="2-3-函数"><a href="#2-3-函数" class="headerlink" title="2.3 函数"></a>2.3 函数</h3><p><em><strong>除了多行函数（max,min,count,sum,avg），都是单行函数</strong></em></p>
<h4 id="单行函数"><a href="#单行函数" class="headerlink" title="- 单行函数"></a>- 单行函数</h4><h5 id="1-字符串函数"><a href="#1-字符串函数" class="headerlink" title="1. 字符串函数"></a>1. 字符串函数</h5><table>
<thead>
<tr>
<th><strong>函数</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>CONCAT(str1, str2, ···, strn)</td>
<td>将str1、str2···strn拼接成一个新的字符串</td>
</tr>
<tr>
<td>INSERT(str, index, n,  newstr)</td>
<td>将字符串str从第index位置开始的n个字符替换成字符串newstr</td>
</tr>
<tr>
<td>LENGTH(str)</td>
<td>获取字符串str的长度</td>
</tr>
<tr>
<td>LOWER(str)</td>
<td>将字符串str中的每个字符转换为小写</td>
</tr>
<tr>
<td>UPPER(str)</td>
<td>将字符串str中的每个字符转换为大写</td>
</tr>
<tr>
<td>LEFT(str, n)</td>
<td>获取字符串str最左边的n个字符</td>
</tr>
<tr>
<td>RIGHT(str, n)</td>
<td>获取字符串str最右边的n个字符</td>
</tr>
<tr>
<td>LPAD(str, n, pad)</td>
<td>使用字符串pad在str的最左边进行填充，直到长度为n个字符为止</td>
</tr>
<tr>
<td>RPAD(str, n, pad)</td>
<td>使用字符串pad在str的最右边进行填充，直到长度为n个字符为止</td>
</tr>
<tr>
<td>LTRIM(str)</td>
<td>去除字符串str左侧的空格</td>
</tr>
<tr>
<td>RTRIM(str)</td>
<td>去除字符串str右侧的空格</td>
</tr>
<tr>
<td>TRIM(str)</td>
<td>去除字符串str左右两侧的空格</td>
</tr>
<tr>
<td>REPLACE(str,oldstr,newstr)</td>
<td>用字符串newstr替换字符串str中所有的子字符串oldstr</td>
</tr>
<tr>
<td>REVERSE(str)</td>
<td>将字符串str中的字符逆序</td>
</tr>
<tr>
<td>STRCMP(str1,  str2)</td>
<td>比较字符串str1和str2的大小</td>
</tr>
<tr>
<td>SUBSTRING(str,index,n)</td>
<td>获取从字符串str的index位置开始的n个字符</td>
</tr>
</tbody></table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 1.字符串函数</span><br><span class="line">select ename,length(ename),substring(ename,2,3) from emp;</span><br><span class="line">-- substring字符串截取，2:从字符下标为2开始，3：截取长度3    （下标从1开始）</span><br></pre></td></tr></table></figure>

<p>显示结果：</p>
<img src="/2021/05/07/MySQL/20210630210116.png" alt="image-20210630210115889" style="zoom:50%;">



<h5 id="2-数值函数"><a href="#2-数值函数" class="headerlink" title="2. 数值函数"></a>2. 数值函数</h5><table>
<thead>
<tr>
<th align="left"><strong>函数</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td align="left">ABS(num)</td>
<td>返回num的绝对值</td>
</tr>
<tr>
<td align="left">CEIL(num)</td>
<td>返回大于num的最小整数（向上取整）</td>
</tr>
<tr>
<td align="left">FLOOR(num)</td>
<td>返回小于num的最大整数（向下取整）</td>
</tr>
<tr>
<td align="left">MOD(num1, num2)</td>
<td>返回num1/num2的余数（取模）</td>
</tr>
<tr>
<td align="left">PI()</td>
<td>返回圆周率的值</td>
</tr>
<tr>
<td align="left">POW(num,n)/POWER(num,  n)</td>
<td>返回num的n次方</td>
</tr>
<tr>
<td align="left">RAND(num)</td>
<td>返回0~1之间的随机数</td>
</tr>
<tr>
<td align="left">ROUND(num, n)</td>
<td>返回x四舍五入后的值，该值保留到小数点后n位</td>
</tr>
<tr>
<td align="left">TRUNCATE(num, n)</td>
<td>返回num被舍去至小数点后n位的值</td>
</tr>
</tbody></table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 2.数值函数</span><br><span class="line">select abs(-5),ceil(5.3),floor(5.9),round(3.14) from dual; -- dual实际就是一个伪表</span><br><span class="line">select abs(-5) 绝对值,ceil(5.3) 向上取整,floor(5.9) 向下取整,round(3.14) 四舍五入;  </span><br><span class="line">-- 如果没有where条件的话，from dual可以省略不写</span><br><span class="line">select ceil(sal) from emp;</span><br><span class="line">select 10/3,10%3,mod(10,3) ;</span><br></pre></td></tr></table></figure>

<p>显示结果：</p>
<img src="/2021/05/07/MySQL/20210630210456.png" alt="image-20210630210456370" style="zoom:50%;">



<h5 id="3-日期与时间函数"><a href="#3-日期与时间函数" class="headerlink" title="3. 日期与时间函数"></a>3. 日期与时间函数</h5><table>
<thead>
<tr>
<th><strong>函数</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>CURDATE()</td>
<td>返回当前日期</td>
</tr>
<tr>
<td>CURTIME()</td>
<td>返回当前时间</td>
</tr>
<tr>
<td>NOW()</td>
<td>返回当前日期和时间</td>
</tr>
<tr>
<td>SYSDATE()</td>
<td>返回该函数执行时的日期和时间</td>
</tr>
<tr>
<td>DAYOFYEAR(date)</td>
<td>返回日期date为一年中的第几天</td>
</tr>
<tr>
<td>WEEK(date)/WEEKOFYEAR(date)</td>
<td>返回日期date为一年中的第几周</td>
</tr>
<tr>
<td>DATE_FORMAT(date,  format)</td>
<td>返回按字符串format格式化后的日期date</td>
</tr>
<tr>
<td>DATE_ADD(date,  INTERVAL expr unit)    /ADDDATE(date,  INTERVAL expr unit)</td>
<td>返回date加上一个时间间隔后的新时间值</td>
</tr>
<tr>
<td>DATE_SUB(date,  INTERVAL expr unit)    /SUBDATE(date,  INTERVAL expr unit)</td>
<td>返回date减去一个时间间隔后的新时间值</td>
</tr>
<tr>
<td>DATEDIFF(date1,  date2)</td>
<td>返回起始日期date1与结束日期date2之间的间隔天数</td>
</tr>
</tbody></table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 3.日期与时间函数 </span><br><span class="line">select * from emp;</span><br><span class="line">select curdate(),curtime() ; -- curdate()年月日 curtime()时分秒</span><br><span class="line">select now(),sysdate(),sleep(3),now(),sysdate() from dual; -- now(),sysdate() 年月日时分秒</span><br><span class="line">insert into emp values (9999,&#x27;lili&#x27;,&#x27;SALASMAN&#x27;,7698,now(),1000,null,30);</span><br><span class="line">-- now()可以表示年月日时分秒，但是插入数据的时候还是要参照表的结构的</span><br><span class="line">desc emp;</span><br></pre></td></tr></table></figure>



<img src="/2021/05/07/MySQL/20210630223758.png" alt="image-20210630223758495" style="zoom:50%;">

<img src="/2021/05/07/MySQL/20210630223819.png" alt="image-20210630223819827" style="zoom:50%;">

<img src="/2021/05/07/MySQL/20210630223829.png" alt="image-20210630223829883" style="zoom:50%;">

<h5 id="4-流程函数"><a href="#4-流程函数" class="headerlink" title="4. 流程函数"></a>4. 流程函数</h5><img src="/2021/05/07/MySQL/20210630224323.png" alt="image-20210630224323874" style="zoom:67%;">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 4.流程函数</span><br><span class="line">-- if相关</span><br><span class="line">select empno,ename,sal,if(sal&gt;=2500,&#x27;高薪&#x27;,&#x27;底薪&#x27;) as &#x27;薪资等级&#x27; from emp; -- if-else 双分支结构</span><br><span class="line">select empno,ename,sal,comm,sal+ifnull(comm,0) from emp; -- 如果comm是null，那么取值为0 -- 单分支</span><br><span class="line">select nullif(1,1),nullif(1,2) from dual; --  如果value1等于value2，则返回null，否则返回value1  </span><br><span class="line">-- case相关：</span><br><span class="line">-- case等值判断</span><br><span class="line">select empno,ename,job,</span><br><span class="line">case job </span><br><span class="line"> when &#x27;CLERK&#x27; then &#x27;店员&#x27;</span><br><span class="line"> when &#x27;SALESMAN&#x27;  then &#x27;销售&#x27;</span><br><span class="line"> when &#x27;MANAGER&#x27; then &#x27;经理&#x27;</span><br><span class="line"> else &#x27;其他&#x27;</span><br><span class="line">end &#x27;岗位&#x27;,</span><br><span class="line">sal from emp;</span><br><span class="line">-- case区间判断:</span><br><span class="line">select empno,ename,sal,</span><br><span class="line">case </span><br><span class="line"> when sal&lt;=1000 then &#x27;A&#x27;</span><br><span class="line"> when sal&lt;=2000 then &#x27;B&#x27;</span><br><span class="line"> when sal&lt;=3000 then &#x27;C&#x27;</span><br><span class="line"> else &#x27;D&#x27;</span><br><span class="line">end &#x27;工资等级&#x27;,</span><br><span class="line">deptno from emp;</span><br><span class="line">from emp;</span><br></pre></td></tr></table></figure>



<h5 id="5-JSON函数"><a href="#5-JSON函数" class="headerlink" title="5. JSON函数"></a>5. JSON函数</h5><img src="/2021/05/07/MySQL/20210630224430.png" alt="image-20210630224430595" style="zoom:67%;">



<h5 id="6-其他函数"><a href="#6-其他函数" class="headerlink" title="6. 其他函数"></a>6. 其他函数</h5><img src="/2021/05/07/MySQL/20210630224453.png" alt="image-20210630224453894" style="zoom:67%;">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> -- 6.其他函数</span><br><span class="line">select database(),user(),version() from dual;</span><br></pre></td></tr></table></figure>



<h4 id="多行函数"><a href="#多行函数" class="headerlink" title="- 多行函数"></a>- 多行函数</h4><p>对一组数据进行运算，针对一组数据（多行记录）只返回一个结果，也称<strong>分组函数</strong></p>
<img src="/2021/05/07/MySQL/20210630224611.png" alt="image-20210630224611608" style="zoom: 67%;">

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 多行函数：</span><br><span class="line">select max(sal),min(sal),count(sal),sum(sal),sum(sal)/count(sal),avg(sal) from emp;</span><br><span class="line">select * from emp;</span><br><span class="line">-- 多行函数自动忽略null值</span><br><span class="line">select max(comm),min(comm),count(comm),sum(comm),sum(comm)/count(comm),avg(comm) from emp;</span><br><span class="line">-- max(),min(),count()针对所有类型   sum(),avg() 只针对数值型类型有效</span><br><span class="line">select max(ename),min(ename),count(ename),sum(ename),avg(ename) from emp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- count --计数   </span><br><span class="line">-- 统计表的记录数：方式1：</span><br><span class="line">select * from emp;</span><br><span class="line">select count(ename) from emp;</span><br><span class="line">select count(*) from emp;</span><br><span class="line">-- 统计表的记录数：方式2</span><br><span class="line">select 1 from dual;</span><br><span class="line">select 1 from emp;</span><br><span class="line">select count(1) from emp;</span><br></pre></td></tr></table></figure>



<h3 id="2-4-分组与筛选"><a href="#2-4-分组与筛选" class="headerlink" title="2.4 分组与筛选"></a>2.4 分组与筛选</h3><h4 id="group-by-分组"><a href="#group-by-分组" class="headerlink" title="group by 分组"></a>group by 分组</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp;</span><br><span class="line">-- 统计各个部门的平均工资 </span><br><span class="line">select deptno,avg(sal) from emp; -- 字段和多行函数不可以同时使用</span><br><span class="line">select deptno,avg(sal) from emp group by deptno; -- 字段和多行函数不可以同时使用,除非这个字段属于分组</span><br><span class="line">select deptno,avg(sal) from emp group by deptno order by deptno desc;</span><br><span class="line">-- 统计各个岗位的平均工资 统计各个岗位的</span><br><span class="line">select job,avg(sal) from emp group by job;</span><br><span class="line">select job,lower(job),avg(sal) from emp group by job;</span><br></pre></td></tr></table></figure>

<h4 id="having-分组后筛选"><a href="#having-分组后筛选" class="headerlink" title="having 分组后筛选"></a>having 分组后筛选</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 统计各个部门的平均工资 ,只显示平均工资2000以上的  - 分组以后进行二次筛选 having</span><br><span class="line">select deptno,avg(sal) from emp group by deptno having avg(sal) &gt; 2000;</span><br><span class="line">select deptno,avg(sal) 平均工资 from emp group by deptno having 平均工资 &gt; 2000;</span><br><span class="line">select deptno,avg(sal) 平均工资 from emp group by deptno having 平均工资 &gt; 2000 order by deptno desc;</span><br></pre></td></tr></table></figure>

<p>where在分组前进行过滤的，having在分组后进行后滤。</p>
<p>对比实例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 对比实例：统计各个岗位的平均工资,除了MANAGER</span><br><span class="line">-- 方法1：</span><br><span class="line">select job,avg(sal) from emp where job != &#x27;MANAGER&#x27; group by job;</span><br><span class="line">-- 方法2：</span><br><span class="line">select job,avg(sal) from emp group by job having job != &#x27;MANAGER&#x27; ;</span><br><span class="line">-- where在分组前进行过滤的，having在分组后进行后滤。</span><br></pre></td></tr></table></figure>

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h4 id="1-select语句总结"><a href="#1-select语句总结" class="headerlink" title="[1] select语句总结"></a>[1] select语句总结</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select column, group_function(column) </span><br><span class="line">from table </span><br><span class="line">[where condition] </span><br><span class="line">[group by  group_by_expression] </span><br><span class="line">[having group_condition] </span><br><span class="line">[order by column]; </span><br></pre></td></tr></table></figure>

<p>注意：顺序固定，不可以改变顺序</p>
<h4 id="2-select语句的执行顺序"><a href="#2-select语句的执行顺序" class="headerlink" title="[2] select语句的执行顺序"></a>[2] select语句的执行顺序</h4><p>from — where — group  by —  select — having — order  by</p>
<h4 id="3-单表查询练习"><a href="#3-单表查询练习" class="headerlink" title="[3] 单表查询练习"></a>[3] 单表查询练习</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 单表查询练习：</span><br><span class="line">-- 列出工资最小值小于2000的职位</span><br><span class="line">select job,min(sal)</span><br><span class="line">from emp</span><br><span class="line">group by job</span><br><span class="line">having min(sal) &lt; 2000;</span><br><span class="line">-- 列出平均工资大于1200元的部门和工作搭配组合</span><br><span class="line">select deptno,job,avg(sal)</span><br><span class="line">from emp</span><br><span class="line">group by deptno,job</span><br><span class="line">having avg(sal) &gt; 1200</span><br><span class="line">order by avg(sal);</span><br><span class="line">-- 统计[人数小于4的]部门的平均工资。 </span><br><span class="line">select deptno,count(ename),avg(sal) -- 这里可用 count(1)</span><br><span class="line">from emp</span><br><span class="line">group by deptno</span><br><span class="line">having count(ename) &lt; 4;</span><br><span class="line"></span><br><span class="line">-- 统计各部门的最高工资，排除最高工资小于3000的部门。</span><br><span class="line">select deptno,max(sal)</span><br><span class="line">from emp</span><br><span class="line">group by deptno</span><br><span class="line">having max(sal) &gt;= 3000;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="3-多表查询"><a href="#3-多表查询" class="headerlink" title="3.  多表查询"></a>3.  多表查询</h2><h3 id="3-1-交叉连接-cross-join"><a href="#3-1-交叉连接-cross-join" class="headerlink" title="3.1  交叉连接 cross join"></a>3.1  交叉连接 cross join</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select *</span><br><span class="line">from emp</span><br><span class="line">cross join dept;</span><br></pre></td></tr></table></figure>



<h3 id="3-2-自然连接-natural"><a href="#3-2-自然连接-natural" class="headerlink" title="3.2  自然连接 natural"></a>3.2  自然连接 natural</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * </span><br><span class="line">from emp</span><br><span class="line">natural join dept;</span><br></pre></td></tr></table></figure>

<p>优点：自动匹配所有的同名列 ，同名列只显示一次，简单</p>
<p>缺点：查询字段的时候，没有指定字段对应的数据库表，效率低</p>
<p><strong>解决——指定表名</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select emp.empno,emp.enaem,emp.sal,dept.dname,dept.loc,dept.deptno</span><br><span class="line">from emp</span><br><span class="line">natural join dept;</span><br></pre></td></tr></table></figure>

<p>缺点：表名太长 </p>
<p><strong>解决——起表名</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select e.empno,e.ename,e.sal,d.dname,d.loc,d.deptno</span><br><span class="line">from emp e</span><br><span class="line">natural join dept d;</span><br></pre></td></tr></table></figure>

<p>缺点：会自动匹配所有表中同名的字段。有时候我们只需要部分相同的字段</p>
<h3 id="3-3-内连接-inner-join"><a href="#3-3-内连接-inner-join" class="headerlink" title="3.3 内连接 inner join"></a>3.3 内连接 inner join</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * </span><br><span class="line">from emp e</span><br><span class="line">inner join dept d </span><br><span class="line">using(deptno); -- 同名字段才有效</span><br></pre></td></tr></table></figure>

<p>缺点：连接的表字段不同时using无法使用。</p>
<p>解决——<strong>使用on子句</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select *</span><br><span class="line">from emp e</span><br><span class="line">inner join dept d -- 使用on的时候inner可以省略</span><br><span class="line">on e.deptno = d.deptno;</span><br></pre></td></tr></table></figure>





<h3 id="3-4-外连接-outer-join"><a href="#3-4-外连接-outer-join" class="headerlink" title="3.4 外连接  outer  join"></a>3.4 外连接  outer  join</h3><ul>
<li>内连接只显示匹配的数据，例如一个部门没有员工就不会显示</li>
<li><strong>外连接可以显示不匹配的数据</strong></li>
<li>outer都可以省略的</li>
</ul>
<h5 id="左外连接"><a href="#左外连接" class="headerlink" title="左外连接"></a>左外连接</h5><p>左边的那个表的信息，即使不匹配也可以查看出结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * </span><br><span class="line">from emp</span><br><span class="line">left outer join dept d</span><br><span class="line">on e.deptno = d.deptno</span><br></pre></td></tr></table></figure>

<p>结果</p>
<img src="/2021/05/07/MySQL/20210701170246.png" alt="image-20210701170246009" style="zoom:67%;">

<h5 id="右外连接"><a href="#右外连接" class="headerlink" title="右外连接"></a>右外连接</h5><p>右边的那个表的信息，即使不匹配也可以查看出结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select *</span><br><span class="line">from emp e</span><br><span class="line">right outer join dept d</span><br><span class="line">on e.deptno = d.deptno;</span><br></pre></td></tr></table></figure>

<p>结果</p>
<img src="/2021/05/07/MySQL/20210701163643.png" alt="image-20210701163643122" style="zoom:67%;">

<h5 id="全外连接"><a href="#全外连接" class="headerlink" title="全外连接"></a>全外连接</h5><p>这个语法在mysql里面不支持，oracle才支持</p>
<p>为了代替 可以取左外连接和右外连接的并集</p>
<h6 id="并集-union"><a href="#并集-union" class="headerlink" title="并集 union"></a>并集 union</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * </span><br><span class="line">from emp</span><br><span class="line">left outer join dept d</span><br><span class="line">on e.deptno = d.deptno</span><br><span class="line">union -- 并集，不去重，效率低</span><br><span class="line">select *</span><br><span class="line">from emp e</span><br><span class="line">right outer join dept d</span><br><span class="line">on e.deptno = d.deptno;</span><br></pre></td></tr></table></figure>

<p>结果</p>
<img src="/2021/05/07/MySQL/20210701170831.png" alt="image-20210701170831388" style="zoom:67%;">

<h6 id="union-all"><a href="#union-all" class="headerlink" title="union all"></a>union all</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * </span><br><span class="line">from emp</span><br><span class="line">left outer join dept d</span><br><span class="line">on e.deptno = d.deptno</span><br><span class="line">union  all -- 不去重的并集， 效率高</span><br><span class="line">select *</span><br><span class="line">from emp e</span><br><span class="line">right outer join dept d</span><br><span class="line">on e.deptno = d.deptno;</span><br></pre></td></tr></table></figure>

<p>结果</p>
<img src="/2021/05/07/MySQL/20210701171121.png" alt="image-20210701171121236" style="zoom:67%;">



<h3 id="3-5-三表查询"><a href="#3-5-三表查询" class="headerlink" title="3.5 三表查询"></a>3.5 三表查询</h3><p>案例：查询员工的编号、姓名、薪水、部门编号、部门名称、薪水等级</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp;</span><br><span class="line">select * from dept;</span><br><span class="line">select * from salgrade；</span><br><span class="line"></span><br><span class="line">select *</span><br><span class="line">from emp e</span><br><span class="line">right outer join dept d</span><br><span class="line">on e.deptno = d.deptno;</span><br><span class="line">-- 可以看做就是上面的结果是一张表，然后再和第三张表进行连接</span><br><span class="line">inner join salgrade s</span><br><span class="line">on e.sal between salgrade</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>结果</p>
<img src="/2021/05/07/MySQL/20210701184545.png" alt="image-20210701184545238" style="zoom:67%;">



<h3 id="3-6-自连接查询"><a href="#3-6-自连接查询" class="headerlink" title="3.6 自连接查询"></a>3.6 自连接查询</h3><p>相当于把本身表复制一份，本质与前面的连接没有区别</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查询员工的编号、姓名、上级编号,上级的姓名</span><br><span class="line">select * from emp;</span><br><span class="line">select e1.empno 员工编号,e1.ename 员工姓名,e1.mgr 领导编号,e2.ename 员工领导姓名</span><br><span class="line">from emp e1</span><br><span class="line">inner join emp e2</span><br><span class="line">on e1.mgr = e2.empno;</span><br><span class="line">-- 左外连接：</span><br><span class="line">select e1.empno 员工编号,e1.ename 员工姓名,e1.mgr 领导编号,e2.ename 员工领导姓名</span><br><span class="line">from emp e1</span><br><span class="line">left outer join emp e2</span><br><span class="line">on e1.mgr = e2.empno;</span><br></pre></td></tr></table></figure>

<p>结果</p>
<img src="/2021/05/07/MySQL/20210702094750.png" alt="image-20210702094750390" style="zoom:67%;">

<h3 id="补充：92语法的多表查询"><a href="#补充：92语法的多表查询" class="headerlink" title="补充：92语法的多表查询"></a>补充：92语法的多表查询</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查询员工的编号，员工姓名，薪水，员工部门编号，部门名称：</span><br><span class="line">select e.empno,e.ename,e.sal,e.deptno,d.dname</span><br><span class="line">from emp e,dept d</span><br><span class="line">-- 相当于99语法中的cross join ,出现笛卡尔积，没有意义</span><br><span class="line">select e.empno,e.ename,e.sal,e.deptno,d.dname</span><br><span class="line">from emp e,dept d</span><br><span class="line">where e.deptno = d.deptno;</span><br><span class="line">-- 相当于99语法中的natural join </span><br><span class="line">-- 查询员工的编号，员工姓名，薪水，员工部门编号，部门名称，查询出工资大于2000的员工</span><br><span class="line">select e.empno,e.ename,e.sal,e.deptno,d.dname</span><br><span class="line">from emp e,dept d</span><br><span class="line">where e.deptno = d.deptno and e.sal &gt; 2000;</span><br><span class="line">-- 查询员工的名字，岗位，上级编号，上级名称（自连接）：</span><br><span class="line">select e1.ename,e1.job,e1.mgr ,e2.ename </span><br><span class="line">from emp e1,emp e2</span><br><span class="line">where e1.mgr = e2.empno;</span><br><span class="line">-- 查询员工的编号、姓名、薪水、部门编号、部门名称、薪水等级</span><br><span class="line">select e.empno,e.ename,e.sal,e.deptno,d.dname,s.grade </span><br><span class="line">from emp e,dept d,salgrade s</span><br><span class="line">where e.deptno = d.deptno and e.sal &gt;= s.losal and e.sal &lt;= s.hisal;</span><br><span class="line">-- 总结：</span><br><span class="line">-- 1.92语法麻烦 </span><br><span class="line">-- 2.92语法中 表的连接条件 和  筛选条件  是放在一起的没有分开</span><br><span class="line">-- 3.99语法中提供了更多的查询连接类型：cross,natural,inner,outer </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h2 id="4-不相关子查询"><a href="#4-不相关子查询" class="headerlink" title="4. 不相关子查询"></a>4. 不相关子查询</h2><h3 id="引入-1"><a href="#引入-1" class="headerlink" title="引入"></a>引入</h3><p>要查询所有比“CLARK”工资高的员工的信息</p>
<p>需要两个命令而且第二个命令依托于第一个命令，会相互影响</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 命令一：查询clark的工资</span><br><span class="line">select sal from emp where ename = clark; -- 2450</span><br><span class="line">-- 命令二：查询所有比其工资高的员工信息</span><br><span class="line">select * from emp where sal &gt; 2450;</span><br></pre></td></tr></table></figure>

<p>子查询可以通过一个命令解决问题 !</p>
<h3 id="4-1-单行子查询"><a href="#4-1-单行子查询" class="headerlink" title="4.1  单行子查询"></a>4.1  单行子查询</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 将上面两个命令合并</span><br><span class="line">-- 查询工资高于平均工资的雇员的名字和工资</span><br><span class="line">select ename,sal</span><br><span class="line">from emp</span><br><span class="line">where sal &gt; (select sal from emp where sal &gt; avg(sal));</span><br><span class="line"> </span><br><span class="line">-- 查询和CLARK同一部门且比他工资低的雇员的名字和工资</span><br><span class="line">select ename,sal</span><br><span class="line">from emp</span><br><span class="line">where deptno = (select deptno from emp where ename=&#x27;CLARK&#x27;) </span><br><span class="line">	  and </span><br><span class="line">	  sal &lt; (select sal from emp where ename=&#x27;CLARK&#x27; );</span><br><span class="line"></span><br><span class="line">-- 查询职务和SCOTT相同，比SCOTT雇佣时间早的雇员信息</span><br><span class="line">select * </span><br><span class="line">from emp</span><br><span class="line">where job = (select job from emp where ename=&#x27;SCOTT&#x27;)</span><br><span class="line">	  and</span><br><span class="line">	  hiredate &lt; (select hiredate from emp where ename=&#x27;SCOTT&#x27;);</span><br><span class="line">	  </span><br></pre></td></tr></table></figure>

<h3 id="4-2-多行子查询"><a href="#4-2-多行子查询" class="headerlink" title="4.2  多行子查询"></a>4.2  多行子查询</h3><p>子查询查出来的记录为多条：</p>
<h5 id="实例一"><a href="#实例一" class="headerlink" title="实例一"></a>实例一</h5><ul>
<li>查询部门20中职务同部门10的雇员一样的雇员信息。</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查询雇员信息</span><br><span class="line">select * from emp;</span><br><span class="line">-- 查询部门20中的雇员信息</span><br><span class="line">select * from emp where deptno = 20;-- CLERK,MANAGER,ANALYST</span><br><span class="line">-- 部门10的雇员的职务：</span><br><span class="line">select job from emp where deptno = 10; -- MANAGER,PRESIDENT,CLERK</span><br></pre></td></tr></table></figure>

<p>如果使用单行子查询，就会报错  -&gt;Subquery returns more than 1 row</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp </span><br><span class="line">where deptno = 20 </span><br><span class="line">and job in (select job from emp where deptno = 10)</span><br><span class="line">-- &gt; Subquery returns more than 1 row</span><br></pre></td></tr></table></figure>

<p>多行子查询可以解决</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp </span><br><span class="line">where deptno = 20 </span><br><span class="line">and job = any(select job from emp where deptno = 10) -- any</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="实例二-1"><a href="#实例二-1" class="headerlink" title="实例二"></a>实例二</h5><ul>
<li><p>查询工资比所有的“SALESMAN”都高的雇员的编号、名字和工资</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查询雇员的编号、名字和工资</span><br><span class="line">select empno,ename,sal from emp</span><br><span class="line">-- “SALESMAN”的工资：</span><br><span class="line">select sal from emp where job = &#x27;SALESMAN&#x27;</span><br><span class="line">-- 查询工资比所有的“SALESMAN”都高的雇员的编号、名字和工资。</span><br><span class="line">-- 多行子查询：</span><br><span class="line">select empno,ename,sal </span><br><span class="line">from emp </span><br><span class="line">where sal &gt; all(select sal from emp where job = &#x27;SALESMAN&#x27;);</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 单行子查询：</span><br><span class="line">select empno,ename,sal </span><br><span class="line">from emp </span><br><span class="line">where sal &gt; (select max(sal) from emp where job = &#x27;SALESMAN&#x27;);</span><br></pre></td></tr></table></figure></li>
</ul>
<h5 id="实例三-1"><a href="#实例三-1" class="headerlink" title="实例三"></a>实例三</h5><ul>
<li>查询工资低于任意一个“CLERK”的工资的雇员信息。  </li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查询雇员信息</span><br><span class="line">select * from emp;</span><br><span class="line">-- 查询工资低于任意一个“CLERK”的工资的雇员信息</span><br><span class="line">select * </span><br><span class="line">from emp</span><br><span class="line">where sal &lt; any(select sal from emp where job = &#x27;CLERK&#x27;)</span><br><span class="line">and job != &#x27;CLERK&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 单行子查询：</span><br><span class="line">select * </span><br><span class="line">from emp</span><br><span class="line">where sal &lt; (select max(sal) from emp where job = &#x27;CLERK&#x27;)</span><br><span class="line">and job != &#x27;CLERK&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="5-相关子查询"><a href="#5-相关子查询" class="headerlink" title="5. 相关子查询"></a>5. 相关子查询</h2><h3 id="引入-2"><a href="#引入-2" class="headerlink" title="引入"></a>引入</h3><ul>
<li><p>不相关的子查询引入：<br>不相关的子查询：子查询可以独立运行，先运行子查询，再运行外查询。<br>相关子查询：子查询不可以独立运行，并且先运行外查询，再运行子查询</p>
</li>
<li><p>不相关的子查询优缺点：<br>好处：简单   功能强大（一些使用不相关子查询不能实现或者实现繁琐的子查询，可以使用相关子查询实现）<br>缺点：稍难理解</p>
</li>
</ul>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><ol>
<li><p>查询各个部门最高工资的员工</p>
<ul>
<li>不相关子查询</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp where deptno = 10 and sal = (select max(sal) from emp where deptnp = 10)</span><br><span class="line">union</span><br><span class="line">select * from emp where deptno = 20 and sal = (select max(sal) from emp where deptno = 20)</span><br><span class="line">union</span><br><span class="line">select * from emp where deptno = 30 and sal = (select max(sal) from emp where deptno = 30);</span><br></pre></td></tr></table></figure>

<p>太复杂了:unamused:</p>
<ul>
<li>相关子查询</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp e where sal = (select max(sal) from emp where deptno = e.deptno)</span><br></pre></td></tr></table></figure>

<p>简单多啦:happy:</p>
</li>
<li><p>查询工高于所在岗位的平均工资的那些员工</p>
<ul>
<li>不相关子查询</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp where job = &#x27;&#x27; and sal &gt;= (select avg(sal) from emp where job = &#x27;&#x27;)</span><br><span class="line">union ....</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>相关子查询</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp e where sal &gt;= (select avg(sal) from emp where job = e.job);</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="数据库对象"><a href="#数据库对象" class="headerlink" title="数据库对象"></a>数据库对象</h1><h2 id="1-事务"><a href="#1-事务" class="headerlink" title="1. 事务"></a>1. 事务</h2><p><strong>事务（Transaction）</strong>是用来维护数据库完整性的，它能够保证一系列的MySQL操作要么全部执行，要么全不执行。</p>
<p>eg1.<br>转账操作：A账户要转账给B账户，那么A账户上减少的钱数和B账户上增加的钱数必须一致，也就是说A账户的转出操作和B账户的转入操作要么全部执行，要么全不执行；如果其中一个操作出现异常而没有执行的话，就会导致账户A和账户B的转入转出金额不一致的情况，为而事实上这种情况是不允许发生的，所以为了防止这种情况的发生，需要使用事务处理。<br>eg2.<br>在淘宝购物下订单的时候，商家库存要减少，订单增加记录，付款我的账号少100元…操作要么全部执行，要么全不执行</p>
<h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>事务（Transaction）指的是一个操作序列，该操作序列中的多个操作要么都做，要么都不做，是一个不可分割的工作单位，是数据库环境中的逻辑工作单位，由DBMS（数据库管理系统）中的事务管理子系统负责事务的处理。<br>目前常用的存储引擎有InnoDB（MySQL5.5以后默认的存储引擎）和MyISAM（MySQL5.5之前默认的存储引擎），其中InnoDB支持事务处理机制，而MyISAM不支持。</p>
<h4 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h4><img src="/2021/05/07/MySQL/20210703110321.png" alt="image-20210703110320474" style="zoom: 50%;">

<p>事务处理可以确保除非事务性序列内的所有操作都成功完成，否则不会永久更新面向数据的资源。通过将一组相关操作组合为一个要么全部成功要么全部失败的序列，可以简化错误恢复并使应用程序更加可靠。<br>但并不是所有的操作序列都可以称为事务，这是因为一个操作序列要成为事务，必须满足事务的原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）和持久性（Durability）。这四个特性简称为<strong>ACID特性。</strong></p>
<ol>
<li><strong>原子性</strong><pre><code>原子是自然界最小的颗粒，具有不可再分的特性。事务中的所有操作可以看做一个原子，事务是应用中不可再分的最小的逻辑执行体。
使用事务对数据进行修改的操作序列，要么全部执行，要么全不执行。通常，某个事务中的操作都具有共同的目标，并且是相互依赖的。如果数据库系统只执行这些操作中的一部分，则可能会破坏事务的总体目标，而原子性消除了系统只处理部分操作的可能性。
</code></pre>
</li>
<li><strong>一致性</strong><br>一致性是指事务执行的结果必须使数据库从一个一致性状态，变到另一个一致性状态。当数据库中只包含事务成功提交的结果时，数据库处于一致性状态。一致性是通过原子性来保证的。<br>例如：在转账时，只有保证转出和转入的金额一致才能构成事务。也就是说事务发生前和发生后，数据的总额依然匹配。</li>
<li><strong>隔离性</strong><br>隔离性是指各个事务的执行互不干扰，任意一个事务的内部操作对其他并发的事务，都是隔离的。也就是说：并发执行的事务之间既不能看到对方的中间状态，也不能相互影响。<br>例如：在转账时，只有当A账户中的转出和B账户中转入操作都执行成功后才能看到A账户中的金额减少以及B账户中的金额增多。并且其他的事务对于转账操作的事务是不能产生任何影响的。</li>
<li><strong>持久性</strong><br>持久性指事务一旦提交，对数据所做的任何改变，都要记录到永久存储器中，通常是保存进物理数据库，即使数据库出现故障，提交的数据也应该能够恢复。但如果是由于外部原因导致的数据库故障，如硬盘被损坏，那么之前提交的数据则有可能会丢失。</li>
</ol>
<h5 id="实例：使用事务保证转账安全"><a href="#实例：使用事务保证转账安全" class="headerlink" title="实例：使用事务保证转账安全"></a>实例：使用事务保证转账安全</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 创建账户表：id\uname\balance</span><br><span class="line">create table account(</span><br><span class="line">        id int primary key auto_increment,</span><br><span class="line">        uname varchar(10) not null,</span><br><span class="line">        balance double</span><br><span class="line">);</span><br><span class="line">-- 查看账户表：</span><br><span class="line">select * from account;</span><br><span class="line">-- 在表中插入数据：</span><br><span class="line">insert into account values (null,&#x27;丽丽&#x27;,2000),(null,&#x27;小刚&#x27;,2000);</span><br><span class="line">-- 丽丽给小刚 转200元：</span><br><span class="line">update account set balance = balance - 200 where id = 1;</span><br><span class="line">update account set balance = balance + 200 where id = 2;</span><br><span class="line">-- 默认一个DML语句是一个事务，所以上面的操作执行了2个事务。</span><br><span class="line">update account set balance = balance - 200 where id = 1;</span><br><span class="line">update account set balance = balance2 + 200 where id = 2;</span><br></pre></td></tr></table></figure>

<p><strong>必须让上面的两个操作控制在一个事务中</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 手动开启事务：</span><br><span class="line">start transaction;</span><br><span class="line">-- 操作：</span><br><span class="line">update account set balance = balance - 200 where id = 1;</span><br><span class="line">update account set balance = balance + 200 where id = 2;</span><br><span class="line">-- 手动回滚：刚才执行的操作全部取消：</span><br><span class="line">rollback;</span><br><span class="line">-- 手动提交：</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure>

<p>在<strong>回滚和提交</strong>之前，数据库中的数据都是操作的缓存中的数据，而不是数据库的真实数据</p>
<h3 id="事务并发问题"><a href="#事务并发问题" class="headerlink" title="事务并发问题"></a>事务并发问题</h3><h5 id="脏读（Dirty-read）"><a href="#脏读（Dirty-read）" class="headerlink" title="脏读（Dirty read）"></a>脏读（Dirty read）</h5><p>当一个事务正在访问数据并且对数据进行了修改，而这种修改还没有提交到数据库中，这时另外一个事务也访问了这个数据，然后使用了这个数据。因为这个数据是还没有提交的数据，那么另外一个事务读到的这个数据是“脏数据”，依据“脏数据”所做的操作可能是不正确的。</p>
<img src="/2021/05/07/MySQL/20210703111005.png" alt="image-20210703111005503" style="zoom:67%;">

<h5 id="不可重复读-（Unrepeatableread）"><a href="#不可重复读-（Unrepeatableread）" class="headerlink" title="不可重复读 （Unrepeatableread）"></a>不可重复读 （Unrepeatableread）</h5><p>指在一个事务内多次读同一数据。在这个事务还没有结束时，另一个事务也访问该数据。那么，在第一个事务中的两次读数据之间，由于第二个事务的修改导致第一个事务两次读取的数据可能不太一样。这就发生了在一个事务内两次读到的数据是不一样的情况，因此称为不可重复读。</p>
<img src="/2021/05/07/MySQL/20210703111018.png" alt="image-20210703111018492" style="zoom:67%;">

<h5 id="幻读-（Phantom-read）"><a href="#幻读-（Phantom-read）" class="headerlink" title="幻读 （Phantom read）"></a>幻读 （Phantom read）</h5><p>幻读与不可重复读类似。它发生在一个事务（T1）读取了几行数据，接着另一个并发事务（T2）插入了一些数据时。在随后的查询中，第一个事务（T1）就会发现多了一些原本不存在的记录，就好像发生了幻觉一样，所以称为幻读。</p>
 <img src="/2021/05/07/MySQL/20210703111036.png" alt="image-20210703111036154" style="zoom:67%;">

<p><strong>不可重复度和幻读区别：</strong> </p>
<p>不可重复读的重点是修改，幻读的重点在于新增或者删除。解决不可重复读的问题只需锁住满足条件的行，解决幻读需要锁表 。</p>
<p>例1（同样的条件, 你读取过的数据, 再次读取出来发现值不一样了 ）：事务1中的A先生读取自己的工资为 1000的操作还没完成，事务2中的B先生就修改了A的工资为2000，导 致A再读自己的工资时工资变为 2000；这就是不可重复读。</p>
<p>例2（同样的条件, 第1次和第2次读出来的记录数不一样 ）：假某工资单表中工资大于3000的有4人，事务1读取了所有工资大于3000的人，共查到4条记录，这时事务2 又插入了一条工资大于3000的记录，事务1再次读取时查到的记录就变为了5条，这样就导致了幻读 </p>
<h3 id="事务隔离级别"><a href="#事务隔离级别" class="headerlink" title="事务隔离级别"></a>事务隔离级别</h3><p>​    事务的隔离级别用于决定如何控制并发用户读写数据的操作。数据库是允许多用户并发访问的，如果多个用户同时开启事务并对同一数据进行读写操作的话，有可能会出现脏读、不可重复读和幻读问题，所以MySQL中提供了四种隔离级别来解决上述问题。</p>
<p>​    从低到高依次为<strong>READ UNCOMMITTED、READ COMMITTED、REPEATABLE READ以及SERIALIZABLE</strong>，隔离级别越低，越能支持高并发的数据库操作。      </p>
<img src="/2021/05/07/MySQL/20210703142738.png" alt="image-20210703142738514" style="zoom:67%;">                        

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查看默认的事务隔离级别  MySQL默认的是repeatable read  </span><br><span class="line">select @@transaction_isolation;  </span><br><span class="line">-- 设置事务的隔离级别   （设置当前会话的隔离级别）</span><br><span class="line">set session transaction isolation level read uncommitted;  </span><br><span class="line">set session transaction isolation level read committed;  </span><br><span class="line">set session transaction isolation level repeatable read;  -- 默认的</span><br><span class="line">set session transaction isolation level serializable;  </span><br><span class="line">start transaction ;</span><br><span class="line">select * from account where id = 1;</span><br></pre></td></tr></table></figure>

<h5 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h5><p>（必须是两个事务都开始以后执行的操作才会影响）</p>
<ul>
<li><p>在read uncommitted的情况下，开始两个事务：</p>
<ul>
<li>事务一</li>
</ul>
<img src="/2021/05/07/MySQL/20210703152258.png" alt="image-20210703145526739" style="zoom:67%;">

<ul>
<li>事务二</li>
</ul>
<img src="/2021/05/07/MySQL/05/07/MySQL/20210703152314.png" class title="image-20210703145443742"></li>
<li><p>事务一查询操作：</p>
<img src="/2021/05/07/MySQL/20210703152514.png" alt="image-20210703152514123" style="zoom:67%;"></li>
<li><p>事务二更新操作，且没提交</p>
<img src="/2021/05/07/MySQL/20210703152552.png" alt="image-20210703152552191" style="zoom:67%;"></li>
<li><p>事务一再次查询：</p>
<img src="/2021/05/07/MySQL/20210703152939.png" alt="image-20210703152939898" style="zoom:67%;">

<p>读到了在脏数据</p>
</li>
<li><p>如果设置为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set session transaction isolation level read committed;</span><br></pre></td></tr></table></figure>

<p>事务二就不会读到脏数据。</p>
</li>
</ul>
<h2 id="2-视图"><a href="#2-视图" class="headerlink" title="2. 视图"></a>2. 视图</h2><h4 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h4><p>视图（view）是一个从单张或多张基础数据表或其他视图中构建出来的虚拟表。同基础表一样，视图中也包含了一系列带有名称的列和行数据，但是数据库中只是存放视图的定义，也就是动态检索数据的查询语句，而并不存放视图中的数据，这些数据依旧存放于构建视图的基础表中，只有当用户使用视图是才去数据库请求相对应的数据，即视图中的数据是在引用视图时动态生成的。因此视图中的数据发生了变化，视图中相应的数据也会跟着改变。</p>
<p>PS：视图本质上就是：一个查询语句，是一个虚拟的表，不存在的表，你查看视图，其实就是查看视图对应的sql语句。</p>
<h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p>简化用户操作：视图可以使用户将注意力集中在所关心地数据上，而不需要关心数据表的结构、与其他表的关联条件以及查询条件等。</p>
<p>对机密数据提供安全保护：有了视图，就可以在设计数据库应用系统时，对不同的用户定义不同的视图，避免机密数据（如，敏感字段“salary”）出现在不应该看到这些数据的用户视图上。这样视图就自动提供了对机密数据的安全保护功能</p>
<h4 id="实例一：单表视图"><a href="#实例一：单表视图" class="headerlink" title="实例一：单表视图"></a>实例一：单表视图</h4><ul>
<li><p>创建/替换单表视图：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 创建/替换单表视图：</span><br><span class="line">create or replace view myview01</span><br><span class="line">as</span><br><span class="line">select empno,ename,job,deptno </span><br><span class="line">from emp</span><br><span class="line">where deptno = 20</span><br></pre></td></tr></table></figure></li>
<li><p>查看视图：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 查看视图：</span><br><span class="line">select * from myview01;</span><br></pre></td></tr></table></figure></li>
<li><p>向视图中插入满足条件的数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 在视图中插入数据：</span><br><span class="line">insert into myview01 (empno,ename,job,deptno) values (9999,&#x27;lili&#x27;,&#x27;CLERK&#x27;,20);</span><br></pre></td></tr></table></figure>

<p>查看视图：</p>
<img src="/2021/05/07/MySQL/20210703161609.png" alt="image-20210703161609044" style="zoom:67%;"></li>
<li><p>向视图中插入不满足条件的数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into myview01 (empno,ename,job,deptno) values (8888,&#x27;nana&#x27;,&#x27;CLERK&#x27;,30);</span><br></pre></td></tr></table></figure>

<p>查看原来的表，发现成功插进去了</p>
<img src="/2021/05/07/MySQL/20210703161731.png" alt="image-20210703161731377" style="zoom:67%;"></li>
<li><p>解决上面问题：</p>
<p>需要加上<strong>check option</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 创建/替换单表视图：</span><br><span class="line">create or replace view myview01</span><br><span class="line">as</span><br><span class="line">select empno,ename,job,deptno </span><br><span class="line">from emp</span><br><span class="line">where deptno = 20</span><br><span class="line">with check option;</span><br></pre></td></tr></table></figure>

<p>这样不满足条件的数据就不会轻易被加进去：</p>
<img src="/2021/05/07/MySQL/20210703162005.png" alt="image-20210703162005163" style="zoom:67%;"></li>
</ul>
<h4 id="实例二：多表视图"><a href="#实例二：多表视图" class="headerlink" title="实例二：多表视图"></a>实例二：多表视图</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 创建/替换多表视图：</span><br><span class="line">create or replace view myview02</span><br><span class="line">as </span><br><span class="line">select e.empno,e.ename,e.sal,d.deptno,d.dname</span><br><span class="line">from emp e</span><br><span class="line">join dept d</span><br><span class="line">on e.deptno = d.deptno</span><br><span class="line">where sal &gt; 2000 ;</span><br><span class="line">select * from myview02;</span><br></pre></td></tr></table></figure>

<h4 id="实例三：统计视图"><a href="#实例三：统计视图" class="headerlink" title="实例三：统计视图"></a>实例三：统计视图</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 创建统计视图：</span><br><span class="line">create or replace view myview03</span><br><span class="line">as</span><br><span class="line">select e.deptno,d.dname,avg(sal),min(sal),count(1)</span><br><span class="line">from emp e</span><br><span class="line">join dept d</span><br><span class="line">using(deptno)</span><br><span class="line">group by e.deptno ;</span><br><span class="line">select * from myview03;</span><br></pre></td></tr></table></figure>

<h4 id="实例四：基于视图的视图"><a href="#实例四：基于视图的视图" class="headerlink" title="实例四：基于视图的视图"></a>实例四：基于视图的视图</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 创建基于视图的视图：</span><br><span class="line">create or replace view myview04</span><br><span class="line">as</span><br><span class="line">select * from myview03 where deptno = 20;</span><br><span class="line">select * from myview04;</span><br></pre></td></tr></table></figure>



<h2 id="3-存储过程"><a href="#3-存储过程" class="headerlink" title="3. 存储过程"></a>3. 存储过程</h2><h4 id="概念-2"><a href="#概念-2" class="headerlink" title="概念"></a>概念</h4><ul>
<li><p>通过前面章节的学习，我们已经知道SQL是一种非常便利的语言。从数据库抽取数据，或者对特定的数据集中更新时，都能通过简洁直观的代码实现。</p>
</li>
<li><p>但是这个所谓的“简洁”也是有限制，SQL基本是一个命令实现一个处理，是所谓的非程序语言。</p>
</li>
<li><p>在不能编写流程的情况下，所有的处理只能通过一个个命令来实现。当然，通过使用连接及子查询，即使使用SQL的单一命令也能实现一些高级的处理，但是，其局限性是显而易见的。例如，在SQL中就很难实现针对不同条件进行不同的处理以及循环等功能。</p>
</li>
<li><p>这个时候就出现了存储过程这个概念，简单地说，存储过程就是数据库中保存(Stored)的一系列SQL命令（Procedure）的集合。也可以将其看作相互之间有关系的SQL命令组织在一起形成的一个小程序。</p>
</li>
</ul>
<h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h4><ul>
<li> 提高执行性能。存储过程执行效率之所高，在于普通的SQL语句，每次都会对语法分析，编译，执行，而存储过程只是在第一次执行语法分析，编译，执行，以后都是对结果进行调用。</li>
<li> 可减轻网络负担。使用存储过程，复杂的数据库操作也可以在数据库服务器中完成。只需要从客户端(或应用程序)传递给数据库必要的参数就行，比起需要多次传递SQL命令本身，这大大减轻了网络负担。</li>
<li> 可将数据库的处理黑匣子化。应用程序中完全不用考虑存储过程的内部详细处理，只需要知道调用哪个存储过程就可以了</li>
</ul>
<h4 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h4><ul>
<li><p>定义一个没有返回值的存储过程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 定义一个没有返回值 存储过程</span><br><span class="line">-- 实现：模糊查询操作：</span><br><span class="line">select * from emp where ename like &#x27;%A%&#x27;;</span><br><span class="line">create procedure mypro01(name varchar(10))</span><br><span class="line">begin</span><br><span class="line">        if name is null or name = &quot;&quot; then</span><br><span class="line">                select * from emp; -- 传入null，就查看全表</span><br><span class="line">        else</span><br><span class="line">    select * from emp where ename like concat(&#x27;%&#x27;,name,&#x27;%&#x27;); </span><br><span class="line">        end if;	</span><br><span class="line">end;</span><br><span class="line">-- 删除存储过程：</span><br><span class="line">drop procedure mypro01;</span><br><span class="line">-- 调用存储过程：</span><br><span class="line">call mypro01(null);</span><br><span class="line">call mypro01(&#x27;R&#x27;);</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<img src="/2021/05/07/MySQL/20210703171452.png" alt="image-20210703171452630" style="zoom: 50%;"></li>
<li><p>定义一个有返回值的存储过程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 定义一个有返回值的存储过程</span><br><span class="line">-- in 参数前面的in可以不写</span><br><span class="line">-- out </span><br><span class="line">-- found_rows() 是mysql定义的一个函数，作用返回查询结果的条数</span><br><span class="line">-- into </span><br><span class="line">create procedure mypro02 (in name varchar(10),out num int(4))</span><br><span class="line">begin </span><br><span class="line">		if name is null or name = &quot;&quot; then</span><br><span class="line">				select * from emp;</span><br><span class="line">		else </span><br><span class="line">				select * from emp where name like concat(&#x27;%&#x27;,name,&#x27;%&#x27;);</span><br><span class="line">		end if;</span><br><span class="line">		select found_rows() into num;</span><br><span class="line">end;</span><br><span class="line">-- 调用存储过程</span><br><span class="line">call mypro02(null,@num);</span><br><span class="line">select @num;</span><br><span class="line">call mypro02(&#x27;A&#x27;,@aaa); -- 传入的参数名不一定要一样</span><br><span class="line">select @aaa;</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<img src="/2021/05/07/MySQL/20210703191518.png" alt="image-20210703191518417" style="zoom:67%;"></li>
</ul>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>DataBase</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
</search>
